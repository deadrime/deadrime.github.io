[{"data":1,"prerenderedAt":3037},["ShallowReactive",2],{"post_/blog/js-built-in-methods":3,"surround/blog/js-built-in-methods":3028},{"id":4,"title":5,"body":6,"date":3015,"description":3016,"extension":3017,"meta":3018,"navigation":1252,"path":3019,"previewImg":3020,"seo":3021,"stem":3022,"topics":3023,"__hash__":3027},"articles/blog/js-built-in-methods.md","Шпаргалка по built-in методам",{"type":7,"value":8,"toc":3000},"minimark",[9,14,19,32,106,113,160,167,212,218,264,267,324,338,487,490,556,562,627,631,634,721,724,793,800,847,852,895,901,960,964,967,970,1010,1013,1054,1057,1098,1101,1138,1141,1183,1186,1348,1354,1492,1499,1502,1506,1509,1512,1515,1636,1643,1726,1730,1733,1739,1802,1805,1808,1857,1863,1913,1920,1976,1982,2071,2074,2103,2110,2207,2211,2215,2218,2229,2430,2436,2439,2445,2453,2457,2468,2474,2540,2546,2551,2556,2560,2566,2608,2611,2648,2651,2688,2691,2728,2732,2738,2912,2917,2943,2948,2996],[10,11,13],"h2",{"id":12},"array","Array",[15,16,18],"h3",{"id":17},"add-delete-elements","Добавление и удаление элементов",[20,21,22,23,27,28],"p",{},"добавляет в ",[24,25,26],"strong",{},"конец"," массива новый элемент, возвращает новый ",[29,30,31],"code",{},"length",[33,34,39],"pre",{"className":35,"code":36,"language":37,"meta":38,"style":38},"language-js shiki shiki-themes github-light github-dark","const arr = ['a', 'b'];\narr.push('c'); // 3\narr; // ['a', 'b', 'c']\n\n","js","",[29,40,41,74,97],{"__ignoreMap":38},[42,43,46,50,54,57,61,65,68,71],"span",{"class":44,"line":45},"line",1,[42,47,49],{"class":48},"szBVR","const",[42,51,53],{"class":52},"sj4cs"," arr",[42,55,56],{"class":48}," =",[42,58,60],{"class":59},"sVt8B"," [",[42,62,64],{"class":63},"sZZnC","'a'",[42,66,67],{"class":59},", ",[42,69,70],{"class":63},"'b'",[42,72,73],{"class":59},"];\n",[42,75,77,80,84,87,90,93],{"class":44,"line":76},2,[42,78,79],{"class":59},"arr.",[42,81,83],{"class":82},"sScJk","push",[42,85,86],{"class":59},"(",[42,88,89],{"class":63},"'c'",[42,91,92],{"class":59},"); ",[42,94,96],{"class":95},"sJ8bj","// 3\n",[42,98,100,103],{"class":44,"line":99},3,[42,101,102],{"class":59},"arr; ",[42,104,105],{"class":95},"// ['a', 'b', 'c']\n",[20,107,108,109,112],{},"удаляет и возвращает ",[24,110,111],{},"последний"," элемент массива",[33,114,116],{"className":35,"code":115,"language":37,"meta":38,"style":38},"const arr = ['a', 'b', 'c'];\narr.pop(); // 'c'\narr; // ['a', 'b']\n\n",[29,117,118,140,153],{"__ignoreMap":38},[42,119,120,122,124,126,128,130,132,134,136,138],{"class":44,"line":45},[42,121,49],{"class":48},[42,123,53],{"class":52},[42,125,56],{"class":48},[42,127,60],{"class":59},[42,129,64],{"class":63},[42,131,67],{"class":59},[42,133,70],{"class":63},[42,135,67],{"class":59},[42,137,89],{"class":63},[42,139,73],{"class":59},[42,141,142,144,147,150],{"class":44,"line":76},[42,143,79],{"class":59},[42,145,146],{"class":82},"pop",[42,148,149],{"class":59},"(); ",[42,151,152],{"class":95},"// 'c'\n",[42,154,155,157],{"class":44,"line":99},[42,156,102],{"class":59},[42,158,159],{"class":95},"// ['a', 'b']\n",[20,161,22,162,27,165],{},[24,163,164],{},"начало",[29,166,31],{},[33,168,170],{"className":35,"code":169,"language":37,"meta":38,"style":38},"const arr = ['a', 'b'];\narr.unshift('c'); // 3\narr; // ['с', 'a', 'b']\n\n",[29,171,172,190,205],{"__ignoreMap":38},[42,173,174,176,178,180,182,184,186,188],{"class":44,"line":45},[42,175,49],{"class":48},[42,177,53],{"class":52},[42,179,56],{"class":48},[42,181,60],{"class":59},[42,183,64],{"class":63},[42,185,67],{"class":59},[42,187,70],{"class":63},[42,189,73],{"class":59},[42,191,192,194,197,199,201,203],{"class":44,"line":76},[42,193,79],{"class":59},[42,195,196],{"class":82},"unshift",[42,198,86],{"class":59},[42,200,89],{"class":63},[42,202,92],{"class":59},[42,204,96],{"class":95},[42,206,207,209],{"class":44,"line":99},[42,208,102],{"class":59},[42,210,211],{"class":95},"// ['с', 'a', 'b']\n",[20,213,108,214,217],{},[24,215,216],{},"первый"," элемент массива.",[33,219,221],{"className":35,"code":220,"language":37,"meta":38,"style":38},"const arr = ['a', 'b', 'c'];\narr.shift(); // 'a'\narr; // ['b', 'c']\n\n",[29,222,223,245,257],{"__ignoreMap":38},[42,224,225,227,229,231,233,235,237,239,241,243],{"class":44,"line":45},[42,226,49],{"class":48},[42,228,53],{"class":52},[42,230,56],{"class":48},[42,232,60],{"class":59},[42,234,64],{"class":63},[42,236,67],{"class":59},[42,238,70],{"class":63},[42,240,67],{"class":59},[42,242,89],{"class":63},[42,244,73],{"class":59},[42,246,247,249,252,254],{"class":44,"line":76},[42,248,79],{"class":59},[42,250,251],{"class":82},"shift",[42,253,149],{"class":59},[42,255,256],{"class":95},"// 'a'\n",[42,258,259,261],{"class":44,"line":99},[42,260,102],{"class":59},[42,262,263],{"class":95},"// ['b', 'c']\n",[20,265,266],{},"создает новый массив, включающий в себя переданные значение/массивы.\nНе мутирует** исходный массив.",[33,268,270],{"className":35,"code":269,"language":37,"meta":38,"style":38},"['a', 'b', 'c'].concat('b', 'c', ['d', 'e'], ['f']); // ['a', 'b', 'c', 'd', 'e', 'f']\n",[29,271,272],{"__ignoreMap":38},[42,273,274,277,279,281,283,285,287,290,293,295,297,299,301,304,307,309,312,315,318,321],{"class":44,"line":45},[42,275,276],{"class":59},"[",[42,278,64],{"class":63},[42,280,67],{"class":59},[42,282,70],{"class":63},[42,284,67],{"class":59},[42,286,89],{"class":63},[42,288,289],{"class":59},"].",[42,291,292],{"class":82},"concat",[42,294,86],{"class":59},[42,296,70],{"class":63},[42,298,67],{"class":59},[42,300,89],{"class":63},[42,302,303],{"class":59},", [",[42,305,306],{"class":63},"'d'",[42,308,67],{"class":59},[42,310,311],{"class":63},"'e'",[42,313,314],{"class":59},"], [",[42,316,317],{"class":63},"'f'",[42,319,320],{"class":59},"]); ",[42,322,323],{"class":95},"// ['a', 'b', 'c', 'd', 'e', 'f']\n",[20,325,326,327,330,331,333,334,337],{},"принимает два индекса - начальный и конечный и возвращает обрезанную копию.\nЕсли передать только ",[29,328,329],{},"begin"," - обрежется с begin по последний индекс включительно.\nЕсли передать только отрицательный ",[29,332,329],{}," - можно вырезать N последних элементов массива.\nЕсли передать отрицательный ",[29,335,336],{},"end"," - обрежется с begin по по последний индекс минус end.",[33,339,341],{"className":35,"code":340,"language":37,"meta":38,"style":38},"['a', 'b', 'c', 'd'].slice(1) // ['b', 'c', 'd'] - обрезать с индекса 1 по конец массива\n['a', 'b', 'c', 'd'].slice(-2) // ['b', 'c', 'd'] - вырезать последние два элемента массива\n['a', 'b', 'c', 'd'].slice(1, 3) // ['b', 'c'] - обрезать с индекса 1 по индекс 3, т.е. элементы с индексами 1, 2\n['a', 'b', 'c', 'd'].slice(0, -1); // ['a', 'b', 'c'] - обрезать, убрав последний элемент\n",[29,342,343,377,412,448],{"__ignoreMap":38},[42,344,345,347,349,351,353,355,357,359,361,363,366,368,371,374],{"class":44,"line":45},[42,346,276],{"class":59},[42,348,64],{"class":63},[42,350,67],{"class":59},[42,352,70],{"class":63},[42,354,67],{"class":59},[42,356,89],{"class":63},[42,358,67],{"class":59},[42,360,306],{"class":63},[42,362,289],{"class":59},[42,364,365],{"class":82},"slice",[42,367,86],{"class":59},[42,369,370],{"class":52},"1",[42,372,373],{"class":59},") ",[42,375,376],{"class":95},"// ['b', 'c', 'd'] - обрезать с индекса 1 по конец массива\n",[42,378,379,381,383,385,387,389,391,393,395,397,399,401,404,407,409],{"class":44,"line":76},[42,380,276],{"class":59},[42,382,64],{"class":63},[42,384,67],{"class":59},[42,386,70],{"class":63},[42,388,67],{"class":59},[42,390,89],{"class":63},[42,392,67],{"class":59},[42,394,306],{"class":63},[42,396,289],{"class":59},[42,398,365],{"class":82},[42,400,86],{"class":59},[42,402,403],{"class":48},"-",[42,405,406],{"class":52},"2",[42,408,373],{"class":59},[42,410,411],{"class":95},"// ['b', 'c', 'd'] - вырезать последние два элемента массива\n",[42,413,414,416,418,420,422,424,426,428,430,432,434,436,438,440,443,445],{"class":44,"line":99},[42,415,276],{"class":59},[42,417,64],{"class":63},[42,419,67],{"class":59},[42,421,70],{"class":63},[42,423,67],{"class":59},[42,425,89],{"class":63},[42,427,67],{"class":59},[42,429,306],{"class":63},[42,431,289],{"class":59},[42,433,365],{"class":82},[42,435,86],{"class":59},[42,437,370],{"class":52},[42,439,67],{"class":59},[42,441,442],{"class":52},"3",[42,444,373],{"class":59},[42,446,447],{"class":95},"// ['b', 'c'] - обрезать с индекса 1 по индекс 3, т.е. элементы с индексами 1, 2\n",[42,449,451,453,455,457,459,461,463,465,467,469,471,473,476,478,480,482,484],{"class":44,"line":450},4,[42,452,276],{"class":59},[42,454,64],{"class":63},[42,456,67],{"class":59},[42,458,70],{"class":63},[42,460,67],{"class":59},[42,462,89],{"class":63},[42,464,67],{"class":59},[42,466,306],{"class":63},[42,468,289],{"class":59},[42,470,365],{"class":82},[42,472,86],{"class":59},[42,474,475],{"class":52},"0",[42,477,67],{"class":59},[42,479,403],{"class":48},[42,481,370],{"class":52},[42,483,92],{"class":59},[42,485,486],{"class":95},"// ['a', 'b', 'c'] - обрезать, убрав последний элемент\n",[20,488,489],{},"принимает индекс и количество элементов после этого индекса, которые нужно удалить.\nЕсли передать items - они будут добавлены после индекса start.\nМутирует исходный массив и возвращает удаленные элементы.",[33,491,493],{"className":35,"code":492,"language":37,"meta":38,"style":38},"const arr = ['a', 'b', 'c', 'd'];\narr.splice(1, 2, 'e', 'f'); // удалить 2 элемента, начиная с индекса 1, т.е. ['b', 'c']. Добавить 'e', 'f' к индексу 1.\narr; // ['a', 'e', 'f', 'd']\n\n",[29,494,495,521,549],{"__ignoreMap":38},[42,496,497,499,501,503,505,507,509,511,513,515,517,519],{"class":44,"line":45},[42,498,49],{"class":48},[42,500,53],{"class":52},[42,502,56],{"class":48},[42,504,60],{"class":59},[42,506,64],{"class":63},[42,508,67],{"class":59},[42,510,70],{"class":63},[42,512,67],{"class":59},[42,514,89],{"class":63},[42,516,67],{"class":59},[42,518,306],{"class":63},[42,520,73],{"class":59},[42,522,523,525,528,530,532,534,536,538,540,542,544,546],{"class":44,"line":76},[42,524,79],{"class":59},[42,526,527],{"class":82},"splice",[42,529,86],{"class":59},[42,531,370],{"class":52},[42,533,67],{"class":59},[42,535,406],{"class":52},[42,537,67],{"class":59},[42,539,311],{"class":63},[42,541,67],{"class":59},[42,543,317],{"class":63},[42,545,92],{"class":59},[42,547,548],{"class":95},"// удалить 2 элемента, начиная с индекса 1, т.е. ['b', 'c']. Добавить 'e', 'f' к индексу 1.\n",[42,550,551,553],{"class":44,"line":99},[42,552,102],{"class":59},[42,554,555],{"class":95},"// ['a', 'e', 'f', 'd']\n",[20,557,558,559,561],{},"тоже самое, что и ",[29,560,527],{},", но вместо мутации\nбудет создан новый массив. Возвращает новый измененный массив.",[33,563,565],{"className":35,"code":564,"language":37,"meta":38,"style":38},"const arr = ['a', 'b', 'c', 'd'];\narr.toSpliced(1, 2, 'e', 'f'); // ['a', 'e', 'f', 'd']\narr; // ['a', 'b', 'c', 'd']\n\n",[29,566,567,593,620],{"__ignoreMap":38},[42,568,569,571,573,575,577,579,581,583,585,587,589,591],{"class":44,"line":45},[42,570,49],{"class":48},[42,572,53],{"class":52},[42,574,56],{"class":48},[42,576,60],{"class":59},[42,578,64],{"class":63},[42,580,67],{"class":59},[42,582,70],{"class":63},[42,584,67],{"class":59},[42,586,89],{"class":63},[42,588,67],{"class":59},[42,590,306],{"class":63},[42,592,73],{"class":59},[42,594,595,597,600,602,604,606,608,610,612,614,616,618],{"class":44,"line":76},[42,596,79],{"class":59},[42,598,599],{"class":82},"toSpliced",[42,601,86],{"class":59},[42,603,370],{"class":52},[42,605,67],{"class":59},[42,607,406],{"class":52},[42,609,67],{"class":59},[42,611,311],{"class":63},[42,613,67],{"class":59},[42,615,317],{"class":63},[42,617,92],{"class":59},[42,619,555],{"class":95},[42,621,622,624],{"class":44,"line":99},[42,623,102],{"class":59},[42,625,626],{"class":95},"// ['a', 'b', 'c', 'd']\n",[15,628,630],{"id":629},"search-in-array","Поиск в массиве",[20,632,633],{},"находит и возвращает первый элемент массива, соответствующий заданному условию.",[33,635,637],{"className":35,"code":636,"language":37,"meta":38,"style":38},"[\n  { age: 10, name: 'Mike' },\n  { age: 19, name: 'Timofey' },\n  { age: 18, name: 'Alexander' }\n].find(i => i.age >= 18); // { age: 19, name: 'Timofey' }\n",[29,638,639,644,661,675,690],{"__ignoreMap":38},[42,640,641],{"class":44,"line":45},[42,642,643],{"class":59},"[\n",[42,645,646,649,652,655,658],{"class":44,"line":76},[42,647,648],{"class":59},"  { age: ",[42,650,651],{"class":52},"10",[42,653,654],{"class":59},", name: ",[42,656,657],{"class":63},"'Mike'",[42,659,660],{"class":59}," },\n",[42,662,663,665,668,670,673],{"class":44,"line":99},[42,664,648],{"class":59},[42,666,667],{"class":52},"19",[42,669,654],{"class":59},[42,671,672],{"class":63},"'Timofey'",[42,674,660],{"class":59},[42,676,677,679,682,684,687],{"class":44,"line":450},[42,678,648],{"class":59},[42,680,681],{"class":52},"18",[42,683,654],{"class":59},[42,685,686],{"class":63},"'Alexander'",[42,688,689],{"class":59}," }\n",[42,691,693,695,698,700,704,707,710,713,716,718],{"class":44,"line":692},5,[42,694,289],{"class":59},[42,696,697],{"class":82},"find",[42,699,86],{"class":59},[42,701,703],{"class":702},"s4XuR","i",[42,705,706],{"class":48}," =>",[42,708,709],{"class":59}," i.age ",[42,711,712],{"class":48},">=",[42,714,715],{"class":52}," 18",[42,717,92],{"class":59},[42,719,720],{"class":95},"// { age: 19, name: 'Timofey' }\n",[20,722,723],{},"тоже самое, но начинает обходить массив с конца:",[33,725,727],{"className":35,"code":726,"language":37,"meta":38,"style":38},"[\n  { age: 10, name: 'Mike' },\n  { age: 19, name: 'Timofey' },\n  { age: 18, name: 'Alexander' }\n].findLast(i => i.age >= 18); // { age: 18, name: 'Alexander' }\n",[29,728,729,733,745,757,769],{"__ignoreMap":38},[42,730,731],{"class":44,"line":45},[42,732,643],{"class":59},[42,734,735,737,739,741,743],{"class":44,"line":76},[42,736,648],{"class":59},[42,738,651],{"class":52},[42,740,654],{"class":59},[42,742,657],{"class":63},[42,744,660],{"class":59},[42,746,747,749,751,753,755],{"class":44,"line":99},[42,748,648],{"class":59},[42,750,667],{"class":52},[42,752,654],{"class":59},[42,754,672],{"class":63},[42,756,660],{"class":59},[42,758,759,761,763,765,767],{"class":44,"line":450},[42,760,648],{"class":59},[42,762,681],{"class":52},[42,764,654],{"class":59},[42,766,686],{"class":63},[42,768,689],{"class":59},[42,770,771,773,776,778,780,782,784,786,788,790],{"class":44,"line":692},[42,772,289],{"class":59},[42,774,775],{"class":82},"findLast",[42,777,86],{"class":59},[42,779,703],{"class":702},[42,781,706],{"class":48},[42,783,709],{"class":59},[42,785,712],{"class":48},[42,787,715],{"class":52},[42,789,92],{"class":59},[42,791,792],{"class":95},"// { age: 18, name: 'Alexander' }\n",[20,794,795,796,799],{},"принимает в коллбеке условие, возвращает ",[29,797,798],{},"true",", если хотя бы один элемент соответствует",[33,801,803],{"className":35,"code":802,"language":37,"meta":38,"style":38},"['Mike', 'Timofey', 'Alexander'].some(name => name.length > 5); // true\n",[29,804,805],{"__ignoreMap":38},[42,806,807,809,811,813,815,817,819,821,824,826,829,831,834,836,839,842,844],{"class":44,"line":45},[42,808,276],{"class":59},[42,810,657],{"class":63},[42,812,67],{"class":59},[42,814,672],{"class":63},[42,816,67],{"class":59},[42,818,686],{"class":63},[42,820,289],{"class":59},[42,822,823],{"class":82},"some",[42,825,86],{"class":59},[42,827,828],{"class":702},"name",[42,830,706],{"class":48},[42,832,833],{"class":59}," name.",[42,835,31],{"class":52},[42,837,838],{"class":48}," >",[42,840,841],{"class":52}," 5",[42,843,92],{"class":59},[42,845,846],{"class":95},"// true\n",[20,848,795,849,851],{},[29,850,798],{},", если все элементы соответствуют",[33,853,855],{"className":35,"code":854,"language":37,"meta":38,"style":38},"['Mike', 'Timofey', 'Alexander'].every(name => name.length > 5); // false\n",[29,856,857],{"__ignoreMap":38},[42,858,859,861,863,865,867,869,871,873,876,878,880,882,884,886,888,890,892],{"class":44,"line":45},[42,860,276],{"class":59},[42,862,657],{"class":63},[42,864,67],{"class":59},[42,866,672],{"class":63},[42,868,67],{"class":59},[42,870,686],{"class":63},[42,872,289],{"class":59},[42,874,875],{"class":82},"every",[42,877,86],{"class":59},[42,879,828],{"class":702},[42,881,706],{"class":48},[42,883,833],{"class":59},[42,885,31],{"class":52},[42,887,838],{"class":48},[42,889,841],{"class":52},[42,891,92],{"class":59},[42,893,894],{"class":95},"// false\n",[20,896,897,898,900],{},"принимает значение, возвращает ",[29,899,798],{},", если в массиве есть такой элемент",[33,902,904],{"className":35,"code":903,"language":37,"meta":38,"style":38},"['Mike', 'Timofey', 'Alexander'].includes('Timofey'); // true\n['Mike', 'Timofey', 'Alexander'].includes('Mark'); // false\n",[29,905,906,933],{"__ignoreMap":38},[42,907,908,910,912,914,916,918,920,922,925,927,929,931],{"class":44,"line":45},[42,909,276],{"class":59},[42,911,657],{"class":63},[42,913,67],{"class":59},[42,915,672],{"class":63},[42,917,67],{"class":59},[42,919,686],{"class":63},[42,921,289],{"class":59},[42,923,924],{"class":82},"includes",[42,926,86],{"class":59},[42,928,672],{"class":63},[42,930,92],{"class":59},[42,932,846],{"class":95},[42,934,935,937,939,941,943,945,947,949,951,953,956,958],{"class":44,"line":76},[42,936,276],{"class":59},[42,938,657],{"class":63},[42,940,67],{"class":59},[42,942,672],{"class":63},[42,944,67],{"class":59},[42,946,686],{"class":63},[42,948,289],{"class":59},[42,950,924],{"class":82},[42,952,86],{"class":59},[42,954,955],{"class":63},"'Mark'",[42,957,92],{"class":59},[42,959,894],{"class":95},[15,961,963],{"id":962},"iterate-and-mutate-array","Обход и изменение массива",[20,965,966],{},"принимает коллбек,\nкоторый выполнится для каждого элемента массива",[20,968,969],{},"принимает коллбек, который определяет,\nкак будет меняться каждый элемент массива.\nНе мутирует** исходный массив.",[33,971,973],{"className":35,"code":972,"language":37,"meta":38,"style":38},"['heh', 'huh'].map(i => i.toUpperCase()); // ['HEH', 'HUH']\n",[29,974,975],{"__ignoreMap":38},[42,976,977,979,982,984,987,989,992,994,996,998,1001,1004,1007],{"class":44,"line":45},[42,978,276],{"class":59},[42,980,981],{"class":63},"'heh'",[42,983,67],{"class":59},[42,985,986],{"class":63},"'huh'",[42,988,289],{"class":59},[42,990,991],{"class":82},"map",[42,993,86],{"class":59},[42,995,703],{"class":702},[42,997,706],{"class":48},[42,999,1000],{"class":59}," i.",[42,1002,1003],{"class":82},"toUpperCase",[42,1005,1006],{"class":59},"()); ",[42,1008,1009],{"class":95},"// ['HEH', 'HUH']\n",[20,1011,1012],{},"переворачивает массив. Изменяет исходный массив и возвращает ссылку на изменённый массив.",[33,1014,1016],{"className":35,"code":1015,"language":37,"meta":38,"style":38},"const arr = [1, 2];\narr.reverse(); // [2, 1]\narr; // [2, 1]\n\n",[29,1017,1018,1036,1048],{"__ignoreMap":38},[42,1019,1020,1022,1024,1026,1028,1030,1032,1034],{"class":44,"line":45},[42,1021,49],{"class":48},[42,1023,53],{"class":52},[42,1025,56],{"class":48},[42,1027,60],{"class":59},[42,1029,370],{"class":52},[42,1031,67],{"class":59},[42,1033,406],{"class":52},[42,1035,73],{"class":59},[42,1037,1038,1040,1043,1045],{"class":44,"line":76},[42,1039,79],{"class":59},[42,1041,1042],{"class":82},"reverse",[42,1044,149],{"class":59},[42,1046,1047],{"class":95},"// [2, 1]\n",[42,1049,1050,1052],{"class":44,"line":99},[42,1051,102],{"class":59},[42,1053,1047],{"class":95},[20,1055,1056],{},"тоже самое, что и reverse, но без мутации исходного массива. Возвращает новый массив.",[33,1058,1060],{"className":35,"code":1059,"language":37,"meta":38,"style":38},"const arr = [1, 2];\narr.toReversed(); // [2, 1]\narr; // [1, 2]\n\n",[29,1061,1062,1080,1091],{"__ignoreMap":38},[42,1063,1064,1066,1068,1070,1072,1074,1076,1078],{"class":44,"line":45},[42,1065,49],{"class":48},[42,1067,53],{"class":52},[42,1069,56],{"class":48},[42,1071,60],{"class":59},[42,1073,370],{"class":52},[42,1075,67],{"class":59},[42,1077,406],{"class":52},[42,1079,73],{"class":59},[42,1081,1082,1084,1087,1089],{"class":44,"line":76},[42,1083,79],{"class":59},[42,1085,1086],{"class":82},"toReversed",[42,1088,149],{"class":59},[42,1090,1047],{"class":95},[42,1092,1093,1095],{"class":44,"line":99},[42,1094,102],{"class":59},[42,1096,1097],{"class":95},"// [1, 2]\n",[20,1099,1100],{},"создает копию массива с замененным элементом по выбранному индексу",[33,1102,1104],{"className":35,"code":1103,"language":37,"meta":38,"style":38},"['a', 'b', 'c'].with(2, 'd'); // ['a', 'b', 'd']\n\n",[29,1105,1106],{"__ignoreMap":38},[42,1107,1108,1110,1112,1114,1116,1118,1120,1122,1125,1127,1129,1131,1133,1135],{"class":44,"line":45},[42,1109,276],{"class":59},[42,1111,64],{"class":63},[42,1113,67],{"class":59},[42,1115,70],{"class":63},[42,1117,67],{"class":59},[42,1119,89],{"class":63},[42,1121,289],{"class":59},[42,1123,1124],{"class":82},"with",[42,1126,86],{"class":59},[42,1128,406],{"class":52},[42,1130,67],{"class":59},[42,1132,306],{"class":63},[42,1134,92],{"class":59},[42,1136,1137],{"class":95},"// ['a', 'b', 'd']\n",[20,1139,1140],{},"возвращает массив, где все элементы соответствуют переданному условию в коллбеке",[33,1142,1144],{"className":35,"code":1143,"language":37,"meta":38,"style":38},"['Mike', 'Timofey', 'Alexander'].map(name => name.length > 5); // ['Timofey', 'Alexander']\n",[29,1145,1146],{"__ignoreMap":38},[42,1147,1148,1150,1152,1154,1156,1158,1160,1162,1164,1166,1168,1170,1172,1174,1176,1178,1180],{"class":44,"line":45},[42,1149,276],{"class":59},[42,1151,657],{"class":63},[42,1153,67],{"class":59},[42,1155,672],{"class":63},[42,1157,67],{"class":59},[42,1159,686],{"class":63},[42,1161,289],{"class":59},[42,1163,991],{"class":82},[42,1165,86],{"class":59},[42,1167,828],{"class":702},[42,1169,706],{"class":48},[42,1171,833],{"class":59},[42,1173,31],{"class":52},[42,1175,838],{"class":48},[42,1177,841],{"class":52},[42,1179,92],{"class":59},[42,1181,1182],{"class":95},"// ['Timofey', 'Alexander']\n",[20,1184,1185],{},"обходит массив и аккумулирует значение.\nЗначение аккумулятора задается в коллбеке.",[33,1187,1189],{"className":35,"code":1188,"language":37,"meta":38,"style":38},"const employers = [\n  { age: 10, name: 'Mike' }, // Сын маминой подруги\n  { age: 19, name: 'Timofey' },\n  { age: 18, name: 'Alexander' }\n];\n\nconst totalAge = employers.reduce((acc, curr) => {\n  return acc + curr.age;\n}, 0); // 47\n\nconst averageAge = totalAge / employers.length; // 16.66\n",[29,1190,1191,1203,1219,1231,1243,1247,1254,1289,1304,1317,1322],{"__ignoreMap":38},[42,1192,1193,1195,1198,1200],{"class":44,"line":45},[42,1194,49],{"class":48},[42,1196,1197],{"class":52}," employers",[42,1199,56],{"class":48},[42,1201,1202],{"class":59}," [\n",[42,1204,1205,1207,1209,1211,1213,1216],{"class":44,"line":76},[42,1206,648],{"class":59},[42,1208,651],{"class":52},[42,1210,654],{"class":59},[42,1212,657],{"class":63},[42,1214,1215],{"class":59}," }, ",[42,1217,1218],{"class":95},"// Сын маминой подруги\n",[42,1220,1221,1223,1225,1227,1229],{"class":44,"line":99},[42,1222,648],{"class":59},[42,1224,667],{"class":52},[42,1226,654],{"class":59},[42,1228,672],{"class":63},[42,1230,660],{"class":59},[42,1232,1233,1235,1237,1239,1241],{"class":44,"line":450},[42,1234,648],{"class":59},[42,1236,681],{"class":52},[42,1238,654],{"class":59},[42,1240,686],{"class":63},[42,1242,689],{"class":59},[42,1244,1245],{"class":44,"line":692},[42,1246,73],{"class":59},[42,1248,1250],{"class":44,"line":1249},6,[42,1251,1253],{"emptyLinePlaceholder":1252},true,"\n",[42,1255,1257,1259,1262,1264,1267,1270,1273,1276,1278,1281,1283,1286],{"class":44,"line":1256},7,[42,1258,49],{"class":48},[42,1260,1261],{"class":52}," totalAge",[42,1263,56],{"class":48},[42,1265,1266],{"class":59}," employers.",[42,1268,1269],{"class":82},"reduce",[42,1271,1272],{"class":59},"((",[42,1274,1275],{"class":702},"acc",[42,1277,67],{"class":59},[42,1279,1280],{"class":702},"curr",[42,1282,373],{"class":59},[42,1284,1285],{"class":48},"=>",[42,1287,1288],{"class":59}," {\n",[42,1290,1292,1295,1298,1301],{"class":44,"line":1291},8,[42,1293,1294],{"class":48},"  return",[42,1296,1297],{"class":59}," acc ",[42,1299,1300],{"class":48},"+",[42,1302,1303],{"class":59}," curr.age;\n",[42,1305,1307,1310,1312,1314],{"class":44,"line":1306},9,[42,1308,1309],{"class":59},"}, ",[42,1311,475],{"class":52},[42,1313,92],{"class":59},[42,1315,1316],{"class":95},"// 47\n",[42,1318,1320],{"class":44,"line":1319},10,[42,1321,1253],{"emptyLinePlaceholder":1252},[42,1323,1325,1327,1330,1332,1335,1338,1340,1342,1345],{"class":44,"line":1324},11,[42,1326,49],{"class":48},[42,1328,1329],{"class":52}," averageAge",[42,1331,56],{"class":48},[42,1333,1334],{"class":59}," totalAge ",[42,1336,1337],{"class":48},"/",[42,1339,1266],{"class":59},[42,1341,31],{"class":52},[42,1343,1344],{"class":59},"; ",[42,1346,1347],{"class":95},"// 16.66\n",[20,1349,1350,1351,1353],{},"Метод ",[29,1352,1269],{}," очень полезен для агрегации:",[33,1355,1357],{"className":35,"code":1356,"language":37,"meta":38,"style":38},"const employers = [\n  { age: 10, name: 'Mike', position: 'son' },\n  { age: 19, name: 'Timofey', position: 'frontend' },\n  { age: 18, name: 'Alexander', position: 'frontend' }\n];\n\nconst employersByPosition = employers.reduce((acc, curr) => {\n  acc[curr.position] = (acc[curr.position] || []).concat(curr);\n  return acc;\n}, {}); // { son: [{ name: 'Mike',... }], frontend: [{ name: 'Timofey', ...}, { name: 'Alexander',...}] }\n\n",[29,1358,1359,1369,1387,1404,1420,1424,1428,1455,1477,1484],{"__ignoreMap":38},[42,1360,1361,1363,1365,1367],{"class":44,"line":45},[42,1362,49],{"class":48},[42,1364,1197],{"class":52},[42,1366,56],{"class":48},[42,1368,1202],{"class":59},[42,1370,1371,1373,1375,1377,1379,1382,1385],{"class":44,"line":76},[42,1372,648],{"class":59},[42,1374,651],{"class":52},[42,1376,654],{"class":59},[42,1378,657],{"class":63},[42,1380,1381],{"class":59},", position: ",[42,1383,1384],{"class":63},"'son'",[42,1386,660],{"class":59},[42,1388,1389,1391,1393,1395,1397,1399,1402],{"class":44,"line":99},[42,1390,648],{"class":59},[42,1392,667],{"class":52},[42,1394,654],{"class":59},[42,1396,672],{"class":63},[42,1398,1381],{"class":59},[42,1400,1401],{"class":63},"'frontend'",[42,1403,660],{"class":59},[42,1405,1406,1408,1410,1412,1414,1416,1418],{"class":44,"line":450},[42,1407,648],{"class":59},[42,1409,681],{"class":52},[42,1411,654],{"class":59},[42,1413,686],{"class":63},[42,1415,1381],{"class":59},[42,1417,1401],{"class":63},[42,1419,689],{"class":59},[42,1421,1422],{"class":44,"line":692},[42,1423,73],{"class":59},[42,1425,1426],{"class":44,"line":1249},[42,1427,1253],{"emptyLinePlaceholder":1252},[42,1429,1430,1432,1435,1437,1439,1441,1443,1445,1447,1449,1451,1453],{"class":44,"line":1256},[42,1431,49],{"class":48},[42,1433,1434],{"class":52}," employersByPosition",[42,1436,56],{"class":48},[42,1438,1266],{"class":59},[42,1440,1269],{"class":82},[42,1442,1272],{"class":59},[42,1444,1275],{"class":702},[42,1446,67],{"class":59},[42,1448,1280],{"class":702},[42,1450,373],{"class":59},[42,1452,1285],{"class":48},[42,1454,1288],{"class":59},[42,1456,1457,1460,1463,1466,1469,1472,1474],{"class":44,"line":1291},[42,1458,1459],{"class":59},"  acc[curr.position] ",[42,1461,1462],{"class":48},"=",[42,1464,1465],{"class":59}," (acc[curr.position] ",[42,1467,1468],{"class":48},"||",[42,1470,1471],{"class":59}," []).",[42,1473,292],{"class":82},[42,1475,1476],{"class":59},"(curr);\n",[42,1478,1479,1481],{"class":44,"line":1306},[42,1480,1294],{"class":48},[42,1482,1483],{"class":59}," acc;\n",[42,1485,1486,1489],{"class":44,"line":1319},[42,1487,1488],{"class":59},"}, {}); ",[42,1490,1491],{"class":95},"// { son: [{ name: 'Mike',... }], frontend: [{ name: 'Timofey', ...}, { name: 'Alexander',...}] }\n",[20,1493,1494,1495,1498],{},"Если не передать ",[29,1496,1497],{},"initAcc"," - итерация будет со 2-го элемента.",[20,1500,1501],{},"тоже самое, что и обычный reduce, но справа налево.",[15,1503,1505],{"id":1504},"sort-array","Сортировка массива",[20,1507,1508],{},"принимает коллбеком функцию, в которой принимаются два аргумента - элементы массива,\nа return должен определить их порядок. Мутирует исходный массив и возвращает ссылку на него.",[20,1510,1511],{},"идет первым\nбез изменений\nидет первым",[20,1513,1514],{},"Если коллбек не передан - сортирует в лексическом порядке по возрастанию, подойдет только для строк.",[33,1516,1518],{"className":35,"code":1517,"language":37,"meta":38,"style":38},"[4, 2, 3, 1].sort((a, b) => a - b); // [1, 2, 3, 4]\n[4, 2, 3, 1].sort((a, b) => b - a); // [4, 3, 2, 1]\n['b', 'c', 'a'].sort(); // ['a', 'b', 'c']\n",[29,1519,1520,1569,1614],{"__ignoreMap":38},[42,1521,1522,1524,1527,1529,1531,1533,1535,1537,1539,1541,1544,1546,1549,1551,1554,1556,1558,1561,1563,1566],{"class":44,"line":45},[42,1523,276],{"class":59},[42,1525,1526],{"class":52},"4",[42,1528,67],{"class":59},[42,1530,406],{"class":52},[42,1532,67],{"class":59},[42,1534,442],{"class":52},[42,1536,67],{"class":59},[42,1538,370],{"class":52},[42,1540,289],{"class":59},[42,1542,1543],{"class":82},"sort",[42,1545,1272],{"class":59},[42,1547,1548],{"class":702},"a",[42,1550,67],{"class":59},[42,1552,1553],{"class":702},"b",[42,1555,373],{"class":59},[42,1557,1285],{"class":48},[42,1559,1560],{"class":59}," a ",[42,1562,403],{"class":48},[42,1564,1565],{"class":59}," b); ",[42,1567,1568],{"class":95},"// [1, 2, 3, 4]\n",[42,1570,1571,1573,1575,1577,1579,1581,1583,1585,1587,1589,1591,1593,1595,1597,1599,1601,1603,1606,1608,1611],{"class":44,"line":76},[42,1572,276],{"class":59},[42,1574,1526],{"class":52},[42,1576,67],{"class":59},[42,1578,406],{"class":52},[42,1580,67],{"class":59},[42,1582,442],{"class":52},[42,1584,67],{"class":59},[42,1586,370],{"class":52},[42,1588,289],{"class":59},[42,1590,1543],{"class":82},[42,1592,1272],{"class":59},[42,1594,1548],{"class":702},[42,1596,67],{"class":59},[42,1598,1553],{"class":702},[42,1600,373],{"class":59},[42,1602,1285],{"class":48},[42,1604,1605],{"class":59}," b ",[42,1607,403],{"class":48},[42,1609,1610],{"class":59}," a); ",[42,1612,1613],{"class":95},"// [4, 3, 2, 1]\n",[42,1615,1616,1618,1620,1622,1624,1626,1628,1630,1632,1634],{"class":44,"line":99},[42,1617,276],{"class":59},[42,1619,70],{"class":63},[42,1621,67],{"class":59},[42,1623,89],{"class":63},[42,1625,67],{"class":59},[42,1627,64],{"class":63},[42,1629,289],{"class":59},[42,1631,1543],{"class":82},[42,1633,149],{"class":59},[42,1635,105],{"class":95},[20,1637,1638,1639,1642],{},"тоже самое, что и метод ",[29,1640,1641],{},".sort",",\nно вместо мутации исходного массива создает новый отсортированный массив",[33,1644,1646],{"className":35,"code":1645,"language":37,"meta":38,"style":38},"const arr = [4, 2, 3, 1];\nconst sortedArray = arr.toSorted((a, b) => a - b);\n\narr; // [4, 2, 3, 1];\nsortedArray; // [1, 2, 3, 4]\n\n",[29,1647,1648,1674,1708,1712,1719],{"__ignoreMap":38},[42,1649,1650,1652,1654,1656,1658,1660,1662,1664,1666,1668,1670,1672],{"class":44,"line":45},[42,1651,49],{"class":48},[42,1653,53],{"class":52},[42,1655,56],{"class":48},[42,1657,60],{"class":59},[42,1659,1526],{"class":52},[42,1661,67],{"class":59},[42,1663,406],{"class":52},[42,1665,67],{"class":59},[42,1667,442],{"class":52},[42,1669,67],{"class":59},[42,1671,370],{"class":52},[42,1673,73],{"class":59},[42,1675,1676,1678,1681,1683,1686,1689,1691,1693,1695,1697,1699,1701,1703,1705],{"class":44,"line":76},[42,1677,49],{"class":48},[42,1679,1680],{"class":52}," sortedArray",[42,1682,56],{"class":48},[42,1684,1685],{"class":59}," arr.",[42,1687,1688],{"class":82},"toSorted",[42,1690,1272],{"class":59},[42,1692,1548],{"class":702},[42,1694,67],{"class":59},[42,1696,1553],{"class":702},[42,1698,373],{"class":59},[42,1700,1285],{"class":48},[42,1702,1560],{"class":59},[42,1704,403],{"class":48},[42,1706,1707],{"class":59}," b);\n",[42,1709,1710],{"class":44,"line":99},[42,1711,1253],{"emptyLinePlaceholder":1252},[42,1713,1714,1716],{"class":44,"line":450},[42,1715,102],{"class":59},[42,1717,1718],{"class":95},"// [4, 2, 3, 1];\n",[42,1720,1721,1724],{"class":44,"line":692},[42,1722,1723],{"class":59},"sortedArray; ",[42,1725,1568],{"class":95},[15,1727,1729],{"id":1728},"useful-methods","Полезные методы",[20,1731,1732],{},"возвращает элемент массива по указанному индексу.",[20,1734,1735,1736],{},"Основная фишка - можно легко достать последний элемент, передав ",[29,1737,1738],{},"-1",[33,1740,1742],{"className":35,"code":1741,"language":37,"meta":38,"style":38},"[1, 2, 3 ].at(0) // 1\n  [1, 2, 3 ].at(-1); // 3\n\n",[29,1743,1744,1773],{"__ignoreMap":38},[42,1745,1746,1748,1750,1752,1754,1756,1758,1761,1764,1766,1768,1770],{"class":44,"line":45},[42,1747,276],{"class":59},[42,1749,370],{"class":52},[42,1751,67],{"class":59},[42,1753,406],{"class":52},[42,1755,67],{"class":59},[42,1757,442],{"class":52},[42,1759,1760],{"class":59}," ].",[42,1762,1763],{"class":82},"at",[42,1765,86],{"class":59},[42,1767,475],{"class":52},[42,1769,373],{"class":59},[42,1771,1772],{"class":95},"// 1\n",[42,1774,1775,1778,1780,1782,1784,1786,1788,1790,1792,1794,1796,1798,1800],{"class":44,"line":76},[42,1776,1777],{"class":59},"  [",[42,1779,370],{"class":52},[42,1781,67],{"class":59},[42,1783,406],{"class":52},[42,1785,67],{"class":59},[42,1787,442],{"class":52},[42,1789,1760],{"class":59},[42,1791,1763],{"class":82},[42,1793,86],{"class":59},[42,1795,403],{"class":48},[42,1797,370],{"class":52},[42,1799,92],{"class":59},[42,1801,96],{"class":95},[20,1803,1804],{},"позволяет создать массив из Iterable\nили ArrayLike сущностей.",[20,1806,1807],{},"Очень полезен, чтобы получить массив Element:",[33,1809,1811],{"className":35,"code":1810,"language":37,"meta":38,"style":38},"const linkElements = document.querySelectorAll('.myClass');\nconst arrLinks = Array.from(linkElements); // Element[]\n\n",[29,1812,1813,1836],{"__ignoreMap":38},[42,1814,1815,1817,1820,1822,1825,1828,1830,1833],{"class":44,"line":45},[42,1816,49],{"class":48},[42,1818,1819],{"class":52}," linkElements",[42,1821,56],{"class":48},[42,1823,1824],{"class":59}," document.",[42,1826,1827],{"class":82},"querySelectorAll",[42,1829,86],{"class":59},[42,1831,1832],{"class":63},"'.myClass'",[42,1834,1835],{"class":59},");\n",[42,1837,1838,1840,1843,1845,1848,1851,1854],{"class":44,"line":76},[42,1839,49],{"class":48},[42,1841,1842],{"class":52}," arrLinks",[42,1844,56],{"class":48},[42,1846,1847],{"class":59}," Array.",[42,1849,1850],{"class":82},"from",[42,1852,1853],{"class":59},"(linkElements); ",[42,1855,1856],{"class":95},"// Element[]\n",[20,1858,1859,1860],{},"Можно сразу же сделать ",[29,1861,1862],{},".map",[33,1864,1866],{"className":35,"code":1865,"language":37,"meta":38,"style":38},"const linkElements = document.getElementsByTagName('a');\nconst arrLinks = Array.from(linkElements, element => element.href); // string[]\n\n",[29,1867,1868,1887],{"__ignoreMap":38},[42,1869,1870,1872,1874,1876,1878,1881,1883,1885],{"class":44,"line":45},[42,1871,49],{"class":48},[42,1873,1819],{"class":52},[42,1875,56],{"class":48},[42,1877,1824],{"class":59},[42,1879,1880],{"class":82},"getElementsByTagName",[42,1882,86],{"class":59},[42,1884,64],{"class":63},[42,1886,1835],{"class":59},[42,1888,1889,1891,1893,1895,1897,1899,1902,1905,1907,1910],{"class":44,"line":76},[42,1890,49],{"class":48},[42,1892,1842],{"class":52},[42,1894,56],{"class":48},[42,1896,1847],{"class":59},[42,1898,1850],{"class":82},[42,1900,1901],{"class":59},"(linkElements, ",[42,1903,1904],{"class":702},"element",[42,1906,706],{"class":48},[42,1908,1909],{"class":59}," element.href); ",[42,1911,1912],{"class":95},"// string[]\n",[20,1914,1915,1916,1919],{},"Часто используется, чтобы превратить ",[29,1917,1918],{},"Set"," в массив",[33,1921,1923],{"className":35,"code":1922,"language":37,"meta":38,"style":38},"const mySet = newSet([1, 2]);\nmySet.add(3);\nArray.from(mySet); // [1, 2, 3]\n\n",[29,1924,1925,1949,1963],{"__ignoreMap":38},[42,1926,1927,1929,1932,1934,1937,1940,1942,1944,1946],{"class":44,"line":45},[42,1928,49],{"class":48},[42,1930,1931],{"class":52}," mySet",[42,1933,56],{"class":48},[42,1935,1936],{"class":82}," newSet",[42,1938,1939],{"class":59},"([",[42,1941,370],{"class":52},[42,1943,67],{"class":59},[42,1945,406],{"class":52},[42,1947,1948],{"class":59},"]);\n",[42,1950,1951,1954,1957,1959,1961],{"class":44,"line":76},[42,1952,1953],{"class":59},"mySet.",[42,1955,1956],{"class":82},"add",[42,1958,86],{"class":59},[42,1960,442],{"class":52},[42,1962,1835],{"class":59},[42,1964,1965,1968,1970,1973],{"class":44,"line":99},[42,1966,1967],{"class":59},"Array.",[42,1969,1850],{"class":82},[42,1971,1972],{"class":59},"(mySet); ",[42,1974,1975],{"class":95},"// [1, 2, 3]\n",[20,1977,1978,1979,1919],{},"Или чтобы превратить ",[29,1980,1981],{},"Map",[33,1983,1985],{"className":35,"code":1984,"language":37,"meta":38,"style":38},"const myMap = new Map();\nmyMap.set('a', 1).set('b', 2);\n\nconst array = Array.from(myMap, ([name, value]) => ({ name, value }));\n",[29,1986,1987,2005,2036,2040],{"__ignoreMap":38},[42,1988,1989,1991,1994,1996,1999,2002],{"class":44,"line":45},[42,1990,49],{"class":48},[42,1992,1993],{"class":52}," myMap",[42,1995,56],{"class":48},[42,1997,1998],{"class":48}," new",[42,2000,2001],{"class":82}," Map",[42,2003,2004],{"class":59},"();\n",[42,2006,2007,2010,2013,2015,2017,2019,2021,2024,2026,2028,2030,2032,2034],{"class":44,"line":76},[42,2008,2009],{"class":59},"myMap.",[42,2011,2012],{"class":82},"set",[42,2014,86],{"class":59},[42,2016,64],{"class":63},[42,2018,67],{"class":59},[42,2020,370],{"class":52},[42,2022,2023],{"class":59},").",[42,2025,2012],{"class":82},[42,2027,86],{"class":59},[42,2029,70],{"class":63},[42,2031,67],{"class":59},[42,2033,406],{"class":52},[42,2035,1835],{"class":59},[42,2037,2038],{"class":44,"line":99},[42,2039,1253],{"emptyLinePlaceholder":1252},[42,2041,2042,2044,2047,2049,2051,2053,2056,2058,2060,2063,2066,2068],{"class":44,"line":450},[42,2043,49],{"class":48},[42,2045,2046],{"class":52}," array",[42,2048,56],{"class":48},[42,2050,1847],{"class":59},[42,2052,1850],{"class":82},[42,2054,2055],{"class":59},"(myMap, ([",[42,2057,828],{"class":702},[42,2059,67],{"class":59},[42,2061,2062],{"class":702},"value",[42,2064,2065],{"class":59},"]) ",[42,2067,1285],{"class":48},[42,2069,2070],{"class":59}," ({ name, value }));\n",[20,2072,2073],{},"Можно использовать, чтобы создать пустой массив",[33,2075,2077],{"className":35,"code":2076,"language":37,"meta":38,"style":38},"Array.from(new Array(3)); // [undefined, undefined, undefined]\n\n",[29,2078,2079],{"__ignoreMap":38},[42,2080,2081,2083,2085,2087,2090,2093,2095,2097,2100],{"class":44,"line":45},[42,2082,1967],{"class":59},[42,2084,1850],{"class":82},[42,2086,86],{"class":59},[42,2088,2089],{"class":48},"new",[42,2091,2092],{"class":82}," Array",[42,2094,86],{"class":59},[42,2096,442],{"class":52},[42,2098,2099],{"class":59},")); ",[42,2101,2102],{"class":95},"// [undefined, undefined, undefined]\n",[20,2104,2105,2106,2109],{},"создает новый массив, убирая вложенность на заданную ",[29,2107,2108],{},"depth",".",[33,2111,2113],{"className":35,"code":2112,"language":37,"meta":38,"style":38},"[1, [2, 3]].flat(); // [1, 2, 3]\n[1, [2, 3, [4, 5]]].flat(); // [1, 2, 3, [4, 5]]\n[1, [2, 3, [4, 5]]].flat(2); // [1, 2, 3, 4, 5]\n\n",[29,2114,2115,2139,2172],{"__ignoreMap":38},[42,2116,2117,2119,2121,2123,2125,2127,2129,2132,2135,2137],{"class":44,"line":45},[42,2118,276],{"class":59},[42,2120,370],{"class":52},[42,2122,303],{"class":59},[42,2124,406],{"class":52},[42,2126,67],{"class":59},[42,2128,442],{"class":52},[42,2130,2131],{"class":59},"]].",[42,2133,2134],{"class":82},"flat",[42,2136,149],{"class":59},[42,2138,1975],{"class":95},[42,2140,2141,2143,2145,2147,2149,2151,2153,2155,2157,2159,2162,2165,2167,2169],{"class":44,"line":76},[42,2142,276],{"class":59},[42,2144,370],{"class":52},[42,2146,303],{"class":59},[42,2148,406],{"class":52},[42,2150,67],{"class":59},[42,2152,442],{"class":52},[42,2154,303],{"class":59},[42,2156,1526],{"class":52},[42,2158,67],{"class":59},[42,2160,2161],{"class":52},"5",[42,2163,2164],{"class":59},"]]].",[42,2166,2134],{"class":82},[42,2168,149],{"class":59},[42,2170,2171],{"class":95},"// [1, 2, 3, [4, 5]]\n",[42,2173,2174,2176,2178,2180,2182,2184,2186,2188,2190,2192,2194,2196,2198,2200,2202,2204],{"class":44,"line":99},[42,2175,276],{"class":59},[42,2177,370],{"class":52},[42,2179,303],{"class":59},[42,2181,406],{"class":52},[42,2183,67],{"class":59},[42,2185,442],{"class":52},[42,2187,303],{"class":59},[42,2189,1526],{"class":52},[42,2191,67],{"class":59},[42,2193,2161],{"class":52},[42,2195,2164],{"class":59},[42,2197,2134],{"class":82},[42,2199,86],{"class":59},[42,2201,406],{"class":52},[42,2203,92],{"class":59},[42,2205,2206],{"class":95},"// [1, 2, 3, 4, 5]\n",[10,2208,2210],{"id":2209},"objects","Object",[15,2212,2214],{"id":2213},"config-for-properties","Управление свойствами",[20,2216,2217],{},"метод создания объекта, который дает нам больше контроля\nнад свойствами и методами, позволяя задать для каждого:",[20,2219,2220,2221,2224,2225,2228],{},"writeable - можно ли перезаписывать\nenumerable - является ли перечисляемым, будет ли доступен ",[29,2222,2223],{},"for...in","\nconfigurable - можно ли удалять или менять при помощи ",[29,2226,2227],{},"defineProperty","\nset - функция для записи значения\nget - функция для чтения значения",[33,2230,2232],{"className":35,"code":2231,"language":37,"meta":38,"style":38},"const tom = Object.create(Object.prototype, {  \n  name: {    \n    value: \"Tim\",\n    enumerable: true, // доступно для перебора\n    writable: false  // не доступно для записи\n  },  \n  age: { \n    value: 20,\n    enumerable: true, // доступно для перебора\n    writable: true // доступно для записи\n  },  \n  print: {    \n    value: function() { console.log(`Name: ${this.name}  Age: ${this.age}`);},\n    enumerable: false, // не доступно для перебора\n    writable: false, // не доступно для записи\n  }  \n});\n\n",[29,2233,2234,2261,2266,2277,2289,2300,2305,2310,2319,2329,2338,2342,2348,2394,2406,2418,2424],{"__ignoreMap":38},[42,2235,2236,2238,2241,2243,2246,2249,2251,2253,2255,2258],{"class":44,"line":45},[42,2237,49],{"class":48},[42,2239,2240],{"class":52}," tom",[42,2242,56],{"class":48},[42,2244,2245],{"class":59}," Object.",[42,2247,2248],{"class":82},"create",[42,2250,86],{"class":59},[42,2252,2210],{"class":52},[42,2254,2109],{"class":59},[42,2256,2257],{"class":52},"prototype",[42,2259,2260],{"class":59},", {  \n",[42,2262,2263],{"class":44,"line":76},[42,2264,2265],{"class":59},"  name: {    \n",[42,2267,2268,2271,2274],{"class":44,"line":99},[42,2269,2270],{"class":59},"    value: ",[42,2272,2273],{"class":63},"\"Tim\"",[42,2275,2276],{"class":59},",\n",[42,2278,2279,2282,2284,2286],{"class":44,"line":450},[42,2280,2281],{"class":59},"    enumerable: ",[42,2283,798],{"class":52},[42,2285,67],{"class":59},[42,2287,2288],{"class":95},"// доступно для перебора\n",[42,2290,2291,2294,2297],{"class":44,"line":692},[42,2292,2293],{"class":59},"    writable: ",[42,2295,2296],{"class":52},"false",[42,2298,2299],{"class":95},"  // не доступно для записи\n",[42,2301,2302],{"class":44,"line":1249},[42,2303,2304],{"class":59},"  },  \n",[42,2306,2307],{"class":44,"line":1256},[42,2308,2309],{"class":59},"  age: { \n",[42,2311,2312,2314,2317],{"class":44,"line":1291},[42,2313,2270],{"class":59},[42,2315,2316],{"class":52},"20",[42,2318,2276],{"class":59},[42,2320,2321,2323,2325,2327],{"class":44,"line":1306},[42,2322,2281],{"class":59},[42,2324,798],{"class":52},[42,2326,67],{"class":59},[42,2328,2288],{"class":95},[42,2330,2331,2333,2335],{"class":44,"line":1319},[42,2332,2293],{"class":59},[42,2334,798],{"class":52},[42,2336,2337],{"class":95}," // доступно для записи\n",[42,2339,2340],{"class":44,"line":1324},[42,2341,2304],{"class":59},[42,2343,2345],{"class":44,"line":2344},12,[42,2346,2347],{"class":59},"  print: {    \n",[42,2349,2351,2354,2357,2360,2363,2366,2368,2371,2374,2376,2378,2381,2383,2385,2388,2391],{"class":44,"line":2350},13,[42,2352,2353],{"class":82},"    value",[42,2355,2356],{"class":59},": ",[42,2358,2359],{"class":48},"function",[42,2361,2362],{"class":59},"() { console.",[42,2364,2365],{"class":82},"log",[42,2367,86],{"class":59},[42,2369,2370],{"class":63},"`Name: ${",[42,2372,2373],{"class":52},"this",[42,2375,2109],{"class":63},[42,2377,828],{"class":59},[42,2379,2380],{"class":63},"}  Age: ${",[42,2382,2373],{"class":52},[42,2384,2109],{"class":63},[42,2386,2387],{"class":59},"age",[42,2389,2390],{"class":63},"}`",[42,2392,2393],{"class":59},");},\n",[42,2395,2397,2399,2401,2403],{"class":44,"line":2396},14,[42,2398,2281],{"class":59},[42,2400,2296],{"class":52},[42,2402,67],{"class":59},[42,2404,2405],{"class":95},"// не доступно для перебора\n",[42,2407,2409,2411,2413,2415],{"class":44,"line":2408},15,[42,2410,2293],{"class":59},[42,2412,2296],{"class":52},[42,2414,67],{"class":59},[42,2416,2417],{"class":95},"// не доступно для записи\n",[42,2419,2421],{"class":44,"line":2420},16,[42,2422,2423],{"class":59},"  }  \n",[42,2425,2427],{"class":44,"line":2426},17,[42,2428,2429],{"class":59},"});\n",[20,2431,2432,2433],{},"позволяет настроить выбранное свойство объекта.\nНе сработает, если ",[29,2434,2435],{},"configurable = false ",[20,2437,2438],{},"запрещает добавление свойств",[20,2440,2441,2442,2109],{},"запрещает добавление и удаление свойств, все текущие свойства делает ",[29,2443,2444],{},"configurable: false",[20,2446,2447,2448,67,2450,2109],{},"запрещает добавление, удаление и изменение свойств,все текущие свойства делает ",[29,2449,2444],{},[29,2451,2452],{},"writable: false",[15,2454,2456],{"id":2455},"helpers-for-properties","Хелперы для свойств",[20,2458,2459,2460,2463,2464,2467],{},"копирует все ",[24,2461,2462],{},"перечисляемые"," ",[29,2465,2466],{},"enumerable: true"," свойства из одного или\nболее объектов в целевой объект. Копирование неглубокое, для объектов, массивов, функций будет скопирована ссылка.",[20,2469,2470,2471,2109],{},"проверяет, является ли свойство собственным(не унаследованным).\nЧтобы проверить унаследованное свойство можно воспользоваться ",[29,2472,2473],{},"in",[33,2475,2477],{"className":35,"code":2476,"language":37,"meta":38,"style":38},"const person = {\n  name: \"Zhenya\"\n};\n\nObject.hasOwn(person, \"name\"); // true\nObject.hasOwn(person, \"toString\"); // false\n\n",[29,2478,2479,2490,2498,2503,2507,2525],{"__ignoreMap":38},[42,2480,2481,2483,2486,2488],{"class":44,"line":45},[42,2482,49],{"class":48},[42,2484,2485],{"class":52}," person",[42,2487,56],{"class":48},[42,2489,1288],{"class":59},[42,2491,2492,2495],{"class":44,"line":76},[42,2493,2494],{"class":59},"  name: ",[42,2496,2497],{"class":63},"\"Zhenya\"\n",[42,2499,2500],{"class":44,"line":99},[42,2501,2502],{"class":59},"};\n",[42,2504,2505],{"class":44,"line":450},[42,2506,1253],{"emptyLinePlaceholder":1252},[42,2508,2509,2512,2515,2518,2521,2523],{"class":44,"line":692},[42,2510,2511],{"class":59},"Object.",[42,2513,2514],{"class":82},"hasOwn",[42,2516,2517],{"class":59},"(person, ",[42,2519,2520],{"class":63},"\"name\"",[42,2522,92],{"class":59},[42,2524,846],{"class":95},[42,2526,2527,2529,2531,2533,2536,2538],{"class":44,"line":1249},[42,2528,2511],{"class":59},[42,2530,2514],{"class":82},[42,2532,2517],{"class":59},[42,2534,2535],{"class":63},"\"toString\"",[42,2537,92],{"class":59},[42,2539,894],{"class":95},[20,2541,2542,2543],{},"проверяет, был ли вызван ",[29,2544,2545],{},"preventExtensions",[20,2547,2542,2548],{},[29,2549,2550],{},"seal",[20,2552,2542,2553],{},[29,2554,2555],{},"freeze",[15,2557,2559],{"id":2558},"keys-and-values","Ключи и значения",[20,2561,2562,2563,2565],{},"вернет ",[24,2564,2462],{}," свойства в виде массива",[33,2567,2569],{"className":35,"code":2568,"language":37,"meta":38,"style":38},"Object.entries({\n  name: 'Zhenya',\n  age: 27,\n}); // [['name', 'Zhenya'], ['age', 27]]\n\n",[29,2570,2571,2581,2590,2600],{"__ignoreMap":38},[42,2572,2573,2575,2578],{"class":44,"line":45},[42,2574,2511],{"class":59},[42,2576,2577],{"class":82},"entries",[42,2579,2580],{"class":59},"({\n",[42,2582,2583,2585,2588],{"class":44,"line":76},[42,2584,2494],{"class":59},[42,2586,2587],{"class":63},"'Zhenya'",[42,2589,2276],{"class":59},[42,2591,2592,2595,2598],{"class":44,"line":99},[42,2593,2594],{"class":59},"  age: ",[42,2596,2597],{"class":52},"27",[42,2599,2276],{"class":59},[42,2601,2602,2605],{"class":44,"line":450},[42,2603,2604],{"class":59},"}); ",[42,2606,2607],{"class":95},"// [['name', 'Zhenya'], ['age', 27]]\n",[20,2609,2610],{},"обратно превратит массив в объект",[33,2612,2614],{"className":35,"code":2613,"language":37,"meta":38,"style":38},"Object.fromEntries([['name', 'Zhenya'], ['age', 27]]); // { name: 'Zhenya', age: 27 }\n\n",[29,2615,2616],{"__ignoreMap":38},[42,2617,2618,2620,2623,2626,2629,2631,2633,2635,2638,2640,2642,2645],{"class":44,"line":45},[42,2619,2511],{"class":59},[42,2621,2622],{"class":82},"fromEntries",[42,2624,2625],{"class":59},"([[",[42,2627,2628],{"class":63},"'name'",[42,2630,67],{"class":59},[42,2632,2587],{"class":63},[42,2634,314],{"class":59},[42,2636,2637],{"class":63},"'age'",[42,2639,67],{"class":59},[42,2641,2597],{"class":52},[42,2643,2644],{"class":59},"]]); ",[42,2646,2647],{"class":95},"// { name: 'Zhenya', age: 27 }\n",[20,2649,2650],{},"по простому - получить массив ключей.\nВернет только собственные(без прототипа) и перечисляемые(for...in) свойства.",[33,2652,2654],{"className":35,"code":2653,"language":37,"meta":38,"style":38},"Object.keys({\n  name: 'Zhenya',\n  age: 27,\n}); // ['name', 'age']\n\n",[29,2655,2656,2665,2673,2681],{"__ignoreMap":38},[42,2657,2658,2660,2663],{"class":44,"line":45},[42,2659,2511],{"class":59},[42,2661,2662],{"class":82},"keys",[42,2664,2580],{"class":59},[42,2666,2667,2669,2671],{"class":44,"line":76},[42,2668,2494],{"class":59},[42,2670,2587],{"class":63},[42,2672,2276],{"class":59},[42,2674,2675,2677,2679],{"class":44,"line":99},[42,2676,2594],{"class":59},[42,2678,2597],{"class":52},[42,2680,2276],{"class":59},[42,2682,2683,2685],{"class":44,"line":450},[42,2684,2604],{"class":59},[42,2686,2687],{"class":95},"// ['name', 'age']\n",[20,2689,2690],{},"вернет массив значений",[33,2692,2694],{"className":35,"code":2693,"language":37,"meta":38,"style":38},"Object.values({\n  name: 'Zhenya',\n  age: 27,\n}); // ['Zhenya', 27]\n\n",[29,2695,2696,2705,2713,2721],{"__ignoreMap":38},[42,2697,2698,2700,2703],{"class":44,"line":45},[42,2699,2511],{"class":59},[42,2701,2702],{"class":82},"values",[42,2704,2580],{"class":59},[42,2706,2707,2709,2711],{"class":44,"line":76},[42,2708,2494],{"class":59},[42,2710,2587],{"class":63},[42,2712,2276],{"class":59},[42,2714,2715,2717,2719],{"class":44,"line":99},[42,2716,2594],{"class":59},[42,2718,2597],{"class":52},[42,2720,2276],{"class":59},[42,2722,2723,2725],{"class":44,"line":450},[42,2724,2604],{"class":59},[42,2726,2727],{"class":95},"// ['Zhenya', 27]\n",[10,2729,2731],{"id":2730},"functions","Function",[20,2733,2734,2735,2737],{},"вызывает функцию с указанным значением ",[29,2736,2373],{}," и аргументами.",[33,2739,2743],{"className":2740,"code":2741,"language":2742,"meta":38,"style":38},"language-ts shiki shiki-themes github-light github-dark","\nfunction multiply(a, b) {\n  this.logger(a * b);\n  return aa * b;\n}\n\nmultiply.call({ logger: console.log }, 2, 2); // 4\n\n// Мы не можем указать контекст для стрелочной функции\nconst addArrowFn = (a, b) => {\n  this.logger(a + b);\n  return a + b;\n};\n\nmultiply.call({ logger: console.log }, 2, 2); // TypeError: this.logger is not a function\n\n\n","ts",[29,2744,2745,2749,2767,2785,2797,2802,2806,2828,2832,2837,2861,2875,2885,2889,2893],{"__ignoreMap":38},[42,2746,2747],{"class":44,"line":45},[42,2748,1253],{"emptyLinePlaceholder":1252},[42,2750,2751,2753,2756,2758,2760,2762,2764],{"class":44,"line":76},[42,2752,2359],{"class":48},[42,2754,2755],{"class":82}," multiply",[42,2757,86],{"class":59},[42,2759,1548],{"class":702},[42,2761,67],{"class":59},[42,2763,1553],{"class":702},[42,2765,2766],{"class":59},") {\n",[42,2768,2769,2772,2774,2777,2780,2783],{"class":44,"line":99},[42,2770,2771],{"class":52},"  this",[42,2773,2109],{"class":59},[42,2775,2776],{"class":82},"logger",[42,2778,2779],{"class":59},"(a ",[42,2781,2782],{"class":48},"*",[42,2784,1707],{"class":59},[42,2786,2787,2789,2792,2794],{"class":44,"line":450},[42,2788,1294],{"class":48},[42,2790,2791],{"class":59}," aa ",[42,2793,2782],{"class":48},[42,2795,2796],{"class":59}," b;\n",[42,2798,2799],{"class":44,"line":692},[42,2800,2801],{"class":59},"}\n",[42,2803,2804],{"class":44,"line":1249},[42,2805,1253],{"emptyLinePlaceholder":1252},[42,2807,2808,2811,2814,2817,2819,2821,2823,2825],{"class":44,"line":1256},[42,2809,2810],{"class":59},"multiply.",[42,2812,2813],{"class":82},"call",[42,2815,2816],{"class":59},"({ logger: console.log }, ",[42,2818,406],{"class":52},[42,2820,67],{"class":59},[42,2822,406],{"class":52},[42,2824,92],{"class":59},[42,2826,2827],{"class":95},"// 4\n",[42,2829,2830],{"class":44,"line":1291},[42,2831,1253],{"emptyLinePlaceholder":1252},[42,2833,2834],{"class":44,"line":1306},[42,2835,2836],{"class":95},"// Мы не можем указать контекст для стрелочной функции\n",[42,2838,2839,2841,2844,2846,2849,2851,2853,2855,2857,2859],{"class":44,"line":1319},[42,2840,49],{"class":48},[42,2842,2843],{"class":82}," addArrowFn",[42,2845,56],{"class":48},[42,2847,2848],{"class":59}," (",[42,2850,1548],{"class":702},[42,2852,67],{"class":59},[42,2854,1553],{"class":702},[42,2856,373],{"class":59},[42,2858,1285],{"class":48},[42,2860,1288],{"class":59},[42,2862,2863,2865,2867,2869,2871,2873],{"class":44,"line":1324},[42,2864,2771],{"class":52},[42,2866,2109],{"class":59},[42,2868,2776],{"class":82},[42,2870,2779],{"class":59},[42,2872,1300],{"class":48},[42,2874,1707],{"class":59},[42,2876,2877,2879,2881,2883],{"class":44,"line":2344},[42,2878,1294],{"class":48},[42,2880,1560],{"class":59},[42,2882,1300],{"class":48},[42,2884,2796],{"class":59},[42,2886,2887],{"class":44,"line":2350},[42,2888,2502],{"class":59},[42,2890,2891],{"class":44,"line":2396},[42,2892,1253],{"emptyLinePlaceholder":1252},[42,2894,2895,2897,2899,2901,2903,2905,2907,2909],{"class":44,"line":2408},[42,2896,2810],{"class":59},[42,2898,2813],{"class":82},[42,2900,2816],{"class":59},[42,2902,406],{"class":52},[42,2904,67],{"class":59},[42,2906,406],{"class":52},[42,2908,92],{"class":59},[42,2910,2911],{"class":95},"// TypeError: this.logger is not a function\n",[20,2913,558,2914,2916],{},[29,2915,2813],{},", но аргументы передаются в виде массива",[33,2918,2920],{"className":2740,"code":2919,"language":2742,"meta":38,"style":38},"multiply.apply({ logger: console.log }, [2, 3]); // 6\n",[29,2921,2922],{"__ignoreMap":38},[42,2923,2924,2926,2929,2932,2934,2936,2938,2940],{"class":44,"line":45},[42,2925,2810],{"class":59},[42,2927,2928],{"class":82},"apply",[42,2930,2931],{"class":59},"({ logger: console.log }, [",[42,2933,406],{"class":52},[42,2935,67],{"class":59},[42,2937,442],{"class":52},[42,2939,320],{"class":59},[42,2941,2942],{"class":95},"// 6\n",[20,2944,2945,2946],{},"создает новую функцию, привязывая ей переданный ",[29,2947,2373],{},[33,2949,2951],{"className":2740,"code":2950,"language":2742,"meta":38,"style":38},"\nconst multiplyTwo = add.bind({ logger: console.log }, 2);\n\nmultiplyTwo(4); // 8\n\n",[29,2952,2953,2957,2978,2982],{"__ignoreMap":38},[42,2954,2955],{"class":44,"line":45},[42,2956,1253],{"emptyLinePlaceholder":1252},[42,2958,2959,2961,2964,2966,2969,2972,2974,2976],{"class":44,"line":76},[42,2960,49],{"class":48},[42,2962,2963],{"class":52}," multiplyTwo",[42,2965,56],{"class":48},[42,2967,2968],{"class":59}," add.",[42,2970,2971],{"class":82},"bind",[42,2973,2816],{"class":59},[42,2975,406],{"class":52},[42,2977,1835],{"class":59},[42,2979,2980],{"class":44,"line":99},[42,2981,1253],{"emptyLinePlaceholder":1252},[42,2983,2984,2987,2989,2991,2993],{"class":44,"line":450},[42,2985,2986],{"class":82},"multiplyTwo",[42,2988,86],{"class":59},[42,2990,1526],{"class":52},[42,2992,92],{"class":59},[42,2994,2995],{"class":95},"// 8\n",[2997,2998,2999],"style",{},"html pre.shiki code .szBVR, html code.shiki .szBVR{--shiki-default:#D73A49;--shiki-dark:#F97583}html pre.shiki code .sj4cs, html code.shiki .sj4cs{--shiki-default:#005CC5;--shiki-dark:#79B8FF}html pre.shiki code .sVt8B, html code.shiki .sVt8B{--shiki-default:#24292E;--shiki-dark:#E1E4E8}html pre.shiki code .sZZnC, html code.shiki .sZZnC{--shiki-default:#032F62;--shiki-dark:#9ECBFF}html pre.shiki code .sScJk, html code.shiki .sScJk{--shiki-default:#6F42C1;--shiki-dark:#B392F0}html pre.shiki code .sJ8bj, html code.shiki .sJ8bj{--shiki-default:#6A737D;--shiki-dark:#6A737D}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html pre.shiki code .s4XuR, html code.shiki .s4XuR{--shiki-default:#E36209;--shiki-dark:#FFAB70}",{"title":38,"searchDepth":76,"depth":76,"links":3001},[3002,3009,3014],{"id":12,"depth":76,"text":13,"children":3003},[3004,3005,3006,3007,3008],{"id":17,"depth":99,"text":18},{"id":629,"depth":99,"text":630},{"id":962,"depth":99,"text":963},{"id":1504,"depth":99,"text":1505},{"id":1728,"depth":99,"text":1729},{"id":2209,"depth":76,"text":2210,"children":3010},[3011,3012,3013],{"id":2213,"depth":99,"text":2214},{"id":2455,"depth":99,"text":2456},{"id":2558,"depth":99,"text":2559},{"id":2730,"depth":76,"text":2731},"2024-02-26","Методы массивов, объектов и функций, которые полезно знать","md",{},"/blog/js-built-in-methods","/images/js-methods-preview.jpg",{"title":5,"description":3016},"blog/js-built-in-methods",[3024,3025,3026],"javascript","cheatsheet","interview","_bGMRXaznUGP2MjaGbSPahHCUXjfLaUYUdPN_3-xtjY",[3029,3033],{"title":3030,"path":3031,"stem":3032,"children":-1},"Пишем свой redux-toolkit","/blog/implementing-own-redux-toolkit","blog/implementing-own-redux-toolkit",{"title":3034,"path":3035,"stem":3036,"children":-1},"Progressive images при помощи base64 миниатюр","/blog/progressive-images-using-thumbhash","blog/progressive-images-using-thumbhash",1751114697169]