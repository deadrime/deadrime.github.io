[{"data":1,"prerenderedAt":4524},["ShallowReactive",2],{"articles_interview":3},[4,1556],{"id":5,"title":6,"body":7,"date":1544,"description":1545,"extension":1546,"meta":1547,"navigation":205,"path":1548,"previewImg":1549,"seo":1550,"stem":1551,"topics":1552,"__hash__":1555},"articles/blog/advanced-css.md","Шпаргалка по CSS",{"type":8,"value":9,"toc":1533},"minimark",[10,15,28,33,43,54,58,61,87,90,98,134,150,330,334,337,374,381,397,457,462,553,707,710,801,805,811,820,864,868,1053,1057,1060,1087,1090,1228,1388,1405,1496,1500,1503,1529],[11,12,14],"h2",{"id":13},"array","Единицы измерения",[16,17,18,19,23,24,27],"p",{},"Помимо стандартных ",[20,21,22],"code",{},"px"," и ",[20,25,26],{},"%"," существует 1001 способ задать размер элементам.",[29,30,32],"h3",{"id":31},"font-based","Зависящие от размера шрифта",[16,34,35,38,39,42],{},[20,36,37],{},"em"," - зависит от ",[20,40,41],{},"font-size"," дочернего элемента",[16,44,45,38,48,50,51],{},[20,46,47],{},"rem",[20,49,41],{}," элемента ",[20,52,53],{},"html",[29,55,57],{"id":56},"screen-based","Относительно экрана (viewport-а)",[16,59,60],{},"Появились в первую очередь для мобилок",[62,63,64,71,77],"ul",{},[65,66,67,70],"li",{},[20,68,69],{},"vw"," - viewport width, % от ширины окна браузера.",[65,72,73,76],{},[20,74,75],{},"vh"," - viewport height, % от высоты окна браузера",[65,78,79,82,83,86],{},[20,80,81],{},"vmin",", ",[20,84,85],{},"vmax"," - для мобилок, % от меньшей/большей размерности вьюпорта вне зависимости от ориентации",[16,88,89],{},"Проблемы - не учитываются размеры элементов браузера, например адресная строка в safari или клавиатура",[16,91,92,93,97],{},"Чтобы решить эти проблемы - придумали ",[94,95,96],"del",{},"новый костыль"," модификаторы:",[62,99,100,106,112,118,124],{},[65,101,102,105],{},[20,103,104],{},"svh"," - small viewport height, представляет высоту области просмотра, когда пользовательский интерфейс адресной строки еще не уменьшил свой размер. svh отвечает за то содержимое страницы, которое вы будете видеть, когда интерфейс адресной строки растянут до максимума.",[65,107,108,111],{},[20,109,110],{},"lvh"," - large viewport height, представляет высоту области просмотра после того, как пользовательский интерфейс адресной строки уменьшил свой размер. lvh отвечает за то содержимое страницы, когда пользовательский интерфейс сжат до минимума.",[65,113,114,117],{},[20,115,116],{},"dvh"," - dynamic viewport height - использует любое из значений svh или lvh в зависимости от того, уменьшен ли интерфейс адресной строки. dvh просчитывает переходные состояния между максимальным и минимальным размером UI в браузере.",[65,119,120,123],{},[20,121,122],{},"svw, lvw, dvw"," - такая же история для ширины области просмотра",[65,125,126,129,130,82,132],{},[20,127,128],{},"svmin, lvmin, dvmin"," - аналог ",[20,131,81],{},[20,133,85],{},[16,135,136,137,140,141,140,144,140,147],{},"Однако классическую проблему со скроллбаром новые единицы так и не решили -\n",[20,138,139],{},"100svw"," = ",[20,142,143],{},"100dvw",[20,145,146],{},"100lvw",[20,148,149],{},"100vw",[151,152,154,246,249],"accordion",{"summary":153},"Решение проблемы со скроллбаром",[155,156,161],"pre",{"className":157,"code":158,"language":159,"meta":160,"style":160},"language-css shiki shiki-themes github-light github-dark","html,\nbody {\n  scrollbar-gutter: stable;\n}\n\n/* 100vw не вызовет появление горизонтального скролла */\n.full-width {\n  width: 100vw;\n}\n","css","",[20,162,163,175,184,194,200,207,214,223,241],{"__ignoreMap":160},[164,165,168,171],"span",{"class":166,"line":167},"line",1,[164,169,53],{"class":170},"s9eBZ",[164,172,174],{"class":173},"sVt8B",",\n",[164,176,178,181],{"class":166,"line":177},2,[164,179,180],{"class":170},"body",[164,182,183],{"class":173}," {\n",[164,185,187,191],{"class":166,"line":186},3,[164,188,190],{"class":189},"sj4cs","  scrollbar-gutter",[164,192,193],{"class":173},": stable;\n",[164,195,197],{"class":166,"line":196},4,[164,198,199],{"class":173},"}\n",[164,201,203],{"class":166,"line":202},5,[164,204,206],{"emptyLinePlaceholder":205},true,"\n",[164,208,210],{"class":166,"line":209},6,[164,211,213],{"class":212},"sJ8bj","/* 100vw не вызовет появление горизонтального скролла */\n",[164,215,217,221],{"class":166,"line":216},7,[164,218,220],{"class":219},"sScJk",".full-width",[164,222,183],{"class":173},[164,224,226,229,232,235,238],{"class":166,"line":225},8,[164,227,228],{"class":189},"  width",[164,230,231],{"class":173},": ",[164,233,234],{"class":189},"100",[164,236,69],{"class":237},"szBVR",[164,239,240],{"class":173},";\n",[164,242,244],{"class":166,"line":243},9,[164,245,199],{"class":173},[16,247,248],{},"либо",[155,250,252],{"className":157,"code":251,"language":159,"meta":160,"style":160},"body {\n  margin: 0;\n  container-type: inline-size;\n}\n\n.full-width {\n  width: 100vw; /* fallback for older browsers */\n  width: 100cqw; /* 100cqw учитывет сколлбар */\n}\n",[20,253,254,260,272,280,284,288,294,310,326],{"__ignoreMap":160},[164,255,256,258],{"class":166,"line":167},[164,257,180],{"class":170},[164,259,183],{"class":173},[164,261,262,265,267,270],{"class":166,"line":177},[164,263,264],{"class":189},"  margin",[164,266,231],{"class":173},[164,268,269],{"class":189},"0",[164,271,240],{"class":173},[164,273,274,277],{"class":166,"line":186},[164,275,276],{"class":189},"  container-type",[164,278,279],{"class":173},": inline-size;\n",[164,281,282],{"class":166,"line":196},[164,283,199],{"class":173},[164,285,286],{"class":166,"line":202},[164,287,206],{"emptyLinePlaceholder":205},[164,289,290,292],{"class":166,"line":209},[164,291,220],{"class":219},[164,293,183],{"class":173},[164,295,296,298,300,302,304,307],{"class":166,"line":216},[164,297,228],{"class":189},[164,299,231],{"class":173},[164,301,234],{"class":189},[164,303,69],{"class":237},[164,305,306],{"class":173},"; ",[164,308,309],{"class":212},"/* fallback for older browsers */\n",[164,311,312,314,316,318,321,323],{"class":166,"line":225},[164,313,228],{"class":189},[164,315,231],{"class":173},[164,317,234],{"class":189},[164,319,320],{"class":237},"cqw",[164,322,306],{"class":173},[164,324,325],{"class":212},"/* 100cqw учитывет сколлбар */\n",[164,327,328],{"class":166,"line":243},[164,329,199],{"class":173},[29,331,333],{"id":332},"container-based","Зависящие от размера блока",[16,335,336],{},"Можно использовать единицы измерения, которые будут зависить от размера блока",[62,338,339,344,350,356,362,368],{},[65,340,341,343],{},[20,342,320],{},": 1% of a query container's width",[65,345,346,349],{},[20,347,348],{},"cqh",": 1% of a query container's height",[65,351,352,355],{},[20,353,354],{},"cqi",": 1% of a query container's inline size",[65,357,358,361],{},[20,359,360],{},"cqb",": 1% of a query container's block size",[65,363,364,367],{},[20,365,366],{},"cqmin",": The smaller value of either cqi or cqb",[65,369,370,373],{},[20,371,372],{},"cqmax",": The larger value of either cqi or cqb",[16,375,376,377,380],{},"Чтобы использовать эти единицы измерения, нужно задать ",[20,378,379],{},"container-type"," у родительского контейнера:",[151,382,384,385,392,393],{"summary":383},"Объяснение container-type","  ",[386,387],"img",{"className":388,"src":391},[389,390],"w-full","max-w-lg","https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_logical_properties_and_values/Basic_concepts_of_logical_properties_and_values/mdn-horizontal.png","\n  ",[386,394],{"className":395,"src":396},[389,390],"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_logical_properties_and_values/Basic_concepts_of_logical_properties_and_values/mdn-vertical.png",[155,398,400],{"className":157,"code":399,"language":159,"meta":160,"style":160},".container {\n  container-type: inline-size;\n  container-name: card;\n}\n\n.container-child {\n  width: 100cqw; /* всегда будет того же размера, что и my-container */\n}\n",[20,401,402,409,415,423,427,431,438,453],{"__ignoreMap":160},[164,403,404,407],{"class":166,"line":167},[164,405,406],{"class":219},".container",[164,408,183],{"class":173},[164,410,411,413],{"class":166,"line":177},[164,412,276],{"class":189},[164,414,279],{"class":173},[164,416,417,420],{"class":166,"line":186},[164,418,419],{"class":189},"  container-name",[164,421,422],{"class":173},": card;\n",[164,424,425],{"class":166,"line":196},[164,426,199],{"class":173},[164,428,429],{"class":166,"line":202},[164,430,206],{"emptyLinePlaceholder":205},[164,432,433,436],{"class":166,"line":209},[164,434,435],{"class":219},".container-child",[164,437,183],{"class":173},[164,439,440,442,444,446,448,450],{"class":166,"line":216},[164,441,228],{"class":189},[164,443,231],{"class":173},[164,445,234],{"class":189},[164,447,320],{"class":237},[164,449,306],{"class":173},[164,451,452],{"class":212},"/* всегда будет того же размера, что и my-container */\n",[164,454,455],{"class":166,"line":225},[164,456,199],{"class":173},[16,458,459,461],{},[20,460,320],{}," всегда зависит от ширины контейнера, даже если есть вложенность.",[155,463,466],{"className":464,"code":465,"language":53,"meta":160,"style":160},"language-html shiki shiki-themes github-light github-dark","\u003Cdiv className=\"container\">\n  \u003Cdiv className=\"container-inner\">\n    \u003Cdiv className=\"container-child\">\n      Hi\n    \u003C/div>\n  \u003C/div>\n\u003C/div>\n",[20,467,468,489,505,521,526,535,544],{"__ignoreMap":160},[164,469,470,473,476,479,482,486],{"class":166,"line":167},[164,471,472],{"class":173},"\u003C",[164,474,475],{"class":170},"div",[164,477,478],{"class":219}," className",[164,480,481],{"class":173},"=",[164,483,485],{"class":484},"sZZnC","\"container\"",[164,487,488],{"class":173},">\n",[164,490,491,494,496,498,500,503],{"class":166,"line":177},[164,492,493],{"class":173},"  \u003C",[164,495,475],{"class":170},[164,497,478],{"class":219},[164,499,481],{"class":173},[164,501,502],{"class":484},"\"container-inner\"",[164,504,488],{"class":173},[164,506,507,510,512,514,516,519],{"class":166,"line":186},[164,508,509],{"class":173},"    \u003C",[164,511,475],{"class":170},[164,513,478],{"class":219},[164,515,481],{"class":173},[164,517,518],{"class":484},"\"container-child\"",[164,520,488],{"class":173},[164,522,523],{"class":166,"line":196},[164,524,525],{"class":173},"      Hi\n",[164,527,528,531,533],{"class":166,"line":202},[164,529,530],{"class":173},"    \u003C/",[164,532,475],{"class":170},[164,534,488],{"class":173},[164,536,537,540,542],{"class":166,"line":209},[164,538,539],{"class":173},"  \u003C/",[164,541,475],{"class":170},[164,543,488],{"class":173},[164,545,546,549,551],{"class":166,"line":216},[164,547,548],{"class":173},"\u003C/",[164,550,475],{"class":170},[164,552,488],{"class":173},[155,554,556],{"className":157,"code":555,"language":159,"meta":160,"style":160},".container {\n  width: 400px;\n  height: 400px;\n  background: blueviolet;\n  container-type: inline-size;\n  container-name: card;\n}\n\n.container-inner {\n  width: 300px;\n}\n\n.container-child {\n  width: 100cqw; /* 400px, а не 300px */\n  height: 40px;\n  background: red;\n}\n",[20,557,558,564,577,590,602,608,614,618,622,629,643,648,653,660,676,690,702],{"__ignoreMap":160},[164,559,560,562],{"class":166,"line":167},[164,561,406],{"class":219},[164,563,183],{"class":173},[164,565,566,568,570,573,575],{"class":166,"line":177},[164,567,228],{"class":189},[164,569,231],{"class":173},[164,571,572],{"class":189},"400",[164,574,22],{"class":237},[164,576,240],{"class":173},[164,578,579,582,584,586,588],{"class":166,"line":186},[164,580,581],{"class":189},"  height",[164,583,231],{"class":173},[164,585,572],{"class":189},[164,587,22],{"class":237},[164,589,240],{"class":173},[164,591,592,595,597,600],{"class":166,"line":196},[164,593,594],{"class":189},"  background",[164,596,231],{"class":173},[164,598,599],{"class":189},"blueviolet",[164,601,240],{"class":173},[164,603,604,606],{"class":166,"line":202},[164,605,276],{"class":189},[164,607,279],{"class":173},[164,609,610,612],{"class":166,"line":209},[164,611,419],{"class":189},[164,613,422],{"class":173},[164,615,616],{"class":166,"line":216},[164,617,199],{"class":173},[164,619,620],{"class":166,"line":225},[164,621,206],{"emptyLinePlaceholder":205},[164,623,624,627],{"class":166,"line":243},[164,625,626],{"class":219},".container-inner",[164,628,183],{"class":173},[164,630,632,634,636,639,641],{"class":166,"line":631},10,[164,633,228],{"class":189},[164,635,231],{"class":173},[164,637,638],{"class":189},"300",[164,640,22],{"class":237},[164,642,240],{"class":173},[164,644,646],{"class":166,"line":645},11,[164,647,199],{"class":173},[164,649,651],{"class":166,"line":650},12,[164,652,206],{"emptyLinePlaceholder":205},[164,654,656,658],{"class":166,"line":655},13,[164,657,435],{"class":219},[164,659,183],{"class":173},[164,661,663,665,667,669,671,673],{"class":166,"line":662},14,[164,664,228],{"class":189},[164,666,231],{"class":173},[164,668,234],{"class":189},[164,670,320],{"class":237},[164,672,306],{"class":173},[164,674,675],{"class":212},"/* 400px, а не 300px */\n",[164,677,679,681,683,686,688],{"class":166,"line":678},15,[164,680,581],{"class":189},[164,682,231],{"class":173},[164,684,685],{"class":189},"40",[164,687,22],{"class":237},[164,689,240],{"class":173},[164,691,693,695,697,700],{"class":166,"line":692},16,[164,694,594],{"class":189},[164,696,231],{"class":173},[164,698,699],{"class":189},"red",[164,701,240],{"class":173},[164,703,705],{"class":166,"line":704},17,[164,706,199],{"class":173},[16,708,709],{},"Можно использовать в медиазапросах:",[155,711,713],{"className":157,"code":712,"language":159,"meta":160,"style":160},"@container (min-width: 400px) { /* Если ширина ближайшего контейнера больше 400px */\n  .card h2 {\n    font-size: 2em;\n  }\n}\n\n@container card (min-width: 400px) { /* Если ширина контейнера с именем card больше 400px */\n  .card h2 {\n    font-size: 2em;\n  }\n}\n",[20,714,715,726,736,750,755,759,763,773,781,793,797],{"__ignoreMap":160},[164,716,717,720,723],{"class":166,"line":167},[164,718,719],{"class":237},"@container",[164,721,722],{"class":173}," (min-width: 400px) { ",[164,724,725],{"class":212},"/* Если ширина ближайшего контейнера больше 400px */\n",[164,727,728,731,734],{"class":166,"line":177},[164,729,730],{"class":219},"  .card",[164,732,733],{"class":170}," h2",[164,735,183],{"class":173},[164,737,738,741,743,746,748],{"class":166,"line":186},[164,739,740],{"class":189},"    font-size",[164,742,231],{"class":173},[164,744,745],{"class":189},"2",[164,747,37],{"class":237},[164,749,240],{"class":173},[164,751,752],{"class":166,"line":196},[164,753,754],{"class":173},"  }\n",[164,756,757],{"class":166,"line":202},[164,758,199],{"class":173},[164,760,761],{"class":166,"line":209},[164,762,206],{"emptyLinePlaceholder":205},[164,764,765,767,770],{"class":166,"line":216},[164,766,719],{"class":237},[164,768,769],{"class":173}," card (min-width: 400px) { ",[164,771,772],{"class":212},"/* Если ширина контейнера с именем card больше 400px */\n",[164,774,775,777,779],{"class":166,"line":225},[164,776,730],{"class":219},[164,778,733],{"class":170},[164,780,183],{"class":173},[164,782,783,785,787,789,791],{"class":166,"line":243},[164,784,740],{"class":189},[164,786,231],{"class":173},[164,788,745],{"class":189},[164,790,37],{"class":237},[164,792,240],{"class":173},[164,794,795],{"class":166,"line":631},[164,796,754],{"class":173},[164,798,799],{"class":166,"line":645},[164,800,199],{"class":173},[29,802,804],{"id":803},"aspect-ratio-based","Зависящие от соотношения сторон",[16,806,807,810],{},[20,808,809],{},"aspect-ratio"," - соотношение ширины к высоте, например 1 / 1 - квадрат, а 16 / 9 - прямоугольник",[16,812,813,814,82,817],{},"Можно использовать в медиазапросах, для этого есть ",[20,815,816],{},"min-aspect-ratio",[20,818,819],{},"max-aspect-ratio",[155,821,823],{"className":157,"code":822,"language":159,"meta":160,"style":160},"@media screen and (min-aspect-ratio: 16/10) {\n  /* something for wide screens */\n}\n",[20,824,825,855,860],{"__ignoreMap":160},[164,826,827,830,833,836,839,841,843,846,849,852],{"class":166,"line":167},[164,828,829],{"class":237},"@media",[164,831,832],{"class":189}," screen",[164,834,835],{"class":237}," and",[164,837,838],{"class":173}," (",[164,840,816],{"class":189},[164,842,231],{"class":173},[164,844,845],{"class":189},"16",[164,847,848],{"class":237},"/",[164,850,851],{"class":189},"10",[164,853,854],{"class":173},") {\n",[164,856,857],{"class":166,"line":177},[164,858,859],{"class":212},"  /* something for wide screens */\n",[164,861,862],{"class":166,"line":186},[164,863,199],{"class":173},[11,865,867],{"id":866},"selectors","Селекторы",[155,869,871],{"className":157,"code":870,"language":159,"meta":160,"style":160},"/* По id */\n#foo {}\n\n/* По классу */\n.bar {}\n\n/* По наличию аттрибута */\n.input[type]\n\n/* По значению аттрибута */\n.input[type=\"submit\"]\n\n/* Потомок с классом .bar  внетри элемента с классом .foo */\n.foo .bar {}\n\n/* Элемент с классом .foo И классом .bar */\n.foo.bar {}\n\n/* Непосредственная вложенность - .bar может быть только на первом уровне вложенности */\n.foo > .bar {}\n\n/* Стили для .bar, если он расположен сразу после .foo (сосед) */\n.foo + .bar {}\n\n/* Стили для любого .bar, если он расположен после .foo (но не обязательно сосед)*/\n.foo ~ .bar {}\n",[20,872,873,878,886,890,895,902,906,911,925,929,934,949,953,958,968,972,977,984,989,995,1007,1012,1018,1030,1035,1041],{"__ignoreMap":160},[164,874,875],{"class":166,"line":167},[164,876,877],{"class":212},"/* По id */\n",[164,879,880,883],{"class":166,"line":177},[164,881,882],{"class":219},"#foo",[164,884,885],{"class":173}," {}\n",[164,887,888],{"class":166,"line":186},[164,889,206],{"emptyLinePlaceholder":205},[164,891,892],{"class":166,"line":196},[164,893,894],{"class":212},"/* По классу */\n",[164,896,897,900],{"class":166,"line":202},[164,898,899],{"class":219},".bar",[164,901,885],{"class":173},[164,903,904],{"class":166,"line":209},[164,905,206],{"emptyLinePlaceholder":205},[164,907,908],{"class":166,"line":216},[164,909,910],{"class":212},"/* По наличию аттрибута */\n",[164,912,913,916,919,922],{"class":166,"line":225},[164,914,915],{"class":219},".input",[164,917,918],{"class":173},"[",[164,920,921],{"class":219},"type",[164,923,924],{"class":173},"]\n",[164,926,927],{"class":166,"line":243},[164,928,206],{"emptyLinePlaceholder":205},[164,930,931],{"class":166,"line":631},[164,932,933],{"class":212},"/* По значению аттрибута */\n",[164,935,936,938,940,942,944,947],{"class":166,"line":645},[164,937,915],{"class":219},[164,939,918],{"class":173},[164,941,921],{"class":219},[164,943,481],{"class":237},[164,945,946],{"class":484},"\"submit\"",[164,948,924],{"class":173},[164,950,951],{"class":166,"line":650},[164,952,206],{"emptyLinePlaceholder":205},[164,954,955],{"class":166,"line":655},[164,956,957],{"class":212},"/* Потомок с классом .bar  внетри элемента с классом .foo */\n",[164,959,960,963,966],{"class":166,"line":662},[164,961,962],{"class":219},".foo",[164,964,965],{"class":219}," .bar",[164,967,885],{"class":173},[164,969,970],{"class":166,"line":678},[164,971,206],{"emptyLinePlaceholder":205},[164,973,974],{"class":166,"line":692},[164,975,976],{"class":212},"/* Элемент с классом .foo И классом .bar */\n",[164,978,979,982],{"class":166,"line":704},[164,980,981],{"class":219},".foo.bar",[164,983,885],{"class":173},[164,985,987],{"class":166,"line":986},18,[164,988,206],{"emptyLinePlaceholder":205},[164,990,992],{"class":166,"line":991},19,[164,993,994],{"class":212},"/* Непосредственная вложенность - .bar может быть только на первом уровне вложенности */\n",[164,996,998,1000,1003,1005],{"class":166,"line":997},20,[164,999,962],{"class":219},[164,1001,1002],{"class":237}," >",[164,1004,965],{"class":219},[164,1006,885],{"class":173},[164,1008,1010],{"class":166,"line":1009},21,[164,1011,206],{"emptyLinePlaceholder":205},[164,1013,1015],{"class":166,"line":1014},22,[164,1016,1017],{"class":212},"/* Стили для .bar, если он расположен сразу после .foo (сосед) */\n",[164,1019,1021,1023,1026,1028],{"class":166,"line":1020},23,[164,1022,962],{"class":219},[164,1024,1025],{"class":237}," +",[164,1027,965],{"class":219},[164,1029,885],{"class":173},[164,1031,1033],{"class":166,"line":1032},24,[164,1034,206],{"emptyLinePlaceholder":205},[164,1036,1038],{"class":166,"line":1037},25,[164,1039,1040],{"class":212},"/* Стили для любого .bar, если он расположен после .foo (но не обязательно сосед)*/\n",[164,1042,1044,1046,1049,1051],{"class":166,"line":1043},26,[164,1045,962],{"class":219},[164,1047,1048],{"class":237}," ~",[164,1050,965],{"class":219},[164,1052,885],{"class":173},[11,1054,1056],{"id":1055},"pseudo-classes","Псевдоклассы",[16,1058,1059],{},"Псевдокласс - ключевое слово, добавленное к селектору для уточнения его состояния.",[155,1061,1063],{"className":157,"code":1062,"language":159,"meta":160,"style":160},"selector:pseudo-class {\n  property: value;\n}\n",[20,1064,1065,1075,1083],{"__ignoreMap":160},[164,1066,1067,1070,1073],{"class":166,"line":167},[164,1068,1069],{"class":173},"selector:",[164,1071,1072],{"class":170},"pseudo-class",[164,1074,183],{"class":173},[164,1076,1077,1080],{"class":166,"line":177},[164,1078,1079],{"class":189},"  property",[164,1081,1082],{"class":173},": value;\n",[164,1084,1085],{"class":166,"line":186},[164,1086,199],{"class":173},[16,1088,1089],{},"Самые полезные:",[62,1091,1092,1098,1104,1110,1116,1136,1142,1152,1158,1166,1172,1180,1186,1192,1198,1204,1216,1222],{},[65,1093,1094,1097],{},[20,1095,1096],{},":hover"," - при наведении",[65,1099,1100,1103],{},[20,1101,1102],{},":focus"," - при фокусе (tab)",[65,1105,1106,1109],{},[20,1107,1108],{},":focus-within"," - при фокусе этого элемента или его детей",[65,1111,1112,1115],{},[20,1113,1114],{},":active"," - при активации, например при зажатии ЛКМ",[65,1117,1118,1121,1122,82,1125,1128,1129,1132,1133],{},[20,1119,1120],{},":checked"," - для выбранных ",[20,1123,1124],{},"\u003Cinput type=\"radio\">",[20,1126,1127],{},"\u003Cinput type=\"checkbox\">"," или ",[20,1130,1131],{},"\u003Coption>"," внутри ",[20,1134,1135],{},"\u003Cselect>",[65,1137,1138,1141],{},[20,1139,1140],{},":disabled"," - для кнопок",[65,1143,1144,1147,1148,1151],{},[20,1145,1146],{},":empty"," - когда у элемент пуст (нет children), можно применить ",[20,1149,1150],{},".element:empty { display: none }"," вместо условного рендеринга",[65,1153,1154,1157],{},[20,1155,1156],{},":first-child"," - первый ребенок своего родителя",[65,1159,1160,1163,1164],{},[20,1161,1162],{},":first-of-type"," - первый ребенок такого типа, например первый ",[20,1165,475],{},[65,1167,1168,1171],{},[20,1169,1170],{},":last-child"," - последний ребенок своего родителя",[65,1173,1174,1177,1178],{},[20,1175,1176],{},":last-of-type"," - последний ребенок такого типа, например последний ",[20,1179,475],{},[65,1181,1182,1185],{},[20,1183,1184],{},":nth-child()"," - какой-то конкетный ребенок (1-й, второй, третий, четный, нечетный)",[65,1187,1188,1191],{},[20,1189,1190],{},":nth-of-type()"," - какой-то конкетный элемент такого типа",[65,1193,1194,1197],{},[20,1195,1196],{},":only-child"," - единственный ребенок",[65,1199,1200,1203],{},[20,1201,1202],{},":only-of-type"," - единственный элемент такого типа",[65,1205,1206,82,1209,82,1212,1215],{},[20,1207,1208],{},":valid",[20,1210,1211],{},":optional",[20,1213,1214],{},":required"," - для валидации форм",[65,1217,1218,1221],{},[20,1219,1220],{},":visited"," - для посещенных ссылок, рудимент если честно",[65,1223,1224,1227],{},[20,1225,1226],{},":is()"," - позволяет проще писать сложный CSS",[155,1229,1231],{"className":157,"code":1230,"language":159,"meta":160,"style":160},".card h1,\n.card h2,\n.card h3 {\n  color: black;\n}\n\n.card :is(h1, h2, h3) {\n  color: black;\n}\n\na:hover,\na:focus {\n  color: purple;\n}\n\na:is(:hover, :focus) {\n  color: purple;\n}\n\n",[20,1232,1233,1243,1251,1260,1272,1276,1280,1303,1313,1317,1321,1330,1338,1349,1353,1357,1374,1384],{"__ignoreMap":160},[164,1234,1235,1238,1241],{"class":166,"line":167},[164,1236,1237],{"class":219},".card",[164,1239,1240],{"class":170}," h1",[164,1242,174],{"class":173},[164,1244,1245,1247,1249],{"class":166,"line":177},[164,1246,1237],{"class":219},[164,1248,733],{"class":170},[164,1250,174],{"class":173},[164,1252,1253,1255,1258],{"class":166,"line":186},[164,1254,1237],{"class":219},[164,1256,1257],{"class":170}," h3",[164,1259,183],{"class":173},[164,1261,1262,1265,1267,1270],{"class":166,"line":196},[164,1263,1264],{"class":189},"  color",[164,1266,231],{"class":173},[164,1268,1269],{"class":189},"black",[164,1271,240],{"class":173},[164,1273,1274],{"class":166,"line":202},[164,1275,199],{"class":173},[164,1277,1278],{"class":166,"line":209},[164,1279,206],{"emptyLinePlaceholder":205},[164,1281,1282,1284,1287,1290,1293,1295,1297,1299,1301],{"class":166,"line":216},[164,1283,1237],{"class":219},[164,1285,1286],{"class":219}," :is",[164,1288,1289],{"class":173},"(",[164,1291,1292],{"class":170},"h1",[164,1294,82],{"class":173},[164,1296,11],{"class":170},[164,1298,82],{"class":173},[164,1300,29],{"class":170},[164,1302,854],{"class":173},[164,1304,1305,1307,1309,1311],{"class":166,"line":225},[164,1306,1264],{"class":189},[164,1308,231],{"class":173},[164,1310,1269],{"class":189},[164,1312,240],{"class":173},[164,1314,1315],{"class":166,"line":243},[164,1316,199],{"class":173},[164,1318,1319],{"class":166,"line":631},[164,1320,206],{"emptyLinePlaceholder":205},[164,1322,1323,1326,1328],{"class":166,"line":645},[164,1324,1325],{"class":170},"a",[164,1327,1096],{"class":219},[164,1329,174],{"class":173},[164,1331,1332,1334,1336],{"class":166,"line":650},[164,1333,1325],{"class":170},[164,1335,1102],{"class":219},[164,1337,183],{"class":173},[164,1339,1340,1342,1344,1347],{"class":166,"line":655},[164,1341,1264],{"class":189},[164,1343,231],{"class":173},[164,1345,1346],{"class":189},"purple",[164,1348,240],{"class":173},[164,1350,1351],{"class":166,"line":662},[164,1352,199],{"class":173},[164,1354,1355],{"class":166,"line":678},[164,1356,206],{"emptyLinePlaceholder":205},[164,1358,1359,1361,1364,1366,1368,1370,1372],{"class":166,"line":692},[164,1360,1325],{"class":170},[164,1362,1363],{"class":219},":is",[164,1365,1289],{"class":173},[164,1367,1096],{"class":219},[164,1369,82],{"class":173},[164,1371,1102],{"class":219},[164,1373,854],{"class":173},[164,1375,1376,1378,1380,1382],{"class":166,"line":704},[164,1377,1264],{"class":189},[164,1379,231],{"class":173},[164,1381,1346],{"class":189},[164,1383,240],{"class":173},[164,1385,1386],{"class":166,"line":986},[164,1387,199],{"class":173},[62,1389,1390,1399],{},[65,1391,1392,1395,1396,1398],{},[20,1393,1394],{},":where()"," похож на ",[20,1397,1363],{},", но позволяет убить специфичность, идеально для reset",[65,1400,1401,1404],{},[20,1402,1403],{},":has()"," - позволяет проверить наличие у родителя наличие какого-то селектора внутри и выбрать именно родителя",[155,1406,1408],{"className":157,"code":1407,"language":159,"meta":160,"style":160},"/* Если в форме есть невалидный инпут - красим submit кнопку в красный  */\n.my-form:has(input:invalid) button[type=\"submit\"]{\n  background: red;\n}\n\n/*  Если есть открытая модалка - меняем цвет фона */\nhtml:has(.modal.open) {\n  background: red;\n}\n",[20,1409,1410,1415,1445,1455,1459,1463,1468,1482,1492],{"__ignoreMap":160},[164,1411,1412],{"class":166,"line":167},[164,1413,1414],{"class":212},"/* Если в форме есть невалидный инпут - красим submit кнопку в красный  */\n",[164,1416,1417,1420,1422,1425,1428,1431,1434,1436,1438,1440,1442],{"class":166,"line":177},[164,1418,1419],{"class":219},".my-form:has",[164,1421,1289],{"class":173},[164,1423,1424],{"class":170},"input",[164,1426,1427],{"class":219},":invalid",[164,1429,1430],{"class":173},") ",[164,1432,1433],{"class":170},"button",[164,1435,918],{"class":173},[164,1437,921],{"class":219},[164,1439,481],{"class":237},[164,1441,946],{"class":484},[164,1443,1444],{"class":173},"]{\n",[164,1446,1447,1449,1451,1453],{"class":166,"line":186},[164,1448,594],{"class":189},[164,1450,231],{"class":173},[164,1452,699],{"class":189},[164,1454,240],{"class":173},[164,1456,1457],{"class":166,"line":196},[164,1458,199],{"class":173},[164,1460,1461],{"class":166,"line":202},[164,1462,206],{"emptyLinePlaceholder":205},[164,1464,1465],{"class":166,"line":209},[164,1466,1467],{"class":212},"/*  Если есть открытая модалка - меняем цвет фона */\n",[164,1469,1470,1472,1475,1477,1480],{"class":166,"line":216},[164,1471,53],{"class":170},[164,1473,1474],{"class":219},":has",[164,1476,1289],{"class":173},[164,1478,1479],{"class":219},".modal.open",[164,1481,854],{"class":173},[164,1483,1484,1486,1488,1490],{"class":166,"line":225},[164,1485,594],{"class":189},[164,1487,231],{"class":173},[164,1489,699],{"class":189},[164,1491,240],{"class":173},[164,1493,1494],{"class":166,"line":243},[164,1495,199],{"class":173},[11,1497,1499],{"id":1498},"pseudo-elements","Псевдоэлементы",[16,1501,1502],{},"Псевдоэлементы не существуют в HTML разметке, они создаются только с помощью CSS,\nих нельзя создать, выбрать(querySelector-ом) и менять при помощи JS.",[62,1504,1505,1511,1517,1523],{},[65,1506,1507,1510],{},[20,1508,1509],{},"::after"," - добавить какой-то контент после элемента (создать псевдоэлемент, который является последним потомком)",[65,1512,1513,1516],{},[20,1514,1515],{},"::before"," - до (создать псевдоэлемент, который будет первым потомком)",[65,1518,1519,1522],{},[20,1520,1521],{},"::first-letter"," - стилизовать первую букву",[65,1524,1525,1528],{},[20,1526,1527],{},"::first-line"," - стилизовать первую линию",[1530,1531,1532],"style",{},"html pre.shiki code .s9eBZ, html code.shiki .s9eBZ{--shiki-default:#22863A;--shiki-dark:#85E89D}html pre.shiki code .sVt8B, html code.shiki .sVt8B{--shiki-default:#24292E;--shiki-dark:#E1E4E8}html pre.shiki code .sj4cs, html code.shiki .sj4cs{--shiki-default:#005CC5;--shiki-dark:#79B8FF}html pre.shiki code .sJ8bj, html code.shiki .sJ8bj{--shiki-default:#6A737D;--shiki-dark:#6A737D}html pre.shiki code .sScJk, html code.shiki .sScJk{--shiki-default:#6F42C1;--shiki-dark:#B392F0}html pre.shiki code .szBVR, html code.shiki .szBVR{--shiki-default:#D73A49;--shiki-dark:#F97583}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html pre.shiki code .sZZnC, html code.shiki .sZZnC{--shiki-default:#032F62;--shiki-dark:#9ECBFF}",{"title":160,"searchDepth":177,"depth":177,"links":1534},[1535,1541,1542,1543],{"id":13,"depth":177,"text":14,"children":1536},[1537,1538,1539,1540],{"id":31,"depth":186,"text":32},{"id":56,"depth":186,"text":57},{"id":332,"depth":186,"text":333},{"id":803,"depth":186,"text":804},{"id":866,"depth":177,"text":867},{"id":1055,"depth":177,"text":1056},{"id":1498,"depth":177,"text":1499},"2024-04-28","И продвинутые CSS штуки","md",{},"/blog/advanced-css","/images/advanced-css-preview.png",{"title":6,"description":1545},"blog/advanced-css",[159,1553,1554],"cheatsheet","interview","G8UEnfTE622H3qDDOjdMIvPZsUXF_IfTZbnRf-JWOXY",{"id":1557,"title":1558,"body":1559,"date":4514,"description":4515,"extension":1546,"meta":4516,"navigation":205,"path":4517,"previewImg":4518,"seo":4519,"stem":4520,"topics":4521,"__hash__":4523},"articles/blog/js-built-in-methods.md","Шпаргалка по built-in методам",{"type":8,"value":1560,"toc":4499},[1561,1564,1568,1579,1638,1645,1692,1699,1744,1750,1796,1799,1855,1869,2014,2017,2083,2089,2154,2158,2161,2246,2249,2318,2325,2371,2376,2419,2425,2484,2488,2491,2494,2534,2537,2578,2581,2622,2625,2662,2665,2707,2710,2861,2867,3004,3011,3014,3018,3021,3024,3027,3147,3154,3237,3241,3244,3250,3313,3316,3319,3368,3374,3424,3431,3487,3493,3582,3585,3614,3621,3718,3722,3726,3729,3740,3933,3939,3942,3948,3956,3960,3971,3977,4043,4049,4054,4059,4063,4069,4111,4114,4151,4154,4191,4194,4231,4235,4241,4412,4417,4443,4448,4496],[11,1562,1563],{"id":13},"Array",[29,1565,1567],{"id":1566},"add-delete-elements","Добавление и удаление элементов",[16,1569,1570,1571,1575,1576],{},"добавляет в ",[1572,1573,1574],"strong",{},"конец"," массива новый элемент, возвращает новый ",[20,1577,1578],{},"length",[155,1580,1584],{"className":1581,"code":1582,"language":1583,"meta":160,"style":160},"language-js shiki shiki-themes github-light github-dark","const arr = ['a', 'b'];\narr.push('c'); // 3\narr; // ['a', 'b', 'c']\n\n","js",[20,1585,1586,1611,1630],{"__ignoreMap":160},[164,1587,1588,1591,1594,1597,1600,1603,1605,1608],{"class":166,"line":167},[164,1589,1590],{"class":237},"const",[164,1592,1593],{"class":189}," arr",[164,1595,1596],{"class":237}," =",[164,1598,1599],{"class":173}," [",[164,1601,1602],{"class":484},"'a'",[164,1604,82],{"class":173},[164,1606,1607],{"class":484},"'b'",[164,1609,1610],{"class":173},"];\n",[164,1612,1613,1616,1619,1621,1624,1627],{"class":166,"line":177},[164,1614,1615],{"class":173},"arr.",[164,1617,1618],{"class":219},"push",[164,1620,1289],{"class":173},[164,1622,1623],{"class":484},"'c'",[164,1625,1626],{"class":173},"); ",[164,1628,1629],{"class":212},"// 3\n",[164,1631,1632,1635],{"class":166,"line":186},[164,1633,1634],{"class":173},"arr; ",[164,1636,1637],{"class":212},"// ['a', 'b', 'c']\n",[16,1639,1640,1641,1644],{},"удаляет и возвращает ",[1572,1642,1643],{},"последний"," элемент массива",[155,1646,1648],{"className":1581,"code":1647,"language":1583,"meta":160,"style":160},"const arr = ['a', 'b', 'c'];\narr.pop(); // 'c'\narr; // ['a', 'b']\n\n",[20,1649,1650,1672,1685],{"__ignoreMap":160},[164,1651,1652,1654,1656,1658,1660,1662,1664,1666,1668,1670],{"class":166,"line":167},[164,1653,1590],{"class":237},[164,1655,1593],{"class":189},[164,1657,1596],{"class":237},[164,1659,1599],{"class":173},[164,1661,1602],{"class":484},[164,1663,82],{"class":173},[164,1665,1607],{"class":484},[164,1667,82],{"class":173},[164,1669,1623],{"class":484},[164,1671,1610],{"class":173},[164,1673,1674,1676,1679,1682],{"class":166,"line":177},[164,1675,1615],{"class":173},[164,1677,1678],{"class":219},"pop",[164,1680,1681],{"class":173},"(); ",[164,1683,1684],{"class":212},"// 'c'\n",[164,1686,1687,1689],{"class":166,"line":186},[164,1688,1634],{"class":173},[164,1690,1691],{"class":212},"// ['a', 'b']\n",[16,1693,1570,1694,1575,1697],{},[1572,1695,1696],{},"начало",[20,1698,1578],{},[155,1700,1702],{"className":1581,"code":1701,"language":1583,"meta":160,"style":160},"const arr = ['a', 'b'];\narr.unshift('c'); // 3\narr; // ['с', 'a', 'b']\n\n",[20,1703,1704,1722,1737],{"__ignoreMap":160},[164,1705,1706,1708,1710,1712,1714,1716,1718,1720],{"class":166,"line":167},[164,1707,1590],{"class":237},[164,1709,1593],{"class":189},[164,1711,1596],{"class":237},[164,1713,1599],{"class":173},[164,1715,1602],{"class":484},[164,1717,82],{"class":173},[164,1719,1607],{"class":484},[164,1721,1610],{"class":173},[164,1723,1724,1726,1729,1731,1733,1735],{"class":166,"line":177},[164,1725,1615],{"class":173},[164,1727,1728],{"class":219},"unshift",[164,1730,1289],{"class":173},[164,1732,1623],{"class":484},[164,1734,1626],{"class":173},[164,1736,1629],{"class":212},[164,1738,1739,1741],{"class":166,"line":186},[164,1740,1634],{"class":173},[164,1742,1743],{"class":212},"// ['с', 'a', 'b']\n",[16,1745,1640,1746,1749],{},[1572,1747,1748],{},"первый"," элемент массива.",[155,1751,1753],{"className":1581,"code":1752,"language":1583,"meta":160,"style":160},"const arr = ['a', 'b', 'c'];\narr.shift(); // 'a'\narr; // ['b', 'c']\n\n",[20,1754,1755,1777,1789],{"__ignoreMap":160},[164,1756,1757,1759,1761,1763,1765,1767,1769,1771,1773,1775],{"class":166,"line":167},[164,1758,1590],{"class":237},[164,1760,1593],{"class":189},[164,1762,1596],{"class":237},[164,1764,1599],{"class":173},[164,1766,1602],{"class":484},[164,1768,82],{"class":173},[164,1770,1607],{"class":484},[164,1772,82],{"class":173},[164,1774,1623],{"class":484},[164,1776,1610],{"class":173},[164,1778,1779,1781,1784,1786],{"class":166,"line":177},[164,1780,1615],{"class":173},[164,1782,1783],{"class":219},"shift",[164,1785,1681],{"class":173},[164,1787,1788],{"class":212},"// 'a'\n",[164,1790,1791,1793],{"class":166,"line":186},[164,1792,1634],{"class":173},[164,1794,1795],{"class":212},"// ['b', 'c']\n",[16,1797,1798],{},"создает новый массив, включающий в себя переданные значение/массивы.\nНе мутирует** исходный массив.",[155,1800,1802],{"className":1581,"code":1801,"language":1583,"meta":160,"style":160},"['a', 'b', 'c'].concat('b', 'c', ['d', 'e'], ['f']); // ['a', 'b', 'c', 'd', 'e', 'f']\n",[20,1803,1804],{"__ignoreMap":160},[164,1805,1806,1808,1810,1812,1814,1816,1818,1821,1824,1826,1828,1830,1832,1835,1838,1840,1843,1846,1849,1852],{"class":166,"line":167},[164,1807,918],{"class":173},[164,1809,1602],{"class":484},[164,1811,82],{"class":173},[164,1813,1607],{"class":484},[164,1815,82],{"class":173},[164,1817,1623],{"class":484},[164,1819,1820],{"class":173},"].",[164,1822,1823],{"class":219},"concat",[164,1825,1289],{"class":173},[164,1827,1607],{"class":484},[164,1829,82],{"class":173},[164,1831,1623],{"class":484},[164,1833,1834],{"class":173},", [",[164,1836,1837],{"class":484},"'d'",[164,1839,82],{"class":173},[164,1841,1842],{"class":484},"'e'",[164,1844,1845],{"class":173},"], [",[164,1847,1848],{"class":484},"'f'",[164,1850,1851],{"class":173},"]); ",[164,1853,1854],{"class":212},"// ['a', 'b', 'c', 'd', 'e', 'f']\n",[16,1856,1857,1858,1861,1862,1864,1865,1868],{},"принимает два индекса - начальный и конечный и возвращает обрезанную копию.\nЕсли передать только ",[20,1859,1860],{},"begin"," - обрежется с begin по последний индекс включительно.\nЕсли передать только отрицательный ",[20,1863,1860],{}," - можно вырезать N последних элементов массива.\nЕсли передать отрицательный ",[20,1866,1867],{},"end"," - обрежется с begin по по последний индекс минус end.",[155,1870,1872],{"className":1581,"code":1871,"language":1583,"meta":160,"style":160},"['a', 'b', 'c', 'd'].slice(1) // ['b', 'c', 'd'] - обрезать с индекса 1 по конец массива\n['a', 'b', 'c', 'd'].slice(-2) // ['b', 'c', 'd'] - вырезать последние два элемента массива\n['a', 'b', 'c', 'd'].slice(1, 3) // ['b', 'c'] - обрезать с индекса 1 по индекс 3, т.е. элементы с индексами 1, 2\n['a', 'b', 'c', 'd'].slice(0, -1); // ['a', 'b', 'c'] - обрезать, убрав последний элемент\n",[20,1873,1874,1907,1941,1977],{"__ignoreMap":160},[164,1875,1876,1878,1880,1882,1884,1886,1888,1890,1892,1894,1897,1899,1902,1904],{"class":166,"line":167},[164,1877,918],{"class":173},[164,1879,1602],{"class":484},[164,1881,82],{"class":173},[164,1883,1607],{"class":484},[164,1885,82],{"class":173},[164,1887,1623],{"class":484},[164,1889,82],{"class":173},[164,1891,1837],{"class":484},[164,1893,1820],{"class":173},[164,1895,1896],{"class":219},"slice",[164,1898,1289],{"class":173},[164,1900,1901],{"class":189},"1",[164,1903,1430],{"class":173},[164,1905,1906],{"class":212},"// ['b', 'c', 'd'] - обрезать с индекса 1 по конец массива\n",[164,1908,1909,1911,1913,1915,1917,1919,1921,1923,1925,1927,1929,1931,1934,1936,1938],{"class":166,"line":177},[164,1910,918],{"class":173},[164,1912,1602],{"class":484},[164,1914,82],{"class":173},[164,1916,1607],{"class":484},[164,1918,82],{"class":173},[164,1920,1623],{"class":484},[164,1922,82],{"class":173},[164,1924,1837],{"class":484},[164,1926,1820],{"class":173},[164,1928,1896],{"class":219},[164,1930,1289],{"class":173},[164,1932,1933],{"class":237},"-",[164,1935,745],{"class":189},[164,1937,1430],{"class":173},[164,1939,1940],{"class":212},"// ['b', 'c', 'd'] - вырезать последние два элемента массива\n",[164,1942,1943,1945,1947,1949,1951,1953,1955,1957,1959,1961,1963,1965,1967,1969,1972,1974],{"class":166,"line":186},[164,1944,918],{"class":173},[164,1946,1602],{"class":484},[164,1948,82],{"class":173},[164,1950,1607],{"class":484},[164,1952,82],{"class":173},[164,1954,1623],{"class":484},[164,1956,82],{"class":173},[164,1958,1837],{"class":484},[164,1960,1820],{"class":173},[164,1962,1896],{"class":219},[164,1964,1289],{"class":173},[164,1966,1901],{"class":189},[164,1968,82],{"class":173},[164,1970,1971],{"class":189},"3",[164,1973,1430],{"class":173},[164,1975,1976],{"class":212},"// ['b', 'c'] - обрезать с индекса 1 по индекс 3, т.е. элементы с индексами 1, 2\n",[164,1978,1979,1981,1983,1985,1987,1989,1991,1993,1995,1997,1999,2001,2003,2005,2007,2009,2011],{"class":166,"line":196},[164,1980,918],{"class":173},[164,1982,1602],{"class":484},[164,1984,82],{"class":173},[164,1986,1607],{"class":484},[164,1988,82],{"class":173},[164,1990,1623],{"class":484},[164,1992,82],{"class":173},[164,1994,1837],{"class":484},[164,1996,1820],{"class":173},[164,1998,1896],{"class":219},[164,2000,1289],{"class":173},[164,2002,269],{"class":189},[164,2004,82],{"class":173},[164,2006,1933],{"class":237},[164,2008,1901],{"class":189},[164,2010,1626],{"class":173},[164,2012,2013],{"class":212},"// ['a', 'b', 'c'] - обрезать, убрав последний элемент\n",[16,2015,2016],{},"принимает индекс и количество элементов после этого индекса, которые нужно удалить.\nЕсли передать items - они будут добавлены после индекса start.\nМутирует исходный массив и возвращает удаленные элементы.",[155,2018,2020],{"className":1581,"code":2019,"language":1583,"meta":160,"style":160},"const arr = ['a', 'b', 'c', 'd'];\narr.splice(1, 2, 'e', 'f'); // удалить 2 элемента, начиная с индекса 1, т.е. ['b', 'c']. Добавить 'e', 'f' к индексу 1.\narr; // ['a', 'e', 'f', 'd']\n\n",[20,2021,2022,2048,2076],{"__ignoreMap":160},[164,2023,2024,2026,2028,2030,2032,2034,2036,2038,2040,2042,2044,2046],{"class":166,"line":167},[164,2025,1590],{"class":237},[164,2027,1593],{"class":189},[164,2029,1596],{"class":237},[164,2031,1599],{"class":173},[164,2033,1602],{"class":484},[164,2035,82],{"class":173},[164,2037,1607],{"class":484},[164,2039,82],{"class":173},[164,2041,1623],{"class":484},[164,2043,82],{"class":173},[164,2045,1837],{"class":484},[164,2047,1610],{"class":173},[164,2049,2050,2052,2055,2057,2059,2061,2063,2065,2067,2069,2071,2073],{"class":166,"line":177},[164,2051,1615],{"class":173},[164,2053,2054],{"class":219},"splice",[164,2056,1289],{"class":173},[164,2058,1901],{"class":189},[164,2060,82],{"class":173},[164,2062,745],{"class":189},[164,2064,82],{"class":173},[164,2066,1842],{"class":484},[164,2068,82],{"class":173},[164,2070,1848],{"class":484},[164,2072,1626],{"class":173},[164,2074,2075],{"class":212},"// удалить 2 элемента, начиная с индекса 1, т.е. ['b', 'c']. Добавить 'e', 'f' к индексу 1.\n",[164,2077,2078,2080],{"class":166,"line":186},[164,2079,1634],{"class":173},[164,2081,2082],{"class":212},"// ['a', 'e', 'f', 'd']\n",[16,2084,2085,2086,2088],{},"тоже самое, что и ",[20,2087,2054],{},", но вместо мутации\nбудет создан новый массив. Возвращает новый измененный массив.",[155,2090,2092],{"className":1581,"code":2091,"language":1583,"meta":160,"style":160},"const arr = ['a', 'b', 'c', 'd'];\narr.toSpliced(1, 2, 'e', 'f'); // ['a', 'e', 'f', 'd']\narr; // ['a', 'b', 'c', 'd']\n\n",[20,2093,2094,2120,2147],{"__ignoreMap":160},[164,2095,2096,2098,2100,2102,2104,2106,2108,2110,2112,2114,2116,2118],{"class":166,"line":167},[164,2097,1590],{"class":237},[164,2099,1593],{"class":189},[164,2101,1596],{"class":237},[164,2103,1599],{"class":173},[164,2105,1602],{"class":484},[164,2107,82],{"class":173},[164,2109,1607],{"class":484},[164,2111,82],{"class":173},[164,2113,1623],{"class":484},[164,2115,82],{"class":173},[164,2117,1837],{"class":484},[164,2119,1610],{"class":173},[164,2121,2122,2124,2127,2129,2131,2133,2135,2137,2139,2141,2143,2145],{"class":166,"line":177},[164,2123,1615],{"class":173},[164,2125,2126],{"class":219},"toSpliced",[164,2128,1289],{"class":173},[164,2130,1901],{"class":189},[164,2132,82],{"class":173},[164,2134,745],{"class":189},[164,2136,82],{"class":173},[164,2138,1842],{"class":484},[164,2140,82],{"class":173},[164,2142,1848],{"class":484},[164,2144,1626],{"class":173},[164,2146,2082],{"class":212},[164,2148,2149,2151],{"class":166,"line":186},[164,2150,1634],{"class":173},[164,2152,2153],{"class":212},"// ['a', 'b', 'c', 'd']\n",[29,2155,2157],{"id":2156},"search-in-array","Поиск в массиве",[16,2159,2160],{},"находит и возвращает первый элемент массива, соответствующий заданному условию.",[155,2162,2164],{"className":1581,"code":2163,"language":1583,"meta":160,"style":160},"[\n  { age: 10, name: 'Mike' },\n  { age: 19, name: 'Timofey' },\n  { age: 18, name: 'Alexander' }\n].find(i => i.age >= 18); // { age: 19, name: 'Timofey' }\n",[20,2165,2166,2171,2187,2201,2216],{"__ignoreMap":160},[164,2167,2168],{"class":166,"line":167},[164,2169,2170],{"class":173},"[\n",[164,2172,2173,2176,2178,2181,2184],{"class":166,"line":177},[164,2174,2175],{"class":173},"  { age: ",[164,2177,851],{"class":189},[164,2179,2180],{"class":173},", name: ",[164,2182,2183],{"class":484},"'Mike'",[164,2185,2186],{"class":173}," },\n",[164,2188,2189,2191,2194,2196,2199],{"class":166,"line":186},[164,2190,2175],{"class":173},[164,2192,2193],{"class":189},"19",[164,2195,2180],{"class":173},[164,2197,2198],{"class":484},"'Timofey'",[164,2200,2186],{"class":173},[164,2202,2203,2205,2208,2210,2213],{"class":166,"line":196},[164,2204,2175],{"class":173},[164,2206,2207],{"class":189},"18",[164,2209,2180],{"class":173},[164,2211,2212],{"class":484},"'Alexander'",[164,2214,2215],{"class":173}," }\n",[164,2217,2218,2220,2223,2225,2229,2232,2235,2238,2241,2243],{"class":166,"line":202},[164,2219,1820],{"class":173},[164,2221,2222],{"class":219},"find",[164,2224,1289],{"class":173},[164,2226,2228],{"class":2227},"s4XuR","i",[164,2230,2231],{"class":237}," =>",[164,2233,2234],{"class":173}," i.age ",[164,2236,2237],{"class":237},">=",[164,2239,2240],{"class":189}," 18",[164,2242,1626],{"class":173},[164,2244,2245],{"class":212},"// { age: 19, name: 'Timofey' }\n",[16,2247,2248],{},"тоже самое, но начинает обходить массив с конца:",[155,2250,2252],{"className":1581,"code":2251,"language":1583,"meta":160,"style":160},"[\n  { age: 10, name: 'Mike' },\n  { age: 19, name: 'Timofey' },\n  { age: 18, name: 'Alexander' }\n].findLast(i => i.age >= 18); // { age: 18, name: 'Alexander' }\n",[20,2253,2254,2258,2270,2282,2294],{"__ignoreMap":160},[164,2255,2256],{"class":166,"line":167},[164,2257,2170],{"class":173},[164,2259,2260,2262,2264,2266,2268],{"class":166,"line":177},[164,2261,2175],{"class":173},[164,2263,851],{"class":189},[164,2265,2180],{"class":173},[164,2267,2183],{"class":484},[164,2269,2186],{"class":173},[164,2271,2272,2274,2276,2278,2280],{"class":166,"line":186},[164,2273,2175],{"class":173},[164,2275,2193],{"class":189},[164,2277,2180],{"class":173},[164,2279,2198],{"class":484},[164,2281,2186],{"class":173},[164,2283,2284,2286,2288,2290,2292],{"class":166,"line":196},[164,2285,2175],{"class":173},[164,2287,2207],{"class":189},[164,2289,2180],{"class":173},[164,2291,2212],{"class":484},[164,2293,2215],{"class":173},[164,2295,2296,2298,2301,2303,2305,2307,2309,2311,2313,2315],{"class":166,"line":202},[164,2297,1820],{"class":173},[164,2299,2300],{"class":219},"findLast",[164,2302,1289],{"class":173},[164,2304,2228],{"class":2227},[164,2306,2231],{"class":237},[164,2308,2234],{"class":173},[164,2310,2237],{"class":237},[164,2312,2240],{"class":189},[164,2314,1626],{"class":173},[164,2316,2317],{"class":212},"// { age: 18, name: 'Alexander' }\n",[16,2319,2320,2321,2324],{},"принимает в коллбеке условие, возвращает ",[20,2322,2323],{},"true",", если хотя бы один элемент соответствует",[155,2326,2328],{"className":1581,"code":2327,"language":1583,"meta":160,"style":160},"['Mike', 'Timofey', 'Alexander'].some(name => name.length > 5); // true\n",[20,2329,2330],{"__ignoreMap":160},[164,2331,2332,2334,2336,2338,2340,2342,2344,2346,2349,2351,2354,2356,2359,2361,2363,2366,2368],{"class":166,"line":167},[164,2333,918],{"class":173},[164,2335,2183],{"class":484},[164,2337,82],{"class":173},[164,2339,2198],{"class":484},[164,2341,82],{"class":173},[164,2343,2212],{"class":484},[164,2345,1820],{"class":173},[164,2347,2348],{"class":219},"some",[164,2350,1289],{"class":173},[164,2352,2353],{"class":2227},"name",[164,2355,2231],{"class":237},[164,2357,2358],{"class":173}," name.",[164,2360,1578],{"class":189},[164,2362,1002],{"class":237},[164,2364,2365],{"class":189}," 5",[164,2367,1626],{"class":173},[164,2369,2370],{"class":212},"// true\n",[16,2372,2320,2373,2375],{},[20,2374,2323],{},", если все элементы соответствуют",[155,2377,2379],{"className":1581,"code":2378,"language":1583,"meta":160,"style":160},"['Mike', 'Timofey', 'Alexander'].every(name => name.length > 5); // false\n",[20,2380,2381],{"__ignoreMap":160},[164,2382,2383,2385,2387,2389,2391,2393,2395,2397,2400,2402,2404,2406,2408,2410,2412,2414,2416],{"class":166,"line":167},[164,2384,918],{"class":173},[164,2386,2183],{"class":484},[164,2388,82],{"class":173},[164,2390,2198],{"class":484},[164,2392,82],{"class":173},[164,2394,2212],{"class":484},[164,2396,1820],{"class":173},[164,2398,2399],{"class":219},"every",[164,2401,1289],{"class":173},[164,2403,2353],{"class":2227},[164,2405,2231],{"class":237},[164,2407,2358],{"class":173},[164,2409,1578],{"class":189},[164,2411,1002],{"class":237},[164,2413,2365],{"class":189},[164,2415,1626],{"class":173},[164,2417,2418],{"class":212},"// false\n",[16,2420,2421,2422,2424],{},"принимает значение, возвращает ",[20,2423,2323],{},", если в массиве есть такой элемент",[155,2426,2428],{"className":1581,"code":2427,"language":1583,"meta":160,"style":160},"['Mike', 'Timofey', 'Alexander'].includes('Timofey'); // true\n['Mike', 'Timofey', 'Alexander'].includes('Mark'); // false\n",[20,2429,2430,2457],{"__ignoreMap":160},[164,2431,2432,2434,2436,2438,2440,2442,2444,2446,2449,2451,2453,2455],{"class":166,"line":167},[164,2433,918],{"class":173},[164,2435,2183],{"class":484},[164,2437,82],{"class":173},[164,2439,2198],{"class":484},[164,2441,82],{"class":173},[164,2443,2212],{"class":484},[164,2445,1820],{"class":173},[164,2447,2448],{"class":219},"includes",[164,2450,1289],{"class":173},[164,2452,2198],{"class":484},[164,2454,1626],{"class":173},[164,2456,2370],{"class":212},[164,2458,2459,2461,2463,2465,2467,2469,2471,2473,2475,2477,2480,2482],{"class":166,"line":177},[164,2460,918],{"class":173},[164,2462,2183],{"class":484},[164,2464,82],{"class":173},[164,2466,2198],{"class":484},[164,2468,82],{"class":173},[164,2470,2212],{"class":484},[164,2472,1820],{"class":173},[164,2474,2448],{"class":219},[164,2476,1289],{"class":173},[164,2478,2479],{"class":484},"'Mark'",[164,2481,1626],{"class":173},[164,2483,2418],{"class":212},[29,2485,2487],{"id":2486},"iterate-and-mutate-array","Обход и изменение массива",[16,2489,2490],{},"принимает коллбек,\nкоторый выполнится для каждого элемента массива",[16,2492,2493],{},"принимает коллбек, который определяет,\nкак будет меняться каждый элемент массива.\nНе мутирует** исходный массив.",[155,2495,2497],{"className":1581,"code":2496,"language":1583,"meta":160,"style":160},"['heh', 'huh'].map(i => i.toUpperCase()); // ['HEH', 'HUH']\n",[20,2498,2499],{"__ignoreMap":160},[164,2500,2501,2503,2506,2508,2511,2513,2516,2518,2520,2522,2525,2528,2531],{"class":166,"line":167},[164,2502,918],{"class":173},[164,2504,2505],{"class":484},"'heh'",[164,2507,82],{"class":173},[164,2509,2510],{"class":484},"'huh'",[164,2512,1820],{"class":173},[164,2514,2515],{"class":219},"map",[164,2517,1289],{"class":173},[164,2519,2228],{"class":2227},[164,2521,2231],{"class":237},[164,2523,2524],{"class":173}," i.",[164,2526,2527],{"class":219},"toUpperCase",[164,2529,2530],{"class":173},"()); ",[164,2532,2533],{"class":212},"// ['HEH', 'HUH']\n",[16,2535,2536],{},"переворачивает массив. Изменяет исходный массив и возвращает ссылку на изменённый массив.",[155,2538,2540],{"className":1581,"code":2539,"language":1583,"meta":160,"style":160},"const arr = [1, 2];\narr.reverse(); // [2, 1]\narr; // [2, 1]\n\n",[20,2541,2542,2560,2572],{"__ignoreMap":160},[164,2543,2544,2546,2548,2550,2552,2554,2556,2558],{"class":166,"line":167},[164,2545,1590],{"class":237},[164,2547,1593],{"class":189},[164,2549,1596],{"class":237},[164,2551,1599],{"class":173},[164,2553,1901],{"class":189},[164,2555,82],{"class":173},[164,2557,745],{"class":189},[164,2559,1610],{"class":173},[164,2561,2562,2564,2567,2569],{"class":166,"line":177},[164,2563,1615],{"class":173},[164,2565,2566],{"class":219},"reverse",[164,2568,1681],{"class":173},[164,2570,2571],{"class":212},"// [2, 1]\n",[164,2573,2574,2576],{"class":166,"line":186},[164,2575,1634],{"class":173},[164,2577,2571],{"class":212},[16,2579,2580],{},"тоже самое, что и reverse, но без мутации исходного массива. Возвращает новый массив.",[155,2582,2584],{"className":1581,"code":2583,"language":1583,"meta":160,"style":160},"const arr = [1, 2];\narr.toReversed(); // [2, 1]\narr; // [1, 2]\n\n",[20,2585,2586,2604,2615],{"__ignoreMap":160},[164,2587,2588,2590,2592,2594,2596,2598,2600,2602],{"class":166,"line":167},[164,2589,1590],{"class":237},[164,2591,1593],{"class":189},[164,2593,1596],{"class":237},[164,2595,1599],{"class":173},[164,2597,1901],{"class":189},[164,2599,82],{"class":173},[164,2601,745],{"class":189},[164,2603,1610],{"class":173},[164,2605,2606,2608,2611,2613],{"class":166,"line":177},[164,2607,1615],{"class":173},[164,2609,2610],{"class":219},"toReversed",[164,2612,1681],{"class":173},[164,2614,2571],{"class":212},[164,2616,2617,2619],{"class":166,"line":186},[164,2618,1634],{"class":173},[164,2620,2621],{"class":212},"// [1, 2]\n",[16,2623,2624],{},"создает копию массива с замененным элементом по выбранному индексу",[155,2626,2628],{"className":1581,"code":2627,"language":1583,"meta":160,"style":160},"['a', 'b', 'c'].with(2, 'd'); // ['a', 'b', 'd']\n\n",[20,2629,2630],{"__ignoreMap":160},[164,2631,2632,2634,2636,2638,2640,2642,2644,2646,2649,2651,2653,2655,2657,2659],{"class":166,"line":167},[164,2633,918],{"class":173},[164,2635,1602],{"class":484},[164,2637,82],{"class":173},[164,2639,1607],{"class":484},[164,2641,82],{"class":173},[164,2643,1623],{"class":484},[164,2645,1820],{"class":173},[164,2647,2648],{"class":219},"with",[164,2650,1289],{"class":173},[164,2652,745],{"class":189},[164,2654,82],{"class":173},[164,2656,1837],{"class":484},[164,2658,1626],{"class":173},[164,2660,2661],{"class":212},"// ['a', 'b', 'd']\n",[16,2663,2664],{},"возвращает массив, где все элементы соответствуют переданному условию в коллбеке",[155,2666,2668],{"className":1581,"code":2667,"language":1583,"meta":160,"style":160},"['Mike', 'Timofey', 'Alexander'].map(name => name.length > 5); // ['Timofey', 'Alexander']\n",[20,2669,2670],{"__ignoreMap":160},[164,2671,2672,2674,2676,2678,2680,2682,2684,2686,2688,2690,2692,2694,2696,2698,2700,2702,2704],{"class":166,"line":167},[164,2673,918],{"class":173},[164,2675,2183],{"class":484},[164,2677,82],{"class":173},[164,2679,2198],{"class":484},[164,2681,82],{"class":173},[164,2683,2212],{"class":484},[164,2685,1820],{"class":173},[164,2687,2515],{"class":219},[164,2689,1289],{"class":173},[164,2691,2353],{"class":2227},[164,2693,2231],{"class":237},[164,2695,2358],{"class":173},[164,2697,1578],{"class":189},[164,2699,1002],{"class":237},[164,2701,2365],{"class":189},[164,2703,1626],{"class":173},[164,2705,2706],{"class":212},"// ['Timofey', 'Alexander']\n",[16,2708,2709],{},"обходит массив и аккумулирует значение.\nЗначение аккумулятора задается в коллбеке.",[155,2711,2713],{"className":1581,"code":2712,"language":1583,"meta":160,"style":160},"const employers = [\n  { age: 10, name: 'Mike' }, // Сын маминой подруги\n  { age: 19, name: 'Timofey' },\n  { age: 18, name: 'Alexander' }\n];\n\nconst totalAge = employers.reduce((acc, curr) => {\n  return acc + curr.age;\n}, 0); // 47\n\nconst averageAge = totalAge / employers.length; // 16.66\n",[20,2714,2715,2727,2743,2755,2767,2771,2775,2808,2822,2834,2838],{"__ignoreMap":160},[164,2716,2717,2719,2722,2724],{"class":166,"line":167},[164,2718,1590],{"class":237},[164,2720,2721],{"class":189}," employers",[164,2723,1596],{"class":237},[164,2725,2726],{"class":173}," [\n",[164,2728,2729,2731,2733,2735,2737,2740],{"class":166,"line":177},[164,2730,2175],{"class":173},[164,2732,851],{"class":189},[164,2734,2180],{"class":173},[164,2736,2183],{"class":484},[164,2738,2739],{"class":173}," }, ",[164,2741,2742],{"class":212},"// Сын маминой подруги\n",[164,2744,2745,2747,2749,2751,2753],{"class":166,"line":186},[164,2746,2175],{"class":173},[164,2748,2193],{"class":189},[164,2750,2180],{"class":173},[164,2752,2198],{"class":484},[164,2754,2186],{"class":173},[164,2756,2757,2759,2761,2763,2765],{"class":166,"line":196},[164,2758,2175],{"class":173},[164,2760,2207],{"class":189},[164,2762,2180],{"class":173},[164,2764,2212],{"class":484},[164,2766,2215],{"class":173},[164,2768,2769],{"class":166,"line":202},[164,2770,1610],{"class":173},[164,2772,2773],{"class":166,"line":209},[164,2774,206],{"emptyLinePlaceholder":205},[164,2776,2777,2779,2782,2784,2787,2790,2793,2796,2798,2801,2803,2806],{"class":166,"line":216},[164,2778,1590],{"class":237},[164,2780,2781],{"class":189}," totalAge",[164,2783,1596],{"class":237},[164,2785,2786],{"class":173}," employers.",[164,2788,2789],{"class":219},"reduce",[164,2791,2792],{"class":173},"((",[164,2794,2795],{"class":2227},"acc",[164,2797,82],{"class":173},[164,2799,2800],{"class":2227},"curr",[164,2802,1430],{"class":173},[164,2804,2805],{"class":237},"=>",[164,2807,183],{"class":173},[164,2809,2810,2813,2816,2819],{"class":166,"line":225},[164,2811,2812],{"class":237},"  return",[164,2814,2815],{"class":173}," acc ",[164,2817,2818],{"class":237},"+",[164,2820,2821],{"class":173}," curr.age;\n",[164,2823,2824,2827,2829,2831],{"class":166,"line":243},[164,2825,2826],{"class":173},"}, ",[164,2828,269],{"class":189},[164,2830,1626],{"class":173},[164,2832,2833],{"class":212},"// 47\n",[164,2835,2836],{"class":166,"line":631},[164,2837,206],{"emptyLinePlaceholder":205},[164,2839,2840,2842,2845,2847,2850,2852,2854,2856,2858],{"class":166,"line":645},[164,2841,1590],{"class":237},[164,2843,2844],{"class":189}," averageAge",[164,2846,1596],{"class":237},[164,2848,2849],{"class":173}," totalAge ",[164,2851,848],{"class":237},[164,2853,2786],{"class":173},[164,2855,1578],{"class":189},[164,2857,306],{"class":173},[164,2859,2860],{"class":212},"// 16.66\n",[16,2862,2863,2864,2866],{},"Метод ",[20,2865,2789],{}," очень полезен для агрегации:",[155,2868,2870],{"className":1581,"code":2869,"language":1583,"meta":160,"style":160},"const employers = [\n  { age: 10, name: 'Mike', position: 'son' },\n  { age: 19, name: 'Timofey', position: 'frontend' },\n  { age: 18, name: 'Alexander', position: 'frontend' }\n];\n\nconst employersByPosition = employers.reduce((acc, curr) => {\n  acc[curr.position] = (acc[curr.position] || []).concat(curr);\n  return acc;\n}, {}); // { son: [{ name: 'Mike',... }], frontend: [{ name: 'Timofey', ...}, { name: 'Alexander',...}] }\n\n",[20,2871,2872,2882,2900,2917,2933,2937,2941,2968,2989,2996],{"__ignoreMap":160},[164,2873,2874,2876,2878,2880],{"class":166,"line":167},[164,2875,1590],{"class":237},[164,2877,2721],{"class":189},[164,2879,1596],{"class":237},[164,2881,2726],{"class":173},[164,2883,2884,2886,2888,2890,2892,2895,2898],{"class":166,"line":177},[164,2885,2175],{"class":173},[164,2887,851],{"class":189},[164,2889,2180],{"class":173},[164,2891,2183],{"class":484},[164,2893,2894],{"class":173},", position: ",[164,2896,2897],{"class":484},"'son'",[164,2899,2186],{"class":173},[164,2901,2902,2904,2906,2908,2910,2912,2915],{"class":166,"line":186},[164,2903,2175],{"class":173},[164,2905,2193],{"class":189},[164,2907,2180],{"class":173},[164,2909,2198],{"class":484},[164,2911,2894],{"class":173},[164,2913,2914],{"class":484},"'frontend'",[164,2916,2186],{"class":173},[164,2918,2919,2921,2923,2925,2927,2929,2931],{"class":166,"line":196},[164,2920,2175],{"class":173},[164,2922,2207],{"class":189},[164,2924,2180],{"class":173},[164,2926,2212],{"class":484},[164,2928,2894],{"class":173},[164,2930,2914],{"class":484},[164,2932,2215],{"class":173},[164,2934,2935],{"class":166,"line":202},[164,2936,1610],{"class":173},[164,2938,2939],{"class":166,"line":209},[164,2940,206],{"emptyLinePlaceholder":205},[164,2942,2943,2945,2948,2950,2952,2954,2956,2958,2960,2962,2964,2966],{"class":166,"line":216},[164,2944,1590],{"class":237},[164,2946,2947],{"class":189}," employersByPosition",[164,2949,1596],{"class":237},[164,2951,2786],{"class":173},[164,2953,2789],{"class":219},[164,2955,2792],{"class":173},[164,2957,2795],{"class":2227},[164,2959,82],{"class":173},[164,2961,2800],{"class":2227},[164,2963,1430],{"class":173},[164,2965,2805],{"class":237},[164,2967,183],{"class":173},[164,2969,2970,2973,2975,2978,2981,2984,2986],{"class":166,"line":225},[164,2971,2972],{"class":173},"  acc[curr.position] ",[164,2974,481],{"class":237},[164,2976,2977],{"class":173}," (acc[curr.position] ",[164,2979,2980],{"class":237},"||",[164,2982,2983],{"class":173}," []).",[164,2985,1823],{"class":219},[164,2987,2988],{"class":173},"(curr);\n",[164,2990,2991,2993],{"class":166,"line":243},[164,2992,2812],{"class":237},[164,2994,2995],{"class":173}," acc;\n",[164,2997,2998,3001],{"class":166,"line":631},[164,2999,3000],{"class":173},"}, {}); ",[164,3002,3003],{"class":212},"// { son: [{ name: 'Mike',... }], frontend: [{ name: 'Timofey', ...}, { name: 'Alexander',...}] }\n",[16,3005,3006,3007,3010],{},"Если не передать ",[20,3008,3009],{},"initAcc"," - итерация будет со 2-го элемента.",[16,3012,3013],{},"тоже самое, что и обычный reduce, но справа налево.",[29,3015,3017],{"id":3016},"sort-array","Сортировка массива",[16,3019,3020],{},"принимает коллбеком функцию, в которой принимаются два аргумента - элементы массива,\nа return должен определить их порядок. Мутирует исходный массив и возвращает ссылку на него.",[16,3022,3023],{},"идет первым\nбез изменений\nидет первым",[16,3025,3026],{},"Если коллбек не передан - сортирует в лексическом порядке по возрастанию, подойдет только для строк.",[155,3028,3030],{"className":1581,"code":3029,"language":1583,"meta":160,"style":160},"[4, 2, 3, 1].sort((a, b) => a - b); // [1, 2, 3, 4]\n[4, 2, 3, 1].sort((a, b) => b - a); // [4, 3, 2, 1]\n['b', 'c', 'a'].sort(); // ['a', 'b', 'c']\n",[20,3031,3032,3080,3125],{"__ignoreMap":160},[164,3033,3034,3036,3039,3041,3043,3045,3047,3049,3051,3053,3056,3058,3060,3062,3065,3067,3069,3072,3074,3077],{"class":166,"line":167},[164,3035,918],{"class":173},[164,3037,3038],{"class":189},"4",[164,3040,82],{"class":173},[164,3042,745],{"class":189},[164,3044,82],{"class":173},[164,3046,1971],{"class":189},[164,3048,82],{"class":173},[164,3050,1901],{"class":189},[164,3052,1820],{"class":173},[164,3054,3055],{"class":219},"sort",[164,3057,2792],{"class":173},[164,3059,1325],{"class":2227},[164,3061,82],{"class":173},[164,3063,3064],{"class":2227},"b",[164,3066,1430],{"class":173},[164,3068,2805],{"class":237},[164,3070,3071],{"class":173}," a ",[164,3073,1933],{"class":237},[164,3075,3076],{"class":173}," b); ",[164,3078,3079],{"class":212},"// [1, 2, 3, 4]\n",[164,3081,3082,3084,3086,3088,3090,3092,3094,3096,3098,3100,3102,3104,3106,3108,3110,3112,3114,3117,3119,3122],{"class":166,"line":177},[164,3083,918],{"class":173},[164,3085,3038],{"class":189},[164,3087,82],{"class":173},[164,3089,745],{"class":189},[164,3091,82],{"class":173},[164,3093,1971],{"class":189},[164,3095,82],{"class":173},[164,3097,1901],{"class":189},[164,3099,1820],{"class":173},[164,3101,3055],{"class":219},[164,3103,2792],{"class":173},[164,3105,1325],{"class":2227},[164,3107,82],{"class":173},[164,3109,3064],{"class":2227},[164,3111,1430],{"class":173},[164,3113,2805],{"class":237},[164,3115,3116],{"class":173}," b ",[164,3118,1933],{"class":237},[164,3120,3121],{"class":173}," a); ",[164,3123,3124],{"class":212},"// [4, 3, 2, 1]\n",[164,3126,3127,3129,3131,3133,3135,3137,3139,3141,3143,3145],{"class":166,"line":186},[164,3128,918],{"class":173},[164,3130,1607],{"class":484},[164,3132,82],{"class":173},[164,3134,1623],{"class":484},[164,3136,82],{"class":173},[164,3138,1602],{"class":484},[164,3140,1820],{"class":173},[164,3142,3055],{"class":219},[164,3144,1681],{"class":173},[164,3146,1637],{"class":212},[16,3148,3149,3150,3153],{},"тоже самое, что и метод ",[20,3151,3152],{},".sort",",\nно вместо мутации исходного массива создает новый отсортированный массив",[155,3155,3157],{"className":1581,"code":3156,"language":1583,"meta":160,"style":160},"const arr = [4, 2, 3, 1];\nconst sortedArray = arr.toSorted((a, b) => a - b);\n\narr; // [4, 2, 3, 1];\nsortedArray; // [1, 2, 3, 4]\n\n",[20,3158,3159,3185,3219,3223,3230],{"__ignoreMap":160},[164,3160,3161,3163,3165,3167,3169,3171,3173,3175,3177,3179,3181,3183],{"class":166,"line":167},[164,3162,1590],{"class":237},[164,3164,1593],{"class":189},[164,3166,1596],{"class":237},[164,3168,1599],{"class":173},[164,3170,3038],{"class":189},[164,3172,82],{"class":173},[164,3174,745],{"class":189},[164,3176,82],{"class":173},[164,3178,1971],{"class":189},[164,3180,82],{"class":173},[164,3182,1901],{"class":189},[164,3184,1610],{"class":173},[164,3186,3187,3189,3192,3194,3197,3200,3202,3204,3206,3208,3210,3212,3214,3216],{"class":166,"line":177},[164,3188,1590],{"class":237},[164,3190,3191],{"class":189}," sortedArray",[164,3193,1596],{"class":237},[164,3195,3196],{"class":173}," arr.",[164,3198,3199],{"class":219},"toSorted",[164,3201,2792],{"class":173},[164,3203,1325],{"class":2227},[164,3205,82],{"class":173},[164,3207,3064],{"class":2227},[164,3209,1430],{"class":173},[164,3211,2805],{"class":237},[164,3213,3071],{"class":173},[164,3215,1933],{"class":237},[164,3217,3218],{"class":173}," b);\n",[164,3220,3221],{"class":166,"line":186},[164,3222,206],{"emptyLinePlaceholder":205},[164,3224,3225,3227],{"class":166,"line":196},[164,3226,1634],{"class":173},[164,3228,3229],{"class":212},"// [4, 2, 3, 1];\n",[164,3231,3232,3235],{"class":166,"line":202},[164,3233,3234],{"class":173},"sortedArray; ",[164,3236,3079],{"class":212},[29,3238,3240],{"id":3239},"useful-methods","Полезные методы",[16,3242,3243],{},"возвращает элемент массива по указанному индексу.",[16,3245,3246,3247],{},"Основная фишка - можно легко достать последний элемент, передав ",[20,3248,3249],{},"-1",[155,3251,3253],{"className":1581,"code":3252,"language":1583,"meta":160,"style":160},"[1, 2, 3 ].at(0) // 1\n  [1, 2, 3 ].at(-1); // 3\n\n",[20,3254,3255,3284],{"__ignoreMap":160},[164,3256,3257,3259,3261,3263,3265,3267,3269,3272,3275,3277,3279,3281],{"class":166,"line":167},[164,3258,918],{"class":173},[164,3260,1901],{"class":189},[164,3262,82],{"class":173},[164,3264,745],{"class":189},[164,3266,82],{"class":173},[164,3268,1971],{"class":189},[164,3270,3271],{"class":173}," ].",[164,3273,3274],{"class":219},"at",[164,3276,1289],{"class":173},[164,3278,269],{"class":189},[164,3280,1430],{"class":173},[164,3282,3283],{"class":212},"// 1\n",[164,3285,3286,3289,3291,3293,3295,3297,3299,3301,3303,3305,3307,3309,3311],{"class":166,"line":177},[164,3287,3288],{"class":173},"  [",[164,3290,1901],{"class":189},[164,3292,82],{"class":173},[164,3294,745],{"class":189},[164,3296,82],{"class":173},[164,3298,1971],{"class":189},[164,3300,3271],{"class":173},[164,3302,3274],{"class":219},[164,3304,1289],{"class":173},[164,3306,1933],{"class":237},[164,3308,1901],{"class":189},[164,3310,1626],{"class":173},[164,3312,1629],{"class":212},[16,3314,3315],{},"позволяет создать массив из Iterable\nили ArrayLike сущностей.",[16,3317,3318],{},"Очень полезен, чтобы получить массив Element:",[155,3320,3322],{"className":1581,"code":3321,"language":1583,"meta":160,"style":160},"const linkElements = document.querySelectorAll('.myClass');\nconst arrLinks = Array.from(linkElements); // Element[]\n\n",[20,3323,3324,3347],{"__ignoreMap":160},[164,3325,3326,3328,3331,3333,3336,3339,3341,3344],{"class":166,"line":167},[164,3327,1590],{"class":237},[164,3329,3330],{"class":189}," linkElements",[164,3332,1596],{"class":237},[164,3334,3335],{"class":173}," document.",[164,3337,3338],{"class":219},"querySelectorAll",[164,3340,1289],{"class":173},[164,3342,3343],{"class":484},"'.myClass'",[164,3345,3346],{"class":173},");\n",[164,3348,3349,3351,3354,3356,3359,3362,3365],{"class":166,"line":177},[164,3350,1590],{"class":237},[164,3352,3353],{"class":189}," arrLinks",[164,3355,1596],{"class":237},[164,3357,3358],{"class":173}," Array.",[164,3360,3361],{"class":219},"from",[164,3363,3364],{"class":173},"(linkElements); ",[164,3366,3367],{"class":212},"// Element[]\n",[16,3369,3370,3371],{},"Можно сразу же сделать ",[20,3372,3373],{},".map",[155,3375,3377],{"className":1581,"code":3376,"language":1583,"meta":160,"style":160},"const linkElements = document.getElementsByTagName('a');\nconst arrLinks = Array.from(linkElements, element => element.href); // string[]\n\n",[20,3378,3379,3398],{"__ignoreMap":160},[164,3380,3381,3383,3385,3387,3389,3392,3394,3396],{"class":166,"line":167},[164,3382,1590],{"class":237},[164,3384,3330],{"class":189},[164,3386,1596],{"class":237},[164,3388,3335],{"class":173},[164,3390,3391],{"class":219},"getElementsByTagName",[164,3393,1289],{"class":173},[164,3395,1602],{"class":484},[164,3397,3346],{"class":173},[164,3399,3400,3402,3404,3406,3408,3410,3413,3416,3418,3421],{"class":166,"line":177},[164,3401,1590],{"class":237},[164,3403,3353],{"class":189},[164,3405,1596],{"class":237},[164,3407,3358],{"class":173},[164,3409,3361],{"class":219},[164,3411,3412],{"class":173},"(linkElements, ",[164,3414,3415],{"class":2227},"element",[164,3417,2231],{"class":237},[164,3419,3420],{"class":173}," element.href); ",[164,3422,3423],{"class":212},"// string[]\n",[16,3425,3426,3427,3430],{},"Часто используется, чтобы превратить ",[20,3428,3429],{},"Set"," в массив",[155,3432,3434],{"className":1581,"code":3433,"language":1583,"meta":160,"style":160},"const mySet = newSet([1, 2]);\nmySet.add(3);\nArray.from(mySet); // [1, 2, 3]\n\n",[20,3435,3436,3460,3474],{"__ignoreMap":160},[164,3437,3438,3440,3443,3445,3448,3451,3453,3455,3457],{"class":166,"line":167},[164,3439,1590],{"class":237},[164,3441,3442],{"class":189}," mySet",[164,3444,1596],{"class":237},[164,3446,3447],{"class":219}," newSet",[164,3449,3450],{"class":173},"([",[164,3452,1901],{"class":189},[164,3454,82],{"class":173},[164,3456,745],{"class":189},[164,3458,3459],{"class":173},"]);\n",[164,3461,3462,3465,3468,3470,3472],{"class":166,"line":177},[164,3463,3464],{"class":173},"mySet.",[164,3466,3467],{"class":219},"add",[164,3469,1289],{"class":173},[164,3471,1971],{"class":189},[164,3473,3346],{"class":173},[164,3475,3476,3479,3481,3484],{"class":166,"line":186},[164,3477,3478],{"class":173},"Array.",[164,3480,3361],{"class":219},[164,3482,3483],{"class":173},"(mySet); ",[164,3485,3486],{"class":212},"// [1, 2, 3]\n",[16,3488,3489,3490,3430],{},"Или чтобы превратить ",[20,3491,3492],{},"Map",[155,3494,3496],{"className":1581,"code":3495,"language":1583,"meta":160,"style":160},"const myMap = new Map();\nmyMap.set('a', 1).set('b', 2);\n\nconst array = Array.from(myMap, ([name, value]) => ({ name, value }));\n",[20,3497,3498,3516,3547,3551],{"__ignoreMap":160},[164,3499,3500,3502,3505,3507,3510,3513],{"class":166,"line":167},[164,3501,1590],{"class":237},[164,3503,3504],{"class":189}," myMap",[164,3506,1596],{"class":237},[164,3508,3509],{"class":237}," new",[164,3511,3512],{"class":219}," Map",[164,3514,3515],{"class":173},"();\n",[164,3517,3518,3521,3524,3526,3528,3530,3532,3535,3537,3539,3541,3543,3545],{"class":166,"line":177},[164,3519,3520],{"class":173},"myMap.",[164,3522,3523],{"class":219},"set",[164,3525,1289],{"class":173},[164,3527,1602],{"class":484},[164,3529,82],{"class":173},[164,3531,1901],{"class":189},[164,3533,3534],{"class":173},").",[164,3536,3523],{"class":219},[164,3538,1289],{"class":173},[164,3540,1607],{"class":484},[164,3542,82],{"class":173},[164,3544,745],{"class":189},[164,3546,3346],{"class":173},[164,3548,3549],{"class":166,"line":186},[164,3550,206],{"emptyLinePlaceholder":205},[164,3552,3553,3555,3558,3560,3562,3564,3567,3569,3571,3574,3577,3579],{"class":166,"line":196},[164,3554,1590],{"class":237},[164,3556,3557],{"class":189}," array",[164,3559,1596],{"class":237},[164,3561,3358],{"class":173},[164,3563,3361],{"class":219},[164,3565,3566],{"class":173},"(myMap, ([",[164,3568,2353],{"class":2227},[164,3570,82],{"class":173},[164,3572,3573],{"class":2227},"value",[164,3575,3576],{"class":173},"]) ",[164,3578,2805],{"class":237},[164,3580,3581],{"class":173}," ({ name, value }));\n",[16,3583,3584],{},"Можно использовать, чтобы создать пустой массив",[155,3586,3588],{"className":1581,"code":3587,"language":1583,"meta":160,"style":160},"Array.from(new Array(3)); // [undefined, undefined, undefined]\n\n",[20,3589,3590],{"__ignoreMap":160},[164,3591,3592,3594,3596,3598,3601,3604,3606,3608,3611],{"class":166,"line":167},[164,3593,3478],{"class":173},[164,3595,3361],{"class":219},[164,3597,1289],{"class":173},[164,3599,3600],{"class":237},"new",[164,3602,3603],{"class":219}," Array",[164,3605,1289],{"class":173},[164,3607,1971],{"class":189},[164,3609,3610],{"class":173},")); ",[164,3612,3613],{"class":212},"// [undefined, undefined, undefined]\n",[16,3615,3616,3617,3620],{},"создает новый массив, убирая вложенность на заданную ",[20,3618,3619],{},"depth",".",[155,3622,3624],{"className":1581,"code":3623,"language":1583,"meta":160,"style":160},"[1, [2, 3]].flat(); // [1, 2, 3]\n[1, [2, 3, [4, 5]]].flat(); // [1, 2, 3, [4, 5]]\n[1, [2, 3, [4, 5]]].flat(2); // [1, 2, 3, 4, 5]\n\n",[20,3625,3626,3650,3683],{"__ignoreMap":160},[164,3627,3628,3630,3632,3634,3636,3638,3640,3643,3646,3648],{"class":166,"line":167},[164,3629,918],{"class":173},[164,3631,1901],{"class":189},[164,3633,1834],{"class":173},[164,3635,745],{"class":189},[164,3637,82],{"class":173},[164,3639,1971],{"class":189},[164,3641,3642],{"class":173},"]].",[164,3644,3645],{"class":219},"flat",[164,3647,1681],{"class":173},[164,3649,3486],{"class":212},[164,3651,3652,3654,3656,3658,3660,3662,3664,3666,3668,3670,3673,3676,3678,3680],{"class":166,"line":177},[164,3653,918],{"class":173},[164,3655,1901],{"class":189},[164,3657,1834],{"class":173},[164,3659,745],{"class":189},[164,3661,82],{"class":173},[164,3663,1971],{"class":189},[164,3665,1834],{"class":173},[164,3667,3038],{"class":189},[164,3669,82],{"class":173},[164,3671,3672],{"class":189},"5",[164,3674,3675],{"class":173},"]]].",[164,3677,3645],{"class":219},[164,3679,1681],{"class":173},[164,3681,3682],{"class":212},"// [1, 2, 3, [4, 5]]\n",[164,3684,3685,3687,3689,3691,3693,3695,3697,3699,3701,3703,3705,3707,3709,3711,3713,3715],{"class":166,"line":186},[164,3686,918],{"class":173},[164,3688,1901],{"class":189},[164,3690,1834],{"class":173},[164,3692,745],{"class":189},[164,3694,82],{"class":173},[164,3696,1971],{"class":189},[164,3698,1834],{"class":173},[164,3700,3038],{"class":189},[164,3702,82],{"class":173},[164,3704,3672],{"class":189},[164,3706,3675],{"class":173},[164,3708,3645],{"class":219},[164,3710,1289],{"class":173},[164,3712,745],{"class":189},[164,3714,1626],{"class":173},[164,3716,3717],{"class":212},"// [1, 2, 3, 4, 5]\n",[11,3719,3721],{"id":3720},"objects","Object",[29,3723,3725],{"id":3724},"config-for-properties","Управление свойствами",[16,3727,3728],{},"метод создания объекта, который дает нам больше контроля\nнад свойствами и методами, позволяя задать для каждого:",[16,3730,3731,3732,3735,3736,3739],{},"writeable - можно ли перезаписывать\nenumerable - является ли перечисляемым, будет ли доступен ",[20,3733,3734],{},"for...in","\nconfigurable - можно ли удалять или менять при помощи ",[20,3737,3738],{},"defineProperty","\nset - функция для записи значения\nget - функция для чтения значения",[155,3741,3743],{"className":1581,"code":3742,"language":1583,"meta":160,"style":160},"const tom = Object.create(Object.prototype, {  \n  name: {    \n    value: \"Tim\",\n    enumerable: true, // доступно для перебора\n    writable: false  // не доступно для записи\n  },  \n  age: { \n    value: 20,\n    enumerable: true, // доступно для перебора\n    writable: true // доступно для записи\n  },  \n  print: {    \n    value: function() { console.log(`Name: ${this.name}  Age: ${this.age}`);},\n    enumerable: false, // не доступно для перебора\n    writable: false, // не доступно для записи\n  }  \n});\n\n",[20,3744,3745,3772,3777,3787,3799,3810,3815,3820,3829,3839,3848,3852,3857,3901,3912,3923,3928],{"__ignoreMap":160},[164,3746,3747,3749,3752,3754,3757,3760,3762,3764,3766,3769],{"class":166,"line":167},[164,3748,1590],{"class":237},[164,3750,3751],{"class":189}," tom",[164,3753,1596],{"class":237},[164,3755,3756],{"class":173}," Object.",[164,3758,3759],{"class":219},"create",[164,3761,1289],{"class":173},[164,3763,3721],{"class":189},[164,3765,3620],{"class":173},[164,3767,3768],{"class":189},"prototype",[164,3770,3771],{"class":173},", {  \n",[164,3773,3774],{"class":166,"line":177},[164,3775,3776],{"class":173},"  name: {    \n",[164,3778,3779,3782,3785],{"class":166,"line":186},[164,3780,3781],{"class":173},"    value: ",[164,3783,3784],{"class":484},"\"Tim\"",[164,3786,174],{"class":173},[164,3788,3789,3792,3794,3796],{"class":166,"line":196},[164,3790,3791],{"class":173},"    enumerable: ",[164,3793,2323],{"class":189},[164,3795,82],{"class":173},[164,3797,3798],{"class":212},"// доступно для перебора\n",[164,3800,3801,3804,3807],{"class":166,"line":202},[164,3802,3803],{"class":173},"    writable: ",[164,3805,3806],{"class":189},"false",[164,3808,3809],{"class":212},"  // не доступно для записи\n",[164,3811,3812],{"class":166,"line":209},[164,3813,3814],{"class":173},"  },  \n",[164,3816,3817],{"class":166,"line":216},[164,3818,3819],{"class":173},"  age: { \n",[164,3821,3822,3824,3827],{"class":166,"line":225},[164,3823,3781],{"class":173},[164,3825,3826],{"class":189},"20",[164,3828,174],{"class":173},[164,3830,3831,3833,3835,3837],{"class":166,"line":243},[164,3832,3791],{"class":173},[164,3834,2323],{"class":189},[164,3836,82],{"class":173},[164,3838,3798],{"class":212},[164,3840,3841,3843,3845],{"class":166,"line":631},[164,3842,3803],{"class":173},[164,3844,2323],{"class":189},[164,3846,3847],{"class":212}," // доступно для записи\n",[164,3849,3850],{"class":166,"line":645},[164,3851,3814],{"class":173},[164,3853,3854],{"class":166,"line":650},[164,3855,3856],{"class":173},"  print: {    \n",[164,3858,3859,3862,3864,3867,3870,3873,3875,3878,3881,3883,3885,3888,3890,3892,3895,3898],{"class":166,"line":655},[164,3860,3861],{"class":219},"    value",[164,3863,231],{"class":173},[164,3865,3866],{"class":237},"function",[164,3868,3869],{"class":173},"() { console.",[164,3871,3872],{"class":219},"log",[164,3874,1289],{"class":173},[164,3876,3877],{"class":484},"`Name: ${",[164,3879,3880],{"class":189},"this",[164,3882,3620],{"class":484},[164,3884,2353],{"class":173},[164,3886,3887],{"class":484},"}  Age: ${",[164,3889,3880],{"class":189},[164,3891,3620],{"class":484},[164,3893,3894],{"class":173},"age",[164,3896,3897],{"class":484},"}`",[164,3899,3900],{"class":173},");},\n",[164,3902,3903,3905,3907,3909],{"class":166,"line":662},[164,3904,3791],{"class":173},[164,3906,3806],{"class":189},[164,3908,82],{"class":173},[164,3910,3911],{"class":212},"// не доступно для перебора\n",[164,3913,3914,3916,3918,3920],{"class":166,"line":678},[164,3915,3803],{"class":173},[164,3917,3806],{"class":189},[164,3919,82],{"class":173},[164,3921,3922],{"class":212},"// не доступно для записи\n",[164,3924,3925],{"class":166,"line":692},[164,3926,3927],{"class":173},"  }  \n",[164,3929,3930],{"class":166,"line":704},[164,3931,3932],{"class":173},"});\n",[16,3934,3935,3936],{},"позволяет настроить выбранное свойство объекта.\nНе сработает, если ",[20,3937,3938],{},"configurable = false ",[16,3940,3941],{},"запрещает добавление свойств",[16,3943,3944,3945,3620],{},"запрещает добавление и удаление свойств, все текущие свойства делает ",[20,3946,3947],{},"configurable: false",[16,3949,3950,3951,82,3953,3620],{},"запрещает добавление, удаление и изменение свойств,все текущие свойства делает ",[20,3952,3947],{},[20,3954,3955],{},"writable: false",[29,3957,3959],{"id":3958},"helpers-for-properties","Хелперы для свойств",[16,3961,3962,3963,3966,3967,3970],{},"копирует все ",[1572,3964,3965],{},"перечисляемые"," ",[20,3968,3969],{},"enumerable: true"," свойства из одного или\nболее объектов в целевой объект. Копирование неглубокое, для объектов, массивов, функций будет скопирована ссылка.",[16,3972,3973,3974,3620],{},"проверяет, является ли свойство собственным(не унаследованным).\nЧтобы проверить унаследованное свойство можно воспользоваться ",[20,3975,3976],{},"in",[155,3978,3980],{"className":1581,"code":3979,"language":1583,"meta":160,"style":160},"const person = {\n  name: \"Zhenya\"\n};\n\nObject.hasOwn(person, \"name\"); // true\nObject.hasOwn(person, \"toString\"); // false\n\n",[20,3981,3982,3993,4001,4006,4010,4028],{"__ignoreMap":160},[164,3983,3984,3986,3989,3991],{"class":166,"line":167},[164,3985,1590],{"class":237},[164,3987,3988],{"class":189}," person",[164,3990,1596],{"class":237},[164,3992,183],{"class":173},[164,3994,3995,3998],{"class":166,"line":177},[164,3996,3997],{"class":173},"  name: ",[164,3999,4000],{"class":484},"\"Zhenya\"\n",[164,4002,4003],{"class":166,"line":186},[164,4004,4005],{"class":173},"};\n",[164,4007,4008],{"class":166,"line":196},[164,4009,206],{"emptyLinePlaceholder":205},[164,4011,4012,4015,4018,4021,4024,4026],{"class":166,"line":202},[164,4013,4014],{"class":173},"Object.",[164,4016,4017],{"class":219},"hasOwn",[164,4019,4020],{"class":173},"(person, ",[164,4022,4023],{"class":484},"\"name\"",[164,4025,1626],{"class":173},[164,4027,2370],{"class":212},[164,4029,4030,4032,4034,4036,4039,4041],{"class":166,"line":209},[164,4031,4014],{"class":173},[164,4033,4017],{"class":219},[164,4035,4020],{"class":173},[164,4037,4038],{"class":484},"\"toString\"",[164,4040,1626],{"class":173},[164,4042,2418],{"class":212},[16,4044,4045,4046],{},"проверяет, был ли вызван ",[20,4047,4048],{},"preventExtensions",[16,4050,4045,4051],{},[20,4052,4053],{},"seal",[16,4055,4045,4056],{},[20,4057,4058],{},"freeze",[29,4060,4062],{"id":4061},"keys-and-values","Ключи и значения",[16,4064,4065,4066,4068],{},"вернет ",[1572,4067,3965],{}," свойства в виде массива",[155,4070,4072],{"className":1581,"code":4071,"language":1583,"meta":160,"style":160},"Object.entries({\n  name: 'Zhenya',\n  age: 27,\n}); // [['name', 'Zhenya'], ['age', 27]]\n\n",[20,4073,4074,4084,4093,4103],{"__ignoreMap":160},[164,4075,4076,4078,4081],{"class":166,"line":167},[164,4077,4014],{"class":173},[164,4079,4080],{"class":219},"entries",[164,4082,4083],{"class":173},"({\n",[164,4085,4086,4088,4091],{"class":166,"line":177},[164,4087,3997],{"class":173},[164,4089,4090],{"class":484},"'Zhenya'",[164,4092,174],{"class":173},[164,4094,4095,4098,4101],{"class":166,"line":186},[164,4096,4097],{"class":173},"  age: ",[164,4099,4100],{"class":189},"27",[164,4102,174],{"class":173},[164,4104,4105,4108],{"class":166,"line":196},[164,4106,4107],{"class":173},"}); ",[164,4109,4110],{"class":212},"// [['name', 'Zhenya'], ['age', 27]]\n",[16,4112,4113],{},"обратно превратит массив в объект",[155,4115,4117],{"className":1581,"code":4116,"language":1583,"meta":160,"style":160},"Object.fromEntries([['name', 'Zhenya'], ['age', 27]]); // { name: 'Zhenya', age: 27 }\n\n",[20,4118,4119],{"__ignoreMap":160},[164,4120,4121,4123,4126,4129,4132,4134,4136,4138,4141,4143,4145,4148],{"class":166,"line":167},[164,4122,4014],{"class":173},[164,4124,4125],{"class":219},"fromEntries",[164,4127,4128],{"class":173},"([[",[164,4130,4131],{"class":484},"'name'",[164,4133,82],{"class":173},[164,4135,4090],{"class":484},[164,4137,1845],{"class":173},[164,4139,4140],{"class":484},"'age'",[164,4142,82],{"class":173},[164,4144,4100],{"class":189},[164,4146,4147],{"class":173},"]]); ",[164,4149,4150],{"class":212},"// { name: 'Zhenya', age: 27 }\n",[16,4152,4153],{},"по простому - получить массив ключей.\nВернет только собственные(без прототипа) и перечисляемые(for...in) свойства.",[155,4155,4157],{"className":1581,"code":4156,"language":1583,"meta":160,"style":160},"Object.keys({\n  name: 'Zhenya',\n  age: 27,\n}); // ['name', 'age']\n\n",[20,4158,4159,4168,4176,4184],{"__ignoreMap":160},[164,4160,4161,4163,4166],{"class":166,"line":167},[164,4162,4014],{"class":173},[164,4164,4165],{"class":219},"keys",[164,4167,4083],{"class":173},[164,4169,4170,4172,4174],{"class":166,"line":177},[164,4171,3997],{"class":173},[164,4173,4090],{"class":484},[164,4175,174],{"class":173},[164,4177,4178,4180,4182],{"class":166,"line":186},[164,4179,4097],{"class":173},[164,4181,4100],{"class":189},[164,4183,174],{"class":173},[164,4185,4186,4188],{"class":166,"line":196},[164,4187,4107],{"class":173},[164,4189,4190],{"class":212},"// ['name', 'age']\n",[16,4192,4193],{},"вернет массив значений",[155,4195,4197],{"className":1581,"code":4196,"language":1583,"meta":160,"style":160},"Object.values({\n  name: 'Zhenya',\n  age: 27,\n}); // ['Zhenya', 27]\n\n",[20,4198,4199,4208,4216,4224],{"__ignoreMap":160},[164,4200,4201,4203,4206],{"class":166,"line":167},[164,4202,4014],{"class":173},[164,4204,4205],{"class":219},"values",[164,4207,4083],{"class":173},[164,4209,4210,4212,4214],{"class":166,"line":177},[164,4211,3997],{"class":173},[164,4213,4090],{"class":484},[164,4215,174],{"class":173},[164,4217,4218,4220,4222],{"class":166,"line":186},[164,4219,4097],{"class":173},[164,4221,4100],{"class":189},[164,4223,174],{"class":173},[164,4225,4226,4228],{"class":166,"line":196},[164,4227,4107],{"class":173},[164,4229,4230],{"class":212},"// ['Zhenya', 27]\n",[11,4232,4234],{"id":4233},"functions","Function",[16,4236,4237,4238,4240],{},"вызывает функцию с указанным значением ",[20,4239,3880],{}," и аргументами.",[155,4242,4246],{"className":4243,"code":4244,"language":4245,"meta":160,"style":160},"language-ts shiki shiki-themes github-light github-dark","\nfunction multiply(a, b) {\n  this.logger(a * b);\n  return aa * b;\n}\n\nmultiply.call({ logger: console.log }, 2, 2); // 4\n\n// Мы не можем указать контекст для стрелочной функции\nconst addArrowFn = (a, b) => {\n  this.logger(a + b);\n  return a + b;\n};\n\nmultiply.call({ logger: console.log }, 2, 2); // TypeError: this.logger is not a function\n\n\n","ts",[20,4247,4248,4252,4269,4287,4299,4303,4307,4329,4333,4338,4361,4375,4385,4389,4393],{"__ignoreMap":160},[164,4249,4250],{"class":166,"line":167},[164,4251,206],{"emptyLinePlaceholder":205},[164,4253,4254,4256,4259,4261,4263,4265,4267],{"class":166,"line":177},[164,4255,3866],{"class":237},[164,4257,4258],{"class":219}," multiply",[164,4260,1289],{"class":173},[164,4262,1325],{"class":2227},[164,4264,82],{"class":173},[164,4266,3064],{"class":2227},[164,4268,854],{"class":173},[164,4270,4271,4274,4276,4279,4282,4285],{"class":166,"line":186},[164,4272,4273],{"class":189},"  this",[164,4275,3620],{"class":173},[164,4277,4278],{"class":219},"logger",[164,4280,4281],{"class":173},"(a ",[164,4283,4284],{"class":237},"*",[164,4286,3218],{"class":173},[164,4288,4289,4291,4294,4296],{"class":166,"line":196},[164,4290,2812],{"class":237},[164,4292,4293],{"class":173}," aa ",[164,4295,4284],{"class":237},[164,4297,4298],{"class":173}," b;\n",[164,4300,4301],{"class":166,"line":202},[164,4302,199],{"class":173},[164,4304,4305],{"class":166,"line":209},[164,4306,206],{"emptyLinePlaceholder":205},[164,4308,4309,4312,4315,4318,4320,4322,4324,4326],{"class":166,"line":216},[164,4310,4311],{"class":173},"multiply.",[164,4313,4314],{"class":219},"call",[164,4316,4317],{"class":173},"({ logger: console.log }, ",[164,4319,745],{"class":189},[164,4321,82],{"class":173},[164,4323,745],{"class":189},[164,4325,1626],{"class":173},[164,4327,4328],{"class":212},"// 4\n",[164,4330,4331],{"class":166,"line":225},[164,4332,206],{"emptyLinePlaceholder":205},[164,4334,4335],{"class":166,"line":243},[164,4336,4337],{"class":212},"// Мы не можем указать контекст для стрелочной функции\n",[164,4339,4340,4342,4345,4347,4349,4351,4353,4355,4357,4359],{"class":166,"line":631},[164,4341,1590],{"class":237},[164,4343,4344],{"class":219}," addArrowFn",[164,4346,1596],{"class":237},[164,4348,838],{"class":173},[164,4350,1325],{"class":2227},[164,4352,82],{"class":173},[164,4354,3064],{"class":2227},[164,4356,1430],{"class":173},[164,4358,2805],{"class":237},[164,4360,183],{"class":173},[164,4362,4363,4365,4367,4369,4371,4373],{"class":166,"line":645},[164,4364,4273],{"class":189},[164,4366,3620],{"class":173},[164,4368,4278],{"class":219},[164,4370,4281],{"class":173},[164,4372,2818],{"class":237},[164,4374,3218],{"class":173},[164,4376,4377,4379,4381,4383],{"class":166,"line":650},[164,4378,2812],{"class":237},[164,4380,3071],{"class":173},[164,4382,2818],{"class":237},[164,4384,4298],{"class":173},[164,4386,4387],{"class":166,"line":655},[164,4388,4005],{"class":173},[164,4390,4391],{"class":166,"line":662},[164,4392,206],{"emptyLinePlaceholder":205},[164,4394,4395,4397,4399,4401,4403,4405,4407,4409],{"class":166,"line":678},[164,4396,4311],{"class":173},[164,4398,4314],{"class":219},[164,4400,4317],{"class":173},[164,4402,745],{"class":189},[164,4404,82],{"class":173},[164,4406,745],{"class":189},[164,4408,1626],{"class":173},[164,4410,4411],{"class":212},"// TypeError: this.logger is not a function\n",[16,4413,2085,4414,4416],{},[20,4415,4314],{},", но аргументы передаются в виде массива",[155,4418,4420],{"className":4243,"code":4419,"language":4245,"meta":160,"style":160},"multiply.apply({ logger: console.log }, [2, 3]); // 6\n",[20,4421,4422],{"__ignoreMap":160},[164,4423,4424,4426,4429,4432,4434,4436,4438,4440],{"class":166,"line":167},[164,4425,4311],{"class":173},[164,4427,4428],{"class":219},"apply",[164,4430,4431],{"class":173},"({ logger: console.log }, [",[164,4433,745],{"class":189},[164,4435,82],{"class":173},[164,4437,1971],{"class":189},[164,4439,1851],{"class":173},[164,4441,4442],{"class":212},"// 6\n",[16,4444,4445,4446],{},"создает новую функцию, привязывая ей переданный ",[20,4447,3880],{},[155,4449,4451],{"className":4243,"code":4450,"language":4245,"meta":160,"style":160},"\nconst multiplyTwo = add.bind({ logger: console.log }, 2);\n\nmultiplyTwo(4); // 8\n\n",[20,4452,4453,4457,4478,4482],{"__ignoreMap":160},[164,4454,4455],{"class":166,"line":167},[164,4456,206],{"emptyLinePlaceholder":205},[164,4458,4459,4461,4464,4466,4469,4472,4474,4476],{"class":166,"line":177},[164,4460,1590],{"class":237},[164,4462,4463],{"class":189}," multiplyTwo",[164,4465,1596],{"class":237},[164,4467,4468],{"class":173}," add.",[164,4470,4471],{"class":219},"bind",[164,4473,4317],{"class":173},[164,4475,745],{"class":189},[164,4477,3346],{"class":173},[164,4479,4480],{"class":166,"line":186},[164,4481,206],{"emptyLinePlaceholder":205},[164,4483,4484,4487,4489,4491,4493],{"class":166,"line":196},[164,4485,4486],{"class":219},"multiplyTwo",[164,4488,1289],{"class":173},[164,4490,3038],{"class":189},[164,4492,1626],{"class":173},[164,4494,4495],{"class":212},"// 8\n",[1530,4497,4498],{},"html pre.shiki code .szBVR, html code.shiki .szBVR{--shiki-default:#D73A49;--shiki-dark:#F97583}html pre.shiki code .sj4cs, html code.shiki .sj4cs{--shiki-default:#005CC5;--shiki-dark:#79B8FF}html pre.shiki code .sVt8B, html code.shiki .sVt8B{--shiki-default:#24292E;--shiki-dark:#E1E4E8}html pre.shiki code .sZZnC, html code.shiki .sZZnC{--shiki-default:#032F62;--shiki-dark:#9ECBFF}html pre.shiki code .sScJk, html code.shiki .sScJk{--shiki-default:#6F42C1;--shiki-dark:#B392F0}html pre.shiki code .sJ8bj, html code.shiki .sJ8bj{--shiki-default:#6A737D;--shiki-dark:#6A737D}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html pre.shiki code .s4XuR, html code.shiki .s4XuR{--shiki-default:#E36209;--shiki-dark:#FFAB70}",{"title":160,"searchDepth":177,"depth":177,"links":4500},[4501,4508,4513],{"id":13,"depth":177,"text":1563,"children":4502},[4503,4504,4505,4506,4507],{"id":1566,"depth":186,"text":1567},{"id":2156,"depth":186,"text":2157},{"id":2486,"depth":186,"text":2487},{"id":3016,"depth":186,"text":3017},{"id":3239,"depth":186,"text":3240},{"id":3720,"depth":177,"text":3721,"children":4509},[4510,4511,4512],{"id":3724,"depth":186,"text":3725},{"id":3958,"depth":186,"text":3959},{"id":4061,"depth":186,"text":4062},{"id":4233,"depth":177,"text":4234},"2024-02-26","Методы массивов, объектов и функций, которые полезно знать",{},"/blog/js-built-in-methods","/images/js-methods-preview.jpg",{"title":1558,"description":4515},"blog/js-built-in-methods",[4522,1553,1554],"javascript","_bGMRXaznUGP2MjaGbSPahHCUXjfLaUYUdPN_3-xtjY",1751114697169]