[{"data":1,"prerenderedAt":3029},["ShallowReactive",2],{"articles_javascript":3},[4],{"id":5,"title":6,"body":7,"date":3016,"description":3017,"extension":3018,"meta":3019,"navigation":1253,"path":3020,"previewImg":3021,"seo":3022,"stem":3023,"topics":3024,"__hash__":3028},"articles/blog/js-built-in-methods.md","Шпаргалка по built-in методам",{"type":8,"value":9,"toc":3001},"minimark",[10,15,20,33,107,114,161,168,213,219,265,268,325,339,488,491,557,563,628,632,635,722,725,794,801,848,853,896,902,961,965,968,971,1011,1014,1055,1058,1099,1102,1139,1142,1184,1187,1349,1355,1493,1500,1503,1507,1510,1513,1516,1637,1644,1727,1731,1734,1740,1803,1806,1809,1858,1864,1914,1921,1977,1983,2072,2075,2104,2111,2208,2212,2216,2219,2230,2431,2437,2440,2446,2454,2458,2469,2475,2541,2547,2552,2557,2561,2567,2609,2612,2649,2652,2689,2692,2729,2733,2739,2913,2918,2944,2949,2997],[11,12,14],"h2",{"id":13},"array","Array",[16,17,19],"h3",{"id":18},"add-delete-elements","Добавление и удаление элементов",[21,22,23,24,28,29],"p",{},"добавляет в ",[25,26,27],"strong",{},"конец"," массива новый элемент, возвращает новый ",[30,31,32],"code",{},"length",[34,35,40],"pre",{"className":36,"code":37,"language":38,"meta":39,"style":39},"language-js shiki shiki-themes github-light github-dark","const arr = ['a', 'b'];\narr.push('c'); // 3\narr; // ['a', 'b', 'c']\n\n","js","",[30,41,42,75,98],{"__ignoreMap":39},[43,44,47,51,55,58,62,66,69,72],"span",{"class":45,"line":46},"line",1,[43,48,50],{"class":49},"szBVR","const",[43,52,54],{"class":53},"sj4cs"," arr",[43,56,57],{"class":49}," =",[43,59,61],{"class":60},"sVt8B"," [",[43,63,65],{"class":64},"sZZnC","'a'",[43,67,68],{"class":60},", ",[43,70,71],{"class":64},"'b'",[43,73,74],{"class":60},"];\n",[43,76,78,81,85,88,91,94],{"class":45,"line":77},2,[43,79,80],{"class":60},"arr.",[43,82,84],{"class":83},"sScJk","push",[43,86,87],{"class":60},"(",[43,89,90],{"class":64},"'c'",[43,92,93],{"class":60},"); ",[43,95,97],{"class":96},"sJ8bj","// 3\n",[43,99,101,104],{"class":45,"line":100},3,[43,102,103],{"class":60},"arr; ",[43,105,106],{"class":96},"// ['a', 'b', 'c']\n",[21,108,109,110,113],{},"удаляет и возвращает ",[25,111,112],{},"последний"," элемент массива",[34,115,117],{"className":36,"code":116,"language":38,"meta":39,"style":39},"const arr = ['a', 'b', 'c'];\narr.pop(); // 'c'\narr; // ['a', 'b']\n\n",[30,118,119,141,154],{"__ignoreMap":39},[43,120,121,123,125,127,129,131,133,135,137,139],{"class":45,"line":46},[43,122,50],{"class":49},[43,124,54],{"class":53},[43,126,57],{"class":49},[43,128,61],{"class":60},[43,130,65],{"class":64},[43,132,68],{"class":60},[43,134,71],{"class":64},[43,136,68],{"class":60},[43,138,90],{"class":64},[43,140,74],{"class":60},[43,142,143,145,148,151],{"class":45,"line":77},[43,144,80],{"class":60},[43,146,147],{"class":83},"pop",[43,149,150],{"class":60},"(); ",[43,152,153],{"class":96},"// 'c'\n",[43,155,156,158],{"class":45,"line":100},[43,157,103],{"class":60},[43,159,160],{"class":96},"// ['a', 'b']\n",[21,162,23,163,28,166],{},[25,164,165],{},"начало",[30,167,32],{},[34,169,171],{"className":36,"code":170,"language":38,"meta":39,"style":39},"const arr = ['a', 'b'];\narr.unshift('c'); // 3\narr; // ['с', 'a', 'b']\n\n",[30,172,173,191,206],{"__ignoreMap":39},[43,174,175,177,179,181,183,185,187,189],{"class":45,"line":46},[43,176,50],{"class":49},[43,178,54],{"class":53},[43,180,57],{"class":49},[43,182,61],{"class":60},[43,184,65],{"class":64},[43,186,68],{"class":60},[43,188,71],{"class":64},[43,190,74],{"class":60},[43,192,193,195,198,200,202,204],{"class":45,"line":77},[43,194,80],{"class":60},[43,196,197],{"class":83},"unshift",[43,199,87],{"class":60},[43,201,90],{"class":64},[43,203,93],{"class":60},[43,205,97],{"class":96},[43,207,208,210],{"class":45,"line":100},[43,209,103],{"class":60},[43,211,212],{"class":96},"// ['с', 'a', 'b']\n",[21,214,109,215,218],{},[25,216,217],{},"первый"," элемент массива.",[34,220,222],{"className":36,"code":221,"language":38,"meta":39,"style":39},"const arr = ['a', 'b', 'c'];\narr.shift(); // 'a'\narr; // ['b', 'c']\n\n",[30,223,224,246,258],{"__ignoreMap":39},[43,225,226,228,230,232,234,236,238,240,242,244],{"class":45,"line":46},[43,227,50],{"class":49},[43,229,54],{"class":53},[43,231,57],{"class":49},[43,233,61],{"class":60},[43,235,65],{"class":64},[43,237,68],{"class":60},[43,239,71],{"class":64},[43,241,68],{"class":60},[43,243,90],{"class":64},[43,245,74],{"class":60},[43,247,248,250,253,255],{"class":45,"line":77},[43,249,80],{"class":60},[43,251,252],{"class":83},"shift",[43,254,150],{"class":60},[43,256,257],{"class":96},"// 'a'\n",[43,259,260,262],{"class":45,"line":100},[43,261,103],{"class":60},[43,263,264],{"class":96},"// ['b', 'c']\n",[21,266,267],{},"создает новый массив, включающий в себя переданные значение/массивы.\nНе мутирует** исходный массив.",[34,269,271],{"className":36,"code":270,"language":38,"meta":39,"style":39},"['a', 'b', 'c'].concat('b', 'c', ['d', 'e'], ['f']); // ['a', 'b', 'c', 'd', 'e', 'f']\n",[30,272,273],{"__ignoreMap":39},[43,274,275,278,280,282,284,286,288,291,294,296,298,300,302,305,308,310,313,316,319,322],{"class":45,"line":46},[43,276,277],{"class":60},"[",[43,279,65],{"class":64},[43,281,68],{"class":60},[43,283,71],{"class":64},[43,285,68],{"class":60},[43,287,90],{"class":64},[43,289,290],{"class":60},"].",[43,292,293],{"class":83},"concat",[43,295,87],{"class":60},[43,297,71],{"class":64},[43,299,68],{"class":60},[43,301,90],{"class":64},[43,303,304],{"class":60},", [",[43,306,307],{"class":64},"'d'",[43,309,68],{"class":60},[43,311,312],{"class":64},"'e'",[43,314,315],{"class":60},"], [",[43,317,318],{"class":64},"'f'",[43,320,321],{"class":60},"]); ",[43,323,324],{"class":96},"// ['a', 'b', 'c', 'd', 'e', 'f']\n",[21,326,327,328,331,332,334,335,338],{},"принимает два индекса - начальный и конечный и возвращает обрезанную копию.\nЕсли передать только ",[30,329,330],{},"begin"," - обрежется с begin по последний индекс включительно.\nЕсли передать только отрицательный ",[30,333,330],{}," - можно вырезать N последних элементов массива.\nЕсли передать отрицательный ",[30,336,337],{},"end"," - обрежется с begin по по последний индекс минус end.",[34,340,342],{"className":36,"code":341,"language":38,"meta":39,"style":39},"['a', 'b', 'c', 'd'].slice(1) // ['b', 'c', 'd'] - обрезать с индекса 1 по конец массива\n['a', 'b', 'c', 'd'].slice(-2) // ['b', 'c', 'd'] - вырезать последние два элемента массива\n['a', 'b', 'c', 'd'].slice(1, 3) // ['b', 'c'] - обрезать с индекса 1 по индекс 3, т.е. элементы с индексами 1, 2\n['a', 'b', 'c', 'd'].slice(0, -1); // ['a', 'b', 'c'] - обрезать, убрав последний элемент\n",[30,343,344,378,413,449],{"__ignoreMap":39},[43,345,346,348,350,352,354,356,358,360,362,364,367,369,372,375],{"class":45,"line":46},[43,347,277],{"class":60},[43,349,65],{"class":64},[43,351,68],{"class":60},[43,353,71],{"class":64},[43,355,68],{"class":60},[43,357,90],{"class":64},[43,359,68],{"class":60},[43,361,307],{"class":64},[43,363,290],{"class":60},[43,365,366],{"class":83},"slice",[43,368,87],{"class":60},[43,370,371],{"class":53},"1",[43,373,374],{"class":60},") ",[43,376,377],{"class":96},"// ['b', 'c', 'd'] - обрезать с индекса 1 по конец массива\n",[43,379,380,382,384,386,388,390,392,394,396,398,400,402,405,408,410],{"class":45,"line":77},[43,381,277],{"class":60},[43,383,65],{"class":64},[43,385,68],{"class":60},[43,387,71],{"class":64},[43,389,68],{"class":60},[43,391,90],{"class":64},[43,393,68],{"class":60},[43,395,307],{"class":64},[43,397,290],{"class":60},[43,399,366],{"class":83},[43,401,87],{"class":60},[43,403,404],{"class":49},"-",[43,406,407],{"class":53},"2",[43,409,374],{"class":60},[43,411,412],{"class":96},"// ['b', 'c', 'd'] - вырезать последние два элемента массива\n",[43,414,415,417,419,421,423,425,427,429,431,433,435,437,439,441,444,446],{"class":45,"line":100},[43,416,277],{"class":60},[43,418,65],{"class":64},[43,420,68],{"class":60},[43,422,71],{"class":64},[43,424,68],{"class":60},[43,426,90],{"class":64},[43,428,68],{"class":60},[43,430,307],{"class":64},[43,432,290],{"class":60},[43,434,366],{"class":83},[43,436,87],{"class":60},[43,438,371],{"class":53},[43,440,68],{"class":60},[43,442,443],{"class":53},"3",[43,445,374],{"class":60},[43,447,448],{"class":96},"// ['b', 'c'] - обрезать с индекса 1 по индекс 3, т.е. элементы с индексами 1, 2\n",[43,450,452,454,456,458,460,462,464,466,468,470,472,474,477,479,481,483,485],{"class":45,"line":451},4,[43,453,277],{"class":60},[43,455,65],{"class":64},[43,457,68],{"class":60},[43,459,71],{"class":64},[43,461,68],{"class":60},[43,463,90],{"class":64},[43,465,68],{"class":60},[43,467,307],{"class":64},[43,469,290],{"class":60},[43,471,366],{"class":83},[43,473,87],{"class":60},[43,475,476],{"class":53},"0",[43,478,68],{"class":60},[43,480,404],{"class":49},[43,482,371],{"class":53},[43,484,93],{"class":60},[43,486,487],{"class":96},"// ['a', 'b', 'c'] - обрезать, убрав последний элемент\n",[21,489,490],{},"принимает индекс и количество элементов после этого индекса, которые нужно удалить.\nЕсли передать items - они будут добавлены после индекса start.\nМутирует исходный массив и возвращает удаленные элементы.",[34,492,494],{"className":36,"code":493,"language":38,"meta":39,"style":39},"const arr = ['a', 'b', 'c', 'd'];\narr.splice(1, 2, 'e', 'f'); // удалить 2 элемента, начиная с индекса 1, т.е. ['b', 'c']. Добавить 'e', 'f' к индексу 1.\narr; // ['a', 'e', 'f', 'd']\n\n",[30,495,496,522,550],{"__ignoreMap":39},[43,497,498,500,502,504,506,508,510,512,514,516,518,520],{"class":45,"line":46},[43,499,50],{"class":49},[43,501,54],{"class":53},[43,503,57],{"class":49},[43,505,61],{"class":60},[43,507,65],{"class":64},[43,509,68],{"class":60},[43,511,71],{"class":64},[43,513,68],{"class":60},[43,515,90],{"class":64},[43,517,68],{"class":60},[43,519,307],{"class":64},[43,521,74],{"class":60},[43,523,524,526,529,531,533,535,537,539,541,543,545,547],{"class":45,"line":77},[43,525,80],{"class":60},[43,527,528],{"class":83},"splice",[43,530,87],{"class":60},[43,532,371],{"class":53},[43,534,68],{"class":60},[43,536,407],{"class":53},[43,538,68],{"class":60},[43,540,312],{"class":64},[43,542,68],{"class":60},[43,544,318],{"class":64},[43,546,93],{"class":60},[43,548,549],{"class":96},"// удалить 2 элемента, начиная с индекса 1, т.е. ['b', 'c']. Добавить 'e', 'f' к индексу 1.\n",[43,551,552,554],{"class":45,"line":100},[43,553,103],{"class":60},[43,555,556],{"class":96},"// ['a', 'e', 'f', 'd']\n",[21,558,559,560,562],{},"тоже самое, что и ",[30,561,528],{},", но вместо мутации\nбудет создан новый массив. Возвращает новый измененный массив.",[34,564,566],{"className":36,"code":565,"language":38,"meta":39,"style":39},"const arr = ['a', 'b', 'c', 'd'];\narr.toSpliced(1, 2, 'e', 'f'); // ['a', 'e', 'f', 'd']\narr; // ['a', 'b', 'c', 'd']\n\n",[30,567,568,594,621],{"__ignoreMap":39},[43,569,570,572,574,576,578,580,582,584,586,588,590,592],{"class":45,"line":46},[43,571,50],{"class":49},[43,573,54],{"class":53},[43,575,57],{"class":49},[43,577,61],{"class":60},[43,579,65],{"class":64},[43,581,68],{"class":60},[43,583,71],{"class":64},[43,585,68],{"class":60},[43,587,90],{"class":64},[43,589,68],{"class":60},[43,591,307],{"class":64},[43,593,74],{"class":60},[43,595,596,598,601,603,605,607,609,611,613,615,617,619],{"class":45,"line":77},[43,597,80],{"class":60},[43,599,600],{"class":83},"toSpliced",[43,602,87],{"class":60},[43,604,371],{"class":53},[43,606,68],{"class":60},[43,608,407],{"class":53},[43,610,68],{"class":60},[43,612,312],{"class":64},[43,614,68],{"class":60},[43,616,318],{"class":64},[43,618,93],{"class":60},[43,620,556],{"class":96},[43,622,623,625],{"class":45,"line":100},[43,624,103],{"class":60},[43,626,627],{"class":96},"// ['a', 'b', 'c', 'd']\n",[16,629,631],{"id":630},"search-in-array","Поиск в массиве",[21,633,634],{},"находит и возвращает первый элемент массива, соответствующий заданному условию.",[34,636,638],{"className":36,"code":637,"language":38,"meta":39,"style":39},"[\n  { age: 10, name: 'Mike' },\n  { age: 19, name: 'Timofey' },\n  { age: 18, name: 'Alexander' }\n].find(i => i.age >= 18); // { age: 19, name: 'Timofey' }\n",[30,639,640,645,662,676,691],{"__ignoreMap":39},[43,641,642],{"class":45,"line":46},[43,643,644],{"class":60},"[\n",[43,646,647,650,653,656,659],{"class":45,"line":77},[43,648,649],{"class":60},"  { age: ",[43,651,652],{"class":53},"10",[43,654,655],{"class":60},", name: ",[43,657,658],{"class":64},"'Mike'",[43,660,661],{"class":60}," },\n",[43,663,664,666,669,671,674],{"class":45,"line":100},[43,665,649],{"class":60},[43,667,668],{"class":53},"19",[43,670,655],{"class":60},[43,672,673],{"class":64},"'Timofey'",[43,675,661],{"class":60},[43,677,678,680,683,685,688],{"class":45,"line":451},[43,679,649],{"class":60},[43,681,682],{"class":53},"18",[43,684,655],{"class":60},[43,686,687],{"class":64},"'Alexander'",[43,689,690],{"class":60}," }\n",[43,692,694,696,699,701,705,708,711,714,717,719],{"class":45,"line":693},5,[43,695,290],{"class":60},[43,697,698],{"class":83},"find",[43,700,87],{"class":60},[43,702,704],{"class":703},"s4XuR","i",[43,706,707],{"class":49}," =>",[43,709,710],{"class":60}," i.age ",[43,712,713],{"class":49},">=",[43,715,716],{"class":53}," 18",[43,718,93],{"class":60},[43,720,721],{"class":96},"// { age: 19, name: 'Timofey' }\n",[21,723,724],{},"тоже самое, но начинает обходить массив с конца:",[34,726,728],{"className":36,"code":727,"language":38,"meta":39,"style":39},"[\n  { age: 10, name: 'Mike' },\n  { age: 19, name: 'Timofey' },\n  { age: 18, name: 'Alexander' }\n].findLast(i => i.age >= 18); // { age: 18, name: 'Alexander' }\n",[30,729,730,734,746,758,770],{"__ignoreMap":39},[43,731,732],{"class":45,"line":46},[43,733,644],{"class":60},[43,735,736,738,740,742,744],{"class":45,"line":77},[43,737,649],{"class":60},[43,739,652],{"class":53},[43,741,655],{"class":60},[43,743,658],{"class":64},[43,745,661],{"class":60},[43,747,748,750,752,754,756],{"class":45,"line":100},[43,749,649],{"class":60},[43,751,668],{"class":53},[43,753,655],{"class":60},[43,755,673],{"class":64},[43,757,661],{"class":60},[43,759,760,762,764,766,768],{"class":45,"line":451},[43,761,649],{"class":60},[43,763,682],{"class":53},[43,765,655],{"class":60},[43,767,687],{"class":64},[43,769,690],{"class":60},[43,771,772,774,777,779,781,783,785,787,789,791],{"class":45,"line":693},[43,773,290],{"class":60},[43,775,776],{"class":83},"findLast",[43,778,87],{"class":60},[43,780,704],{"class":703},[43,782,707],{"class":49},[43,784,710],{"class":60},[43,786,713],{"class":49},[43,788,716],{"class":53},[43,790,93],{"class":60},[43,792,793],{"class":96},"// { age: 18, name: 'Alexander' }\n",[21,795,796,797,800],{},"принимает в коллбеке условие, возвращает ",[30,798,799],{},"true",", если хотя бы один элемент соответствует",[34,802,804],{"className":36,"code":803,"language":38,"meta":39,"style":39},"['Mike', 'Timofey', 'Alexander'].some(name => name.length > 5); // true\n",[30,805,806],{"__ignoreMap":39},[43,807,808,810,812,814,816,818,820,822,825,827,830,832,835,837,840,843,845],{"class":45,"line":46},[43,809,277],{"class":60},[43,811,658],{"class":64},[43,813,68],{"class":60},[43,815,673],{"class":64},[43,817,68],{"class":60},[43,819,687],{"class":64},[43,821,290],{"class":60},[43,823,824],{"class":83},"some",[43,826,87],{"class":60},[43,828,829],{"class":703},"name",[43,831,707],{"class":49},[43,833,834],{"class":60}," name.",[43,836,32],{"class":53},[43,838,839],{"class":49}," >",[43,841,842],{"class":53}," 5",[43,844,93],{"class":60},[43,846,847],{"class":96},"// true\n",[21,849,796,850,852],{},[30,851,799],{},", если все элементы соответствуют",[34,854,856],{"className":36,"code":855,"language":38,"meta":39,"style":39},"['Mike', 'Timofey', 'Alexander'].every(name => name.length > 5); // false\n",[30,857,858],{"__ignoreMap":39},[43,859,860,862,864,866,868,870,872,874,877,879,881,883,885,887,889,891,893],{"class":45,"line":46},[43,861,277],{"class":60},[43,863,658],{"class":64},[43,865,68],{"class":60},[43,867,673],{"class":64},[43,869,68],{"class":60},[43,871,687],{"class":64},[43,873,290],{"class":60},[43,875,876],{"class":83},"every",[43,878,87],{"class":60},[43,880,829],{"class":703},[43,882,707],{"class":49},[43,884,834],{"class":60},[43,886,32],{"class":53},[43,888,839],{"class":49},[43,890,842],{"class":53},[43,892,93],{"class":60},[43,894,895],{"class":96},"// false\n",[21,897,898,899,901],{},"принимает значение, возвращает ",[30,900,799],{},", если в массиве есть такой элемент",[34,903,905],{"className":36,"code":904,"language":38,"meta":39,"style":39},"['Mike', 'Timofey', 'Alexander'].includes('Timofey'); // true\n['Mike', 'Timofey', 'Alexander'].includes('Mark'); // false\n",[30,906,907,934],{"__ignoreMap":39},[43,908,909,911,913,915,917,919,921,923,926,928,930,932],{"class":45,"line":46},[43,910,277],{"class":60},[43,912,658],{"class":64},[43,914,68],{"class":60},[43,916,673],{"class":64},[43,918,68],{"class":60},[43,920,687],{"class":64},[43,922,290],{"class":60},[43,924,925],{"class":83},"includes",[43,927,87],{"class":60},[43,929,673],{"class":64},[43,931,93],{"class":60},[43,933,847],{"class":96},[43,935,936,938,940,942,944,946,948,950,952,954,957,959],{"class":45,"line":77},[43,937,277],{"class":60},[43,939,658],{"class":64},[43,941,68],{"class":60},[43,943,673],{"class":64},[43,945,68],{"class":60},[43,947,687],{"class":64},[43,949,290],{"class":60},[43,951,925],{"class":83},[43,953,87],{"class":60},[43,955,956],{"class":64},"'Mark'",[43,958,93],{"class":60},[43,960,895],{"class":96},[16,962,964],{"id":963},"iterate-and-mutate-array","Обход и изменение массива",[21,966,967],{},"принимает коллбек,\nкоторый выполнится для каждого элемента массива",[21,969,970],{},"принимает коллбек, который определяет,\nкак будет меняться каждый элемент массива.\nНе мутирует** исходный массив.",[34,972,974],{"className":36,"code":973,"language":38,"meta":39,"style":39},"['heh', 'huh'].map(i => i.toUpperCase()); // ['HEH', 'HUH']\n",[30,975,976],{"__ignoreMap":39},[43,977,978,980,983,985,988,990,993,995,997,999,1002,1005,1008],{"class":45,"line":46},[43,979,277],{"class":60},[43,981,982],{"class":64},"'heh'",[43,984,68],{"class":60},[43,986,987],{"class":64},"'huh'",[43,989,290],{"class":60},[43,991,992],{"class":83},"map",[43,994,87],{"class":60},[43,996,704],{"class":703},[43,998,707],{"class":49},[43,1000,1001],{"class":60}," i.",[43,1003,1004],{"class":83},"toUpperCase",[43,1006,1007],{"class":60},"()); ",[43,1009,1010],{"class":96},"// ['HEH', 'HUH']\n",[21,1012,1013],{},"переворачивает массив. Изменяет исходный массив и возвращает ссылку на изменённый массив.",[34,1015,1017],{"className":36,"code":1016,"language":38,"meta":39,"style":39},"const arr = [1, 2];\narr.reverse(); // [2, 1]\narr; // [2, 1]\n\n",[30,1018,1019,1037,1049],{"__ignoreMap":39},[43,1020,1021,1023,1025,1027,1029,1031,1033,1035],{"class":45,"line":46},[43,1022,50],{"class":49},[43,1024,54],{"class":53},[43,1026,57],{"class":49},[43,1028,61],{"class":60},[43,1030,371],{"class":53},[43,1032,68],{"class":60},[43,1034,407],{"class":53},[43,1036,74],{"class":60},[43,1038,1039,1041,1044,1046],{"class":45,"line":77},[43,1040,80],{"class":60},[43,1042,1043],{"class":83},"reverse",[43,1045,150],{"class":60},[43,1047,1048],{"class":96},"// [2, 1]\n",[43,1050,1051,1053],{"class":45,"line":100},[43,1052,103],{"class":60},[43,1054,1048],{"class":96},[21,1056,1057],{},"тоже самое, что и reverse, но без мутации исходного массива. Возвращает новый массив.",[34,1059,1061],{"className":36,"code":1060,"language":38,"meta":39,"style":39},"const arr = [1, 2];\narr.toReversed(); // [2, 1]\narr; // [1, 2]\n\n",[30,1062,1063,1081,1092],{"__ignoreMap":39},[43,1064,1065,1067,1069,1071,1073,1075,1077,1079],{"class":45,"line":46},[43,1066,50],{"class":49},[43,1068,54],{"class":53},[43,1070,57],{"class":49},[43,1072,61],{"class":60},[43,1074,371],{"class":53},[43,1076,68],{"class":60},[43,1078,407],{"class":53},[43,1080,74],{"class":60},[43,1082,1083,1085,1088,1090],{"class":45,"line":77},[43,1084,80],{"class":60},[43,1086,1087],{"class":83},"toReversed",[43,1089,150],{"class":60},[43,1091,1048],{"class":96},[43,1093,1094,1096],{"class":45,"line":100},[43,1095,103],{"class":60},[43,1097,1098],{"class":96},"// [1, 2]\n",[21,1100,1101],{},"создает копию массива с замененным элементом по выбранному индексу",[34,1103,1105],{"className":36,"code":1104,"language":38,"meta":39,"style":39},"['a', 'b', 'c'].with(2, 'd'); // ['a', 'b', 'd']\n\n",[30,1106,1107],{"__ignoreMap":39},[43,1108,1109,1111,1113,1115,1117,1119,1121,1123,1126,1128,1130,1132,1134,1136],{"class":45,"line":46},[43,1110,277],{"class":60},[43,1112,65],{"class":64},[43,1114,68],{"class":60},[43,1116,71],{"class":64},[43,1118,68],{"class":60},[43,1120,90],{"class":64},[43,1122,290],{"class":60},[43,1124,1125],{"class":83},"with",[43,1127,87],{"class":60},[43,1129,407],{"class":53},[43,1131,68],{"class":60},[43,1133,307],{"class":64},[43,1135,93],{"class":60},[43,1137,1138],{"class":96},"// ['a', 'b', 'd']\n",[21,1140,1141],{},"возвращает массив, где все элементы соответствуют переданному условию в коллбеке",[34,1143,1145],{"className":36,"code":1144,"language":38,"meta":39,"style":39},"['Mike', 'Timofey', 'Alexander'].map(name => name.length > 5); // ['Timofey', 'Alexander']\n",[30,1146,1147],{"__ignoreMap":39},[43,1148,1149,1151,1153,1155,1157,1159,1161,1163,1165,1167,1169,1171,1173,1175,1177,1179,1181],{"class":45,"line":46},[43,1150,277],{"class":60},[43,1152,658],{"class":64},[43,1154,68],{"class":60},[43,1156,673],{"class":64},[43,1158,68],{"class":60},[43,1160,687],{"class":64},[43,1162,290],{"class":60},[43,1164,992],{"class":83},[43,1166,87],{"class":60},[43,1168,829],{"class":703},[43,1170,707],{"class":49},[43,1172,834],{"class":60},[43,1174,32],{"class":53},[43,1176,839],{"class":49},[43,1178,842],{"class":53},[43,1180,93],{"class":60},[43,1182,1183],{"class":96},"// ['Timofey', 'Alexander']\n",[21,1185,1186],{},"обходит массив и аккумулирует значение.\nЗначение аккумулятора задается в коллбеке.",[34,1188,1190],{"className":36,"code":1189,"language":38,"meta":39,"style":39},"const employers = [\n  { age: 10, name: 'Mike' }, // Сын маминой подруги\n  { age: 19, name: 'Timofey' },\n  { age: 18, name: 'Alexander' }\n];\n\nconst totalAge = employers.reduce((acc, curr) => {\n  return acc + curr.age;\n}, 0); // 47\n\nconst averageAge = totalAge / employers.length; // 16.66\n",[30,1191,1192,1204,1220,1232,1244,1248,1255,1290,1305,1318,1323],{"__ignoreMap":39},[43,1193,1194,1196,1199,1201],{"class":45,"line":46},[43,1195,50],{"class":49},[43,1197,1198],{"class":53}," employers",[43,1200,57],{"class":49},[43,1202,1203],{"class":60}," [\n",[43,1205,1206,1208,1210,1212,1214,1217],{"class":45,"line":77},[43,1207,649],{"class":60},[43,1209,652],{"class":53},[43,1211,655],{"class":60},[43,1213,658],{"class":64},[43,1215,1216],{"class":60}," }, ",[43,1218,1219],{"class":96},"// Сын маминой подруги\n",[43,1221,1222,1224,1226,1228,1230],{"class":45,"line":100},[43,1223,649],{"class":60},[43,1225,668],{"class":53},[43,1227,655],{"class":60},[43,1229,673],{"class":64},[43,1231,661],{"class":60},[43,1233,1234,1236,1238,1240,1242],{"class":45,"line":451},[43,1235,649],{"class":60},[43,1237,682],{"class":53},[43,1239,655],{"class":60},[43,1241,687],{"class":64},[43,1243,690],{"class":60},[43,1245,1246],{"class":45,"line":693},[43,1247,74],{"class":60},[43,1249,1251],{"class":45,"line":1250},6,[43,1252,1254],{"emptyLinePlaceholder":1253},true,"\n",[43,1256,1258,1260,1263,1265,1268,1271,1274,1277,1279,1282,1284,1287],{"class":45,"line":1257},7,[43,1259,50],{"class":49},[43,1261,1262],{"class":53}," totalAge",[43,1264,57],{"class":49},[43,1266,1267],{"class":60}," employers.",[43,1269,1270],{"class":83},"reduce",[43,1272,1273],{"class":60},"((",[43,1275,1276],{"class":703},"acc",[43,1278,68],{"class":60},[43,1280,1281],{"class":703},"curr",[43,1283,374],{"class":60},[43,1285,1286],{"class":49},"=>",[43,1288,1289],{"class":60}," {\n",[43,1291,1293,1296,1299,1302],{"class":45,"line":1292},8,[43,1294,1295],{"class":49},"  return",[43,1297,1298],{"class":60}," acc ",[43,1300,1301],{"class":49},"+",[43,1303,1304],{"class":60}," curr.age;\n",[43,1306,1308,1311,1313,1315],{"class":45,"line":1307},9,[43,1309,1310],{"class":60},"}, ",[43,1312,476],{"class":53},[43,1314,93],{"class":60},[43,1316,1317],{"class":96},"// 47\n",[43,1319,1321],{"class":45,"line":1320},10,[43,1322,1254],{"emptyLinePlaceholder":1253},[43,1324,1326,1328,1331,1333,1336,1339,1341,1343,1346],{"class":45,"line":1325},11,[43,1327,50],{"class":49},[43,1329,1330],{"class":53}," averageAge",[43,1332,57],{"class":49},[43,1334,1335],{"class":60}," totalAge ",[43,1337,1338],{"class":49},"/",[43,1340,1267],{"class":60},[43,1342,32],{"class":53},[43,1344,1345],{"class":60},"; ",[43,1347,1348],{"class":96},"// 16.66\n",[21,1350,1351,1352,1354],{},"Метод ",[30,1353,1270],{}," очень полезен для агрегации:",[34,1356,1358],{"className":36,"code":1357,"language":38,"meta":39,"style":39},"const employers = [\n  { age: 10, name: 'Mike', position: 'son' },\n  { age: 19, name: 'Timofey', position: 'frontend' },\n  { age: 18, name: 'Alexander', position: 'frontend' }\n];\n\nconst employersByPosition = employers.reduce((acc, curr) => {\n  acc[curr.position] = (acc[curr.position] || []).concat(curr);\n  return acc;\n}, {}); // { son: [{ name: 'Mike',... }], frontend: [{ name: 'Timofey', ...}, { name: 'Alexander',...}] }\n\n",[30,1359,1360,1370,1388,1405,1421,1425,1429,1456,1478,1485],{"__ignoreMap":39},[43,1361,1362,1364,1366,1368],{"class":45,"line":46},[43,1363,50],{"class":49},[43,1365,1198],{"class":53},[43,1367,57],{"class":49},[43,1369,1203],{"class":60},[43,1371,1372,1374,1376,1378,1380,1383,1386],{"class":45,"line":77},[43,1373,649],{"class":60},[43,1375,652],{"class":53},[43,1377,655],{"class":60},[43,1379,658],{"class":64},[43,1381,1382],{"class":60},", position: ",[43,1384,1385],{"class":64},"'son'",[43,1387,661],{"class":60},[43,1389,1390,1392,1394,1396,1398,1400,1403],{"class":45,"line":100},[43,1391,649],{"class":60},[43,1393,668],{"class":53},[43,1395,655],{"class":60},[43,1397,673],{"class":64},[43,1399,1382],{"class":60},[43,1401,1402],{"class":64},"'frontend'",[43,1404,661],{"class":60},[43,1406,1407,1409,1411,1413,1415,1417,1419],{"class":45,"line":451},[43,1408,649],{"class":60},[43,1410,682],{"class":53},[43,1412,655],{"class":60},[43,1414,687],{"class":64},[43,1416,1382],{"class":60},[43,1418,1402],{"class":64},[43,1420,690],{"class":60},[43,1422,1423],{"class":45,"line":693},[43,1424,74],{"class":60},[43,1426,1427],{"class":45,"line":1250},[43,1428,1254],{"emptyLinePlaceholder":1253},[43,1430,1431,1433,1436,1438,1440,1442,1444,1446,1448,1450,1452,1454],{"class":45,"line":1257},[43,1432,50],{"class":49},[43,1434,1435],{"class":53}," employersByPosition",[43,1437,57],{"class":49},[43,1439,1267],{"class":60},[43,1441,1270],{"class":83},[43,1443,1273],{"class":60},[43,1445,1276],{"class":703},[43,1447,68],{"class":60},[43,1449,1281],{"class":703},[43,1451,374],{"class":60},[43,1453,1286],{"class":49},[43,1455,1289],{"class":60},[43,1457,1458,1461,1464,1467,1470,1473,1475],{"class":45,"line":1292},[43,1459,1460],{"class":60},"  acc[curr.position] ",[43,1462,1463],{"class":49},"=",[43,1465,1466],{"class":60}," (acc[curr.position] ",[43,1468,1469],{"class":49},"||",[43,1471,1472],{"class":60}," []).",[43,1474,293],{"class":83},[43,1476,1477],{"class":60},"(curr);\n",[43,1479,1480,1482],{"class":45,"line":1307},[43,1481,1295],{"class":49},[43,1483,1484],{"class":60}," acc;\n",[43,1486,1487,1490],{"class":45,"line":1320},[43,1488,1489],{"class":60},"}, {}); ",[43,1491,1492],{"class":96},"// { son: [{ name: 'Mike',... }], frontend: [{ name: 'Timofey', ...}, { name: 'Alexander',...}] }\n",[21,1494,1495,1496,1499],{},"Если не передать ",[30,1497,1498],{},"initAcc"," - итерация будет со 2-го элемента.",[21,1501,1502],{},"тоже самое, что и обычный reduce, но справа налево.",[16,1504,1506],{"id":1505},"sort-array","Сортировка массива",[21,1508,1509],{},"принимает коллбеком функцию, в которой принимаются два аргумента - элементы массива,\nа return должен определить их порядок. Мутирует исходный массив и возвращает ссылку на него.",[21,1511,1512],{},"идет первым\nбез изменений\nидет первым",[21,1514,1515],{},"Если коллбек не передан - сортирует в лексическом порядке по возрастанию, подойдет только для строк.",[34,1517,1519],{"className":36,"code":1518,"language":38,"meta":39,"style":39},"[4, 2, 3, 1].sort((a, b) => a - b); // [1, 2, 3, 4]\n[4, 2, 3, 1].sort((a, b) => b - a); // [4, 3, 2, 1]\n['b', 'c', 'a'].sort(); // ['a', 'b', 'c']\n",[30,1520,1521,1570,1615],{"__ignoreMap":39},[43,1522,1523,1525,1528,1530,1532,1534,1536,1538,1540,1542,1545,1547,1550,1552,1555,1557,1559,1562,1564,1567],{"class":45,"line":46},[43,1524,277],{"class":60},[43,1526,1527],{"class":53},"4",[43,1529,68],{"class":60},[43,1531,407],{"class":53},[43,1533,68],{"class":60},[43,1535,443],{"class":53},[43,1537,68],{"class":60},[43,1539,371],{"class":53},[43,1541,290],{"class":60},[43,1543,1544],{"class":83},"sort",[43,1546,1273],{"class":60},[43,1548,1549],{"class":703},"a",[43,1551,68],{"class":60},[43,1553,1554],{"class":703},"b",[43,1556,374],{"class":60},[43,1558,1286],{"class":49},[43,1560,1561],{"class":60}," a ",[43,1563,404],{"class":49},[43,1565,1566],{"class":60}," b); ",[43,1568,1569],{"class":96},"// [1, 2, 3, 4]\n",[43,1571,1572,1574,1576,1578,1580,1582,1584,1586,1588,1590,1592,1594,1596,1598,1600,1602,1604,1607,1609,1612],{"class":45,"line":77},[43,1573,277],{"class":60},[43,1575,1527],{"class":53},[43,1577,68],{"class":60},[43,1579,407],{"class":53},[43,1581,68],{"class":60},[43,1583,443],{"class":53},[43,1585,68],{"class":60},[43,1587,371],{"class":53},[43,1589,290],{"class":60},[43,1591,1544],{"class":83},[43,1593,1273],{"class":60},[43,1595,1549],{"class":703},[43,1597,68],{"class":60},[43,1599,1554],{"class":703},[43,1601,374],{"class":60},[43,1603,1286],{"class":49},[43,1605,1606],{"class":60}," b ",[43,1608,404],{"class":49},[43,1610,1611],{"class":60}," a); ",[43,1613,1614],{"class":96},"// [4, 3, 2, 1]\n",[43,1616,1617,1619,1621,1623,1625,1627,1629,1631,1633,1635],{"class":45,"line":100},[43,1618,277],{"class":60},[43,1620,71],{"class":64},[43,1622,68],{"class":60},[43,1624,90],{"class":64},[43,1626,68],{"class":60},[43,1628,65],{"class":64},[43,1630,290],{"class":60},[43,1632,1544],{"class":83},[43,1634,150],{"class":60},[43,1636,106],{"class":96},[21,1638,1639,1640,1643],{},"тоже самое, что и метод ",[30,1641,1642],{},".sort",",\nно вместо мутации исходного массива создает новый отсортированный массив",[34,1645,1647],{"className":36,"code":1646,"language":38,"meta":39,"style":39},"const arr = [4, 2, 3, 1];\nconst sortedArray = arr.toSorted((a, b) => a - b);\n\narr; // [4, 2, 3, 1];\nsortedArray; // [1, 2, 3, 4]\n\n",[30,1648,1649,1675,1709,1713,1720],{"__ignoreMap":39},[43,1650,1651,1653,1655,1657,1659,1661,1663,1665,1667,1669,1671,1673],{"class":45,"line":46},[43,1652,50],{"class":49},[43,1654,54],{"class":53},[43,1656,57],{"class":49},[43,1658,61],{"class":60},[43,1660,1527],{"class":53},[43,1662,68],{"class":60},[43,1664,407],{"class":53},[43,1666,68],{"class":60},[43,1668,443],{"class":53},[43,1670,68],{"class":60},[43,1672,371],{"class":53},[43,1674,74],{"class":60},[43,1676,1677,1679,1682,1684,1687,1690,1692,1694,1696,1698,1700,1702,1704,1706],{"class":45,"line":77},[43,1678,50],{"class":49},[43,1680,1681],{"class":53}," sortedArray",[43,1683,57],{"class":49},[43,1685,1686],{"class":60}," arr.",[43,1688,1689],{"class":83},"toSorted",[43,1691,1273],{"class":60},[43,1693,1549],{"class":703},[43,1695,68],{"class":60},[43,1697,1554],{"class":703},[43,1699,374],{"class":60},[43,1701,1286],{"class":49},[43,1703,1561],{"class":60},[43,1705,404],{"class":49},[43,1707,1708],{"class":60}," b);\n",[43,1710,1711],{"class":45,"line":100},[43,1712,1254],{"emptyLinePlaceholder":1253},[43,1714,1715,1717],{"class":45,"line":451},[43,1716,103],{"class":60},[43,1718,1719],{"class":96},"// [4, 2, 3, 1];\n",[43,1721,1722,1725],{"class":45,"line":693},[43,1723,1724],{"class":60},"sortedArray; ",[43,1726,1569],{"class":96},[16,1728,1730],{"id":1729},"useful-methods","Полезные методы",[21,1732,1733],{},"возвращает элемент массива по указанному индексу.",[21,1735,1736,1737],{},"Основная фишка - можно легко достать последний элемент, передав ",[30,1738,1739],{},"-1",[34,1741,1743],{"className":36,"code":1742,"language":38,"meta":39,"style":39},"[1, 2, 3 ].at(0) // 1\n  [1, 2, 3 ].at(-1); // 3\n\n",[30,1744,1745,1774],{"__ignoreMap":39},[43,1746,1747,1749,1751,1753,1755,1757,1759,1762,1765,1767,1769,1771],{"class":45,"line":46},[43,1748,277],{"class":60},[43,1750,371],{"class":53},[43,1752,68],{"class":60},[43,1754,407],{"class":53},[43,1756,68],{"class":60},[43,1758,443],{"class":53},[43,1760,1761],{"class":60}," ].",[43,1763,1764],{"class":83},"at",[43,1766,87],{"class":60},[43,1768,476],{"class":53},[43,1770,374],{"class":60},[43,1772,1773],{"class":96},"// 1\n",[43,1775,1776,1779,1781,1783,1785,1787,1789,1791,1793,1795,1797,1799,1801],{"class":45,"line":77},[43,1777,1778],{"class":60},"  [",[43,1780,371],{"class":53},[43,1782,68],{"class":60},[43,1784,407],{"class":53},[43,1786,68],{"class":60},[43,1788,443],{"class":53},[43,1790,1761],{"class":60},[43,1792,1764],{"class":83},[43,1794,87],{"class":60},[43,1796,404],{"class":49},[43,1798,371],{"class":53},[43,1800,93],{"class":60},[43,1802,97],{"class":96},[21,1804,1805],{},"позволяет создать массив из Iterable\nили ArrayLike сущностей.",[21,1807,1808],{},"Очень полезен, чтобы получить массив Element:",[34,1810,1812],{"className":36,"code":1811,"language":38,"meta":39,"style":39},"const linkElements = document.querySelectorAll('.myClass');\nconst arrLinks = Array.from(linkElements); // Element[]\n\n",[30,1813,1814,1837],{"__ignoreMap":39},[43,1815,1816,1818,1821,1823,1826,1829,1831,1834],{"class":45,"line":46},[43,1817,50],{"class":49},[43,1819,1820],{"class":53}," linkElements",[43,1822,57],{"class":49},[43,1824,1825],{"class":60}," document.",[43,1827,1828],{"class":83},"querySelectorAll",[43,1830,87],{"class":60},[43,1832,1833],{"class":64},"'.myClass'",[43,1835,1836],{"class":60},");\n",[43,1838,1839,1841,1844,1846,1849,1852,1855],{"class":45,"line":77},[43,1840,50],{"class":49},[43,1842,1843],{"class":53}," arrLinks",[43,1845,57],{"class":49},[43,1847,1848],{"class":60}," Array.",[43,1850,1851],{"class":83},"from",[43,1853,1854],{"class":60},"(linkElements); ",[43,1856,1857],{"class":96},"// Element[]\n",[21,1859,1860,1861],{},"Можно сразу же сделать ",[30,1862,1863],{},".map",[34,1865,1867],{"className":36,"code":1866,"language":38,"meta":39,"style":39},"const linkElements = document.getElementsByTagName('a');\nconst arrLinks = Array.from(linkElements, element => element.href); // string[]\n\n",[30,1868,1869,1888],{"__ignoreMap":39},[43,1870,1871,1873,1875,1877,1879,1882,1884,1886],{"class":45,"line":46},[43,1872,50],{"class":49},[43,1874,1820],{"class":53},[43,1876,57],{"class":49},[43,1878,1825],{"class":60},[43,1880,1881],{"class":83},"getElementsByTagName",[43,1883,87],{"class":60},[43,1885,65],{"class":64},[43,1887,1836],{"class":60},[43,1889,1890,1892,1894,1896,1898,1900,1903,1906,1908,1911],{"class":45,"line":77},[43,1891,50],{"class":49},[43,1893,1843],{"class":53},[43,1895,57],{"class":49},[43,1897,1848],{"class":60},[43,1899,1851],{"class":83},[43,1901,1902],{"class":60},"(linkElements, ",[43,1904,1905],{"class":703},"element",[43,1907,707],{"class":49},[43,1909,1910],{"class":60}," element.href); ",[43,1912,1913],{"class":96},"// string[]\n",[21,1915,1916,1917,1920],{},"Часто используется, чтобы превратить ",[30,1918,1919],{},"Set"," в массив",[34,1922,1924],{"className":36,"code":1923,"language":38,"meta":39,"style":39},"const mySet = newSet([1, 2]);\nmySet.add(3);\nArray.from(mySet); // [1, 2, 3]\n\n",[30,1925,1926,1950,1964],{"__ignoreMap":39},[43,1927,1928,1930,1933,1935,1938,1941,1943,1945,1947],{"class":45,"line":46},[43,1929,50],{"class":49},[43,1931,1932],{"class":53}," mySet",[43,1934,57],{"class":49},[43,1936,1937],{"class":83}," newSet",[43,1939,1940],{"class":60},"([",[43,1942,371],{"class":53},[43,1944,68],{"class":60},[43,1946,407],{"class":53},[43,1948,1949],{"class":60},"]);\n",[43,1951,1952,1955,1958,1960,1962],{"class":45,"line":77},[43,1953,1954],{"class":60},"mySet.",[43,1956,1957],{"class":83},"add",[43,1959,87],{"class":60},[43,1961,443],{"class":53},[43,1963,1836],{"class":60},[43,1965,1966,1969,1971,1974],{"class":45,"line":100},[43,1967,1968],{"class":60},"Array.",[43,1970,1851],{"class":83},[43,1972,1973],{"class":60},"(mySet); ",[43,1975,1976],{"class":96},"// [1, 2, 3]\n",[21,1978,1979,1980,1920],{},"Или чтобы превратить ",[30,1981,1982],{},"Map",[34,1984,1986],{"className":36,"code":1985,"language":38,"meta":39,"style":39},"const myMap = new Map();\nmyMap.set('a', 1).set('b', 2);\n\nconst array = Array.from(myMap, ([name, value]) => ({ name, value }));\n",[30,1987,1988,2006,2037,2041],{"__ignoreMap":39},[43,1989,1990,1992,1995,1997,2000,2003],{"class":45,"line":46},[43,1991,50],{"class":49},[43,1993,1994],{"class":53}," myMap",[43,1996,57],{"class":49},[43,1998,1999],{"class":49}," new",[43,2001,2002],{"class":83}," Map",[43,2004,2005],{"class":60},"();\n",[43,2007,2008,2011,2014,2016,2018,2020,2022,2025,2027,2029,2031,2033,2035],{"class":45,"line":77},[43,2009,2010],{"class":60},"myMap.",[43,2012,2013],{"class":83},"set",[43,2015,87],{"class":60},[43,2017,65],{"class":64},[43,2019,68],{"class":60},[43,2021,371],{"class":53},[43,2023,2024],{"class":60},").",[43,2026,2013],{"class":83},[43,2028,87],{"class":60},[43,2030,71],{"class":64},[43,2032,68],{"class":60},[43,2034,407],{"class":53},[43,2036,1836],{"class":60},[43,2038,2039],{"class":45,"line":100},[43,2040,1254],{"emptyLinePlaceholder":1253},[43,2042,2043,2045,2048,2050,2052,2054,2057,2059,2061,2064,2067,2069],{"class":45,"line":451},[43,2044,50],{"class":49},[43,2046,2047],{"class":53}," array",[43,2049,57],{"class":49},[43,2051,1848],{"class":60},[43,2053,1851],{"class":83},[43,2055,2056],{"class":60},"(myMap, ([",[43,2058,829],{"class":703},[43,2060,68],{"class":60},[43,2062,2063],{"class":703},"value",[43,2065,2066],{"class":60},"]) ",[43,2068,1286],{"class":49},[43,2070,2071],{"class":60}," ({ name, value }));\n",[21,2073,2074],{},"Можно использовать, чтобы создать пустой массив",[34,2076,2078],{"className":36,"code":2077,"language":38,"meta":39,"style":39},"Array.from(new Array(3)); // [undefined, undefined, undefined]\n\n",[30,2079,2080],{"__ignoreMap":39},[43,2081,2082,2084,2086,2088,2091,2094,2096,2098,2101],{"class":45,"line":46},[43,2083,1968],{"class":60},[43,2085,1851],{"class":83},[43,2087,87],{"class":60},[43,2089,2090],{"class":49},"new",[43,2092,2093],{"class":83}," Array",[43,2095,87],{"class":60},[43,2097,443],{"class":53},[43,2099,2100],{"class":60},")); ",[43,2102,2103],{"class":96},"// [undefined, undefined, undefined]\n",[21,2105,2106,2107,2110],{},"создает новый массив, убирая вложенность на заданную ",[30,2108,2109],{},"depth",".",[34,2112,2114],{"className":36,"code":2113,"language":38,"meta":39,"style":39},"[1, [2, 3]].flat(); // [1, 2, 3]\n[1, [2, 3, [4, 5]]].flat(); // [1, 2, 3, [4, 5]]\n[1, [2, 3, [4, 5]]].flat(2); // [1, 2, 3, 4, 5]\n\n",[30,2115,2116,2140,2173],{"__ignoreMap":39},[43,2117,2118,2120,2122,2124,2126,2128,2130,2133,2136,2138],{"class":45,"line":46},[43,2119,277],{"class":60},[43,2121,371],{"class":53},[43,2123,304],{"class":60},[43,2125,407],{"class":53},[43,2127,68],{"class":60},[43,2129,443],{"class":53},[43,2131,2132],{"class":60},"]].",[43,2134,2135],{"class":83},"flat",[43,2137,150],{"class":60},[43,2139,1976],{"class":96},[43,2141,2142,2144,2146,2148,2150,2152,2154,2156,2158,2160,2163,2166,2168,2170],{"class":45,"line":77},[43,2143,277],{"class":60},[43,2145,371],{"class":53},[43,2147,304],{"class":60},[43,2149,407],{"class":53},[43,2151,68],{"class":60},[43,2153,443],{"class":53},[43,2155,304],{"class":60},[43,2157,1527],{"class":53},[43,2159,68],{"class":60},[43,2161,2162],{"class":53},"5",[43,2164,2165],{"class":60},"]]].",[43,2167,2135],{"class":83},[43,2169,150],{"class":60},[43,2171,2172],{"class":96},"// [1, 2, 3, [4, 5]]\n",[43,2174,2175,2177,2179,2181,2183,2185,2187,2189,2191,2193,2195,2197,2199,2201,2203,2205],{"class":45,"line":100},[43,2176,277],{"class":60},[43,2178,371],{"class":53},[43,2180,304],{"class":60},[43,2182,407],{"class":53},[43,2184,68],{"class":60},[43,2186,443],{"class":53},[43,2188,304],{"class":60},[43,2190,1527],{"class":53},[43,2192,68],{"class":60},[43,2194,2162],{"class":53},[43,2196,2165],{"class":60},[43,2198,2135],{"class":83},[43,2200,87],{"class":60},[43,2202,407],{"class":53},[43,2204,93],{"class":60},[43,2206,2207],{"class":96},"// [1, 2, 3, 4, 5]\n",[11,2209,2211],{"id":2210},"objects","Object",[16,2213,2215],{"id":2214},"config-for-properties","Управление свойствами",[21,2217,2218],{},"метод создания объекта, который дает нам больше контроля\nнад свойствами и методами, позволяя задать для каждого:",[21,2220,2221,2222,2225,2226,2229],{},"writeable - можно ли перезаписывать\nenumerable - является ли перечисляемым, будет ли доступен ",[30,2223,2224],{},"for...in","\nconfigurable - можно ли удалять или менять при помощи ",[30,2227,2228],{},"defineProperty","\nset - функция для записи значения\nget - функция для чтения значения",[34,2231,2233],{"className":36,"code":2232,"language":38,"meta":39,"style":39},"const tom = Object.create(Object.prototype, {  \n  name: {    \n    value: \"Tim\",\n    enumerable: true, // доступно для перебора\n    writable: false  // не доступно для записи\n  },  \n  age: { \n    value: 20,\n    enumerable: true, // доступно для перебора\n    writable: true // доступно для записи\n  },  \n  print: {    \n    value: function() { console.log(`Name: ${this.name}  Age: ${this.age}`);},\n    enumerable: false, // не доступно для перебора\n    writable: false, // не доступно для записи\n  }  \n});\n\n",[30,2234,2235,2262,2267,2278,2290,2301,2306,2311,2320,2330,2339,2343,2349,2395,2407,2419,2425],{"__ignoreMap":39},[43,2236,2237,2239,2242,2244,2247,2250,2252,2254,2256,2259],{"class":45,"line":46},[43,2238,50],{"class":49},[43,2240,2241],{"class":53}," tom",[43,2243,57],{"class":49},[43,2245,2246],{"class":60}," Object.",[43,2248,2249],{"class":83},"create",[43,2251,87],{"class":60},[43,2253,2211],{"class":53},[43,2255,2110],{"class":60},[43,2257,2258],{"class":53},"prototype",[43,2260,2261],{"class":60},", {  \n",[43,2263,2264],{"class":45,"line":77},[43,2265,2266],{"class":60},"  name: {    \n",[43,2268,2269,2272,2275],{"class":45,"line":100},[43,2270,2271],{"class":60},"    value: ",[43,2273,2274],{"class":64},"\"Tim\"",[43,2276,2277],{"class":60},",\n",[43,2279,2280,2283,2285,2287],{"class":45,"line":451},[43,2281,2282],{"class":60},"    enumerable: ",[43,2284,799],{"class":53},[43,2286,68],{"class":60},[43,2288,2289],{"class":96},"// доступно для перебора\n",[43,2291,2292,2295,2298],{"class":45,"line":693},[43,2293,2294],{"class":60},"    writable: ",[43,2296,2297],{"class":53},"false",[43,2299,2300],{"class":96},"  // не доступно для записи\n",[43,2302,2303],{"class":45,"line":1250},[43,2304,2305],{"class":60},"  },  \n",[43,2307,2308],{"class":45,"line":1257},[43,2309,2310],{"class":60},"  age: { \n",[43,2312,2313,2315,2318],{"class":45,"line":1292},[43,2314,2271],{"class":60},[43,2316,2317],{"class":53},"20",[43,2319,2277],{"class":60},[43,2321,2322,2324,2326,2328],{"class":45,"line":1307},[43,2323,2282],{"class":60},[43,2325,799],{"class":53},[43,2327,68],{"class":60},[43,2329,2289],{"class":96},[43,2331,2332,2334,2336],{"class":45,"line":1320},[43,2333,2294],{"class":60},[43,2335,799],{"class":53},[43,2337,2338],{"class":96}," // доступно для записи\n",[43,2340,2341],{"class":45,"line":1325},[43,2342,2305],{"class":60},[43,2344,2346],{"class":45,"line":2345},12,[43,2347,2348],{"class":60},"  print: {    \n",[43,2350,2352,2355,2358,2361,2364,2367,2369,2372,2375,2377,2379,2382,2384,2386,2389,2392],{"class":45,"line":2351},13,[43,2353,2354],{"class":83},"    value",[43,2356,2357],{"class":60},": ",[43,2359,2360],{"class":49},"function",[43,2362,2363],{"class":60},"() { console.",[43,2365,2366],{"class":83},"log",[43,2368,87],{"class":60},[43,2370,2371],{"class":64},"`Name: ${",[43,2373,2374],{"class":53},"this",[43,2376,2110],{"class":64},[43,2378,829],{"class":60},[43,2380,2381],{"class":64},"}  Age: ${",[43,2383,2374],{"class":53},[43,2385,2110],{"class":64},[43,2387,2388],{"class":60},"age",[43,2390,2391],{"class":64},"}`",[43,2393,2394],{"class":60},");},\n",[43,2396,2398,2400,2402,2404],{"class":45,"line":2397},14,[43,2399,2282],{"class":60},[43,2401,2297],{"class":53},[43,2403,68],{"class":60},[43,2405,2406],{"class":96},"// не доступно для перебора\n",[43,2408,2410,2412,2414,2416],{"class":45,"line":2409},15,[43,2411,2294],{"class":60},[43,2413,2297],{"class":53},[43,2415,68],{"class":60},[43,2417,2418],{"class":96},"// не доступно для записи\n",[43,2420,2422],{"class":45,"line":2421},16,[43,2423,2424],{"class":60},"  }  \n",[43,2426,2428],{"class":45,"line":2427},17,[43,2429,2430],{"class":60},"});\n",[21,2432,2433,2434],{},"позволяет настроить выбранное свойство объекта.\nНе сработает, если ",[30,2435,2436],{},"configurable = false ",[21,2438,2439],{},"запрещает добавление свойств",[21,2441,2442,2443,2110],{},"запрещает добавление и удаление свойств, все текущие свойства делает ",[30,2444,2445],{},"configurable: false",[21,2447,2448,2449,68,2451,2110],{},"запрещает добавление, удаление и изменение свойств,все текущие свойства делает ",[30,2450,2445],{},[30,2452,2453],{},"writable: false",[16,2455,2457],{"id":2456},"helpers-for-properties","Хелперы для свойств",[21,2459,2460,2461,2464,2465,2468],{},"копирует все ",[25,2462,2463],{},"перечисляемые"," ",[30,2466,2467],{},"enumerable: true"," свойства из одного или\nболее объектов в целевой объект. Копирование неглубокое, для объектов, массивов, функций будет скопирована ссылка.",[21,2470,2471,2472,2110],{},"проверяет, является ли свойство собственным(не унаследованным).\nЧтобы проверить унаследованное свойство можно воспользоваться ",[30,2473,2474],{},"in",[34,2476,2478],{"className":36,"code":2477,"language":38,"meta":39,"style":39},"const person = {\n  name: \"Zhenya\"\n};\n\nObject.hasOwn(person, \"name\"); // true\nObject.hasOwn(person, \"toString\"); // false\n\n",[30,2479,2480,2491,2499,2504,2508,2526],{"__ignoreMap":39},[43,2481,2482,2484,2487,2489],{"class":45,"line":46},[43,2483,50],{"class":49},[43,2485,2486],{"class":53}," person",[43,2488,57],{"class":49},[43,2490,1289],{"class":60},[43,2492,2493,2496],{"class":45,"line":77},[43,2494,2495],{"class":60},"  name: ",[43,2497,2498],{"class":64},"\"Zhenya\"\n",[43,2500,2501],{"class":45,"line":100},[43,2502,2503],{"class":60},"};\n",[43,2505,2506],{"class":45,"line":451},[43,2507,1254],{"emptyLinePlaceholder":1253},[43,2509,2510,2513,2516,2519,2522,2524],{"class":45,"line":693},[43,2511,2512],{"class":60},"Object.",[43,2514,2515],{"class":83},"hasOwn",[43,2517,2518],{"class":60},"(person, ",[43,2520,2521],{"class":64},"\"name\"",[43,2523,93],{"class":60},[43,2525,847],{"class":96},[43,2527,2528,2530,2532,2534,2537,2539],{"class":45,"line":1250},[43,2529,2512],{"class":60},[43,2531,2515],{"class":83},[43,2533,2518],{"class":60},[43,2535,2536],{"class":64},"\"toString\"",[43,2538,93],{"class":60},[43,2540,895],{"class":96},[21,2542,2543,2544],{},"проверяет, был ли вызван ",[30,2545,2546],{},"preventExtensions",[21,2548,2543,2549],{},[30,2550,2551],{},"seal",[21,2553,2543,2554],{},[30,2555,2556],{},"freeze",[16,2558,2560],{"id":2559},"keys-and-values","Ключи и значения",[21,2562,2563,2564,2566],{},"вернет ",[25,2565,2463],{}," свойства в виде массива",[34,2568,2570],{"className":36,"code":2569,"language":38,"meta":39,"style":39},"Object.entries({\n  name: 'Zhenya',\n  age: 27,\n}); // [['name', 'Zhenya'], ['age', 27]]\n\n",[30,2571,2572,2582,2591,2601],{"__ignoreMap":39},[43,2573,2574,2576,2579],{"class":45,"line":46},[43,2575,2512],{"class":60},[43,2577,2578],{"class":83},"entries",[43,2580,2581],{"class":60},"({\n",[43,2583,2584,2586,2589],{"class":45,"line":77},[43,2585,2495],{"class":60},[43,2587,2588],{"class":64},"'Zhenya'",[43,2590,2277],{"class":60},[43,2592,2593,2596,2599],{"class":45,"line":100},[43,2594,2595],{"class":60},"  age: ",[43,2597,2598],{"class":53},"27",[43,2600,2277],{"class":60},[43,2602,2603,2606],{"class":45,"line":451},[43,2604,2605],{"class":60},"}); ",[43,2607,2608],{"class":96},"// [['name', 'Zhenya'], ['age', 27]]\n",[21,2610,2611],{},"обратно превратит массив в объект",[34,2613,2615],{"className":36,"code":2614,"language":38,"meta":39,"style":39},"Object.fromEntries([['name', 'Zhenya'], ['age', 27]]); // { name: 'Zhenya', age: 27 }\n\n",[30,2616,2617],{"__ignoreMap":39},[43,2618,2619,2621,2624,2627,2630,2632,2634,2636,2639,2641,2643,2646],{"class":45,"line":46},[43,2620,2512],{"class":60},[43,2622,2623],{"class":83},"fromEntries",[43,2625,2626],{"class":60},"([[",[43,2628,2629],{"class":64},"'name'",[43,2631,68],{"class":60},[43,2633,2588],{"class":64},[43,2635,315],{"class":60},[43,2637,2638],{"class":64},"'age'",[43,2640,68],{"class":60},[43,2642,2598],{"class":53},[43,2644,2645],{"class":60},"]]); ",[43,2647,2648],{"class":96},"// { name: 'Zhenya', age: 27 }\n",[21,2650,2651],{},"по простому - получить массив ключей.\nВернет только собственные(без прототипа) и перечисляемые(for...in) свойства.",[34,2653,2655],{"className":36,"code":2654,"language":38,"meta":39,"style":39},"Object.keys({\n  name: 'Zhenya',\n  age: 27,\n}); // ['name', 'age']\n\n",[30,2656,2657,2666,2674,2682],{"__ignoreMap":39},[43,2658,2659,2661,2664],{"class":45,"line":46},[43,2660,2512],{"class":60},[43,2662,2663],{"class":83},"keys",[43,2665,2581],{"class":60},[43,2667,2668,2670,2672],{"class":45,"line":77},[43,2669,2495],{"class":60},[43,2671,2588],{"class":64},[43,2673,2277],{"class":60},[43,2675,2676,2678,2680],{"class":45,"line":100},[43,2677,2595],{"class":60},[43,2679,2598],{"class":53},[43,2681,2277],{"class":60},[43,2683,2684,2686],{"class":45,"line":451},[43,2685,2605],{"class":60},[43,2687,2688],{"class":96},"// ['name', 'age']\n",[21,2690,2691],{},"вернет массив значений",[34,2693,2695],{"className":36,"code":2694,"language":38,"meta":39,"style":39},"Object.values({\n  name: 'Zhenya',\n  age: 27,\n}); // ['Zhenya', 27]\n\n",[30,2696,2697,2706,2714,2722],{"__ignoreMap":39},[43,2698,2699,2701,2704],{"class":45,"line":46},[43,2700,2512],{"class":60},[43,2702,2703],{"class":83},"values",[43,2705,2581],{"class":60},[43,2707,2708,2710,2712],{"class":45,"line":77},[43,2709,2495],{"class":60},[43,2711,2588],{"class":64},[43,2713,2277],{"class":60},[43,2715,2716,2718,2720],{"class":45,"line":100},[43,2717,2595],{"class":60},[43,2719,2598],{"class":53},[43,2721,2277],{"class":60},[43,2723,2724,2726],{"class":45,"line":451},[43,2725,2605],{"class":60},[43,2727,2728],{"class":96},"// ['Zhenya', 27]\n",[11,2730,2732],{"id":2731},"functions","Function",[21,2734,2735,2736,2738],{},"вызывает функцию с указанным значением ",[30,2737,2374],{}," и аргументами.",[34,2740,2744],{"className":2741,"code":2742,"language":2743,"meta":39,"style":39},"language-ts shiki shiki-themes github-light github-dark","\nfunction multiply(a, b) {\n  this.logger(a * b);\n  return aa * b;\n}\n\nmultiply.call({ logger: console.log }, 2, 2); // 4\n\n// Мы не можем указать контекст для стрелочной функции\nconst addArrowFn = (a, b) => {\n  this.logger(a + b);\n  return a + b;\n};\n\nmultiply.call({ logger: console.log }, 2, 2); // TypeError: this.logger is not a function\n\n\n","ts",[30,2745,2746,2750,2768,2786,2798,2803,2807,2829,2833,2838,2862,2876,2886,2890,2894],{"__ignoreMap":39},[43,2747,2748],{"class":45,"line":46},[43,2749,1254],{"emptyLinePlaceholder":1253},[43,2751,2752,2754,2757,2759,2761,2763,2765],{"class":45,"line":77},[43,2753,2360],{"class":49},[43,2755,2756],{"class":83}," multiply",[43,2758,87],{"class":60},[43,2760,1549],{"class":703},[43,2762,68],{"class":60},[43,2764,1554],{"class":703},[43,2766,2767],{"class":60},") {\n",[43,2769,2770,2773,2775,2778,2781,2784],{"class":45,"line":100},[43,2771,2772],{"class":53},"  this",[43,2774,2110],{"class":60},[43,2776,2777],{"class":83},"logger",[43,2779,2780],{"class":60},"(a ",[43,2782,2783],{"class":49},"*",[43,2785,1708],{"class":60},[43,2787,2788,2790,2793,2795],{"class":45,"line":451},[43,2789,1295],{"class":49},[43,2791,2792],{"class":60}," aa ",[43,2794,2783],{"class":49},[43,2796,2797],{"class":60}," b;\n",[43,2799,2800],{"class":45,"line":693},[43,2801,2802],{"class":60},"}\n",[43,2804,2805],{"class":45,"line":1250},[43,2806,1254],{"emptyLinePlaceholder":1253},[43,2808,2809,2812,2815,2818,2820,2822,2824,2826],{"class":45,"line":1257},[43,2810,2811],{"class":60},"multiply.",[43,2813,2814],{"class":83},"call",[43,2816,2817],{"class":60},"({ logger: console.log }, ",[43,2819,407],{"class":53},[43,2821,68],{"class":60},[43,2823,407],{"class":53},[43,2825,93],{"class":60},[43,2827,2828],{"class":96},"// 4\n",[43,2830,2831],{"class":45,"line":1292},[43,2832,1254],{"emptyLinePlaceholder":1253},[43,2834,2835],{"class":45,"line":1307},[43,2836,2837],{"class":96},"// Мы не можем указать контекст для стрелочной функции\n",[43,2839,2840,2842,2845,2847,2850,2852,2854,2856,2858,2860],{"class":45,"line":1320},[43,2841,50],{"class":49},[43,2843,2844],{"class":83}," addArrowFn",[43,2846,57],{"class":49},[43,2848,2849],{"class":60}," (",[43,2851,1549],{"class":703},[43,2853,68],{"class":60},[43,2855,1554],{"class":703},[43,2857,374],{"class":60},[43,2859,1286],{"class":49},[43,2861,1289],{"class":60},[43,2863,2864,2866,2868,2870,2872,2874],{"class":45,"line":1325},[43,2865,2772],{"class":53},[43,2867,2110],{"class":60},[43,2869,2777],{"class":83},[43,2871,2780],{"class":60},[43,2873,1301],{"class":49},[43,2875,1708],{"class":60},[43,2877,2878,2880,2882,2884],{"class":45,"line":2345},[43,2879,1295],{"class":49},[43,2881,1561],{"class":60},[43,2883,1301],{"class":49},[43,2885,2797],{"class":60},[43,2887,2888],{"class":45,"line":2351},[43,2889,2503],{"class":60},[43,2891,2892],{"class":45,"line":2397},[43,2893,1254],{"emptyLinePlaceholder":1253},[43,2895,2896,2898,2900,2902,2904,2906,2908,2910],{"class":45,"line":2409},[43,2897,2811],{"class":60},[43,2899,2814],{"class":83},[43,2901,2817],{"class":60},[43,2903,407],{"class":53},[43,2905,68],{"class":60},[43,2907,407],{"class":53},[43,2909,93],{"class":60},[43,2911,2912],{"class":96},"// TypeError: this.logger is not a function\n",[21,2914,559,2915,2917],{},[30,2916,2814],{},", но аргументы передаются в виде массива",[34,2919,2921],{"className":2741,"code":2920,"language":2743,"meta":39,"style":39},"multiply.apply({ logger: console.log }, [2, 3]); // 6\n",[30,2922,2923],{"__ignoreMap":39},[43,2924,2925,2927,2930,2933,2935,2937,2939,2941],{"class":45,"line":46},[43,2926,2811],{"class":60},[43,2928,2929],{"class":83},"apply",[43,2931,2932],{"class":60},"({ logger: console.log }, [",[43,2934,407],{"class":53},[43,2936,68],{"class":60},[43,2938,443],{"class":53},[43,2940,321],{"class":60},[43,2942,2943],{"class":96},"// 6\n",[21,2945,2946,2947],{},"создает новую функцию, привязывая ей переданный ",[30,2948,2374],{},[34,2950,2952],{"className":2741,"code":2951,"language":2743,"meta":39,"style":39},"\nconst multiplyTwo = add.bind({ logger: console.log }, 2);\n\nmultiplyTwo(4); // 8\n\n",[30,2953,2954,2958,2979,2983],{"__ignoreMap":39},[43,2955,2956],{"class":45,"line":46},[43,2957,1254],{"emptyLinePlaceholder":1253},[43,2959,2960,2962,2965,2967,2970,2973,2975,2977],{"class":45,"line":77},[43,2961,50],{"class":49},[43,2963,2964],{"class":53}," multiplyTwo",[43,2966,57],{"class":49},[43,2968,2969],{"class":60}," add.",[43,2971,2972],{"class":83},"bind",[43,2974,2817],{"class":60},[43,2976,407],{"class":53},[43,2978,1836],{"class":60},[43,2980,2981],{"class":45,"line":100},[43,2982,1254],{"emptyLinePlaceholder":1253},[43,2984,2985,2988,2990,2992,2994],{"class":45,"line":451},[43,2986,2987],{"class":83},"multiplyTwo",[43,2989,87],{"class":60},[43,2991,1527],{"class":53},[43,2993,93],{"class":60},[43,2995,2996],{"class":96},"// 8\n",[2998,2999,3000],"style",{},"html pre.shiki code .szBVR, html code.shiki .szBVR{--shiki-default:#D73A49;--shiki-dark:#F97583}html pre.shiki code .sj4cs, html code.shiki .sj4cs{--shiki-default:#005CC5;--shiki-dark:#79B8FF}html pre.shiki code .sVt8B, html code.shiki .sVt8B{--shiki-default:#24292E;--shiki-dark:#E1E4E8}html pre.shiki code .sZZnC, html code.shiki .sZZnC{--shiki-default:#032F62;--shiki-dark:#9ECBFF}html pre.shiki code .sScJk, html code.shiki .sScJk{--shiki-default:#6F42C1;--shiki-dark:#B392F0}html pre.shiki code .sJ8bj, html code.shiki .sJ8bj{--shiki-default:#6A737D;--shiki-dark:#6A737D}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html pre.shiki code .s4XuR, html code.shiki .s4XuR{--shiki-default:#E36209;--shiki-dark:#FFAB70}",{"title":39,"searchDepth":77,"depth":77,"links":3002},[3003,3010,3015],{"id":13,"depth":77,"text":14,"children":3004},[3005,3006,3007,3008,3009],{"id":18,"depth":100,"text":19},{"id":630,"depth":100,"text":631},{"id":963,"depth":100,"text":964},{"id":1505,"depth":100,"text":1506},{"id":1729,"depth":100,"text":1730},{"id":2210,"depth":77,"text":2211,"children":3011},[3012,3013,3014],{"id":2214,"depth":100,"text":2215},{"id":2456,"depth":100,"text":2457},{"id":2559,"depth":100,"text":2560},{"id":2731,"depth":77,"text":2732},"2024-02-26","Методы массивов, объектов и функций, которые полезно знать","md",{},"/blog/js-built-in-methods","/images/js-methods-preview.jpg",{"title":6,"description":3017},"blog/js-built-in-methods",[3025,3026,3027],"javascript","cheatsheet","interview","_bGMRXaznUGP2MjaGbSPahHCUXjfLaUYUdPN_3-xtjY",1751114697171]