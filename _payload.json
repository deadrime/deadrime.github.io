[{"data":1,"prerenderedAt":10427},["ShallowReactive",2],{"latestArticles":3},{"articles":4,"totalCount":203},[5,1557,7490],{"id":6,"title":7,"body":8,"date":1545,"description":1546,"extension":1547,"meta":1548,"navigation":206,"path":1549,"previewImg":1550,"seo":1551,"stem":1552,"topics":1553,"__hash__":1556},"articles/blog/advanced-css.md","Шпаргалка по CSS",{"type":9,"value":10,"toc":1534},"minimark",[11,16,29,34,44,55,59,62,88,91,99,135,151,331,335,338,375,382,398,458,463,554,708,711,802,806,812,821,865,869,1054,1058,1061,1088,1091,1229,1389,1406,1497,1501,1504,1530],[12,13,15],"h2",{"id":14},"array","Единицы измерения",[17,18,19,20,24,25,28],"p",{},"Помимо стандартных ",[21,22,23],"code",{},"px"," и ",[21,26,27],{},"%"," существует 1001 способ задать размер элементам.",[30,31,33],"h3",{"id":32},"font-based","Зависящие от размера шрифта",[17,35,36,39,40,43],{},[21,37,38],{},"em"," - зависит от ",[21,41,42],{},"font-size"," дочернего элемента",[17,45,46,39,49,51,52],{},[21,47,48],{},"rem",[21,50,42],{}," элемента ",[21,53,54],{},"html",[30,56,58],{"id":57},"screen-based","Относительно экрана (viewport-а)",[17,60,61],{},"Появились в первую очередь для мобилок",[63,64,65,72,78],"ul",{},[66,67,68,71],"li",{},[21,69,70],{},"vw"," - viewport width, % от ширины окна браузера.",[66,73,74,77],{},[21,75,76],{},"vh"," - viewport height, % от высоты окна браузера",[66,79,80,83,84,87],{},[21,81,82],{},"vmin",", ",[21,85,86],{},"vmax"," - для мобилок, % от меньшей/большей размерности вьюпорта вне зависимости от ориентации",[17,89,90],{},"Проблемы - не учитываются размеры элементов браузера, например адресная строка в safari или клавиатура",[17,92,93,94,98],{},"Чтобы решить эти проблемы - придумали ",[95,96,97],"del",{},"новый костыль"," модификаторы:",[63,100,101,107,113,119,125],{},[66,102,103,106],{},[21,104,105],{},"svh"," - small viewport height, представляет высоту области просмотра, когда пользовательский интерфейс адресной строки еще не уменьшил свой размер. svh отвечает за то содержимое страницы, которое вы будете видеть, когда интерфейс адресной строки растянут до максимума.",[66,108,109,112],{},[21,110,111],{},"lvh"," - large viewport height, представляет высоту области просмотра после того, как пользовательский интерфейс адресной строки уменьшил свой размер. lvh отвечает за то содержимое страницы, когда пользовательский интерфейс сжат до минимума.",[66,114,115,118],{},[21,116,117],{},"dvh"," - dynamic viewport height - использует любое из значений svh или lvh в зависимости от того, уменьшен ли интерфейс адресной строки. dvh просчитывает переходные состояния между максимальным и минимальным размером UI в браузере.",[66,120,121,124],{},[21,122,123],{},"svw, lvw, dvw"," - такая же история для ширины области просмотра",[66,126,127,130,131,83,133],{},[21,128,129],{},"svmin, lvmin, dvmin"," - аналог ",[21,132,82],{},[21,134,86],{},[17,136,137,138,141,142,141,145,141,148],{},"Однако классическую проблему со скроллбаром новые единицы так и не решили -\n",[21,139,140],{},"100svw"," = ",[21,143,144],{},"100dvw",[21,146,147],{},"100lvw",[21,149,150],{},"100vw",[152,153,155,247,250],"accordion",{"summary":154},"Решение проблемы со скроллбаром",[156,157,162],"pre",{"className":158,"code":159,"language":160,"meta":161,"style":161},"language-css shiki shiki-themes github-light github-dark","html,\nbody {\n  scrollbar-gutter: stable;\n}\n\n/* 100vw не вызовет появление горизонтального скролла */\n.full-width {\n  width: 100vw;\n}\n","css","",[21,163,164,176,185,195,201,208,215,224,242],{"__ignoreMap":161},[165,166,169,172],"span",{"class":167,"line":168},"line",1,[165,170,54],{"class":171},"s9eBZ",[165,173,175],{"class":174},"sVt8B",",\n",[165,177,179,182],{"class":167,"line":178},2,[165,180,181],{"class":171},"body",[165,183,184],{"class":174}," {\n",[165,186,188,192],{"class":167,"line":187},3,[165,189,191],{"class":190},"sj4cs","  scrollbar-gutter",[165,193,194],{"class":174},": stable;\n",[165,196,198],{"class":167,"line":197},4,[165,199,200],{"class":174},"}\n",[165,202,204],{"class":167,"line":203},5,[165,205,207],{"emptyLinePlaceholder":206},true,"\n",[165,209,211],{"class":167,"line":210},6,[165,212,214],{"class":213},"sJ8bj","/* 100vw не вызовет появление горизонтального скролла */\n",[165,216,218,222],{"class":167,"line":217},7,[165,219,221],{"class":220},"sScJk",".full-width",[165,223,184],{"class":174},[165,225,227,230,233,236,239],{"class":167,"line":226},8,[165,228,229],{"class":190},"  width",[165,231,232],{"class":174},": ",[165,234,235],{"class":190},"100",[165,237,70],{"class":238},"szBVR",[165,240,241],{"class":174},";\n",[165,243,245],{"class":167,"line":244},9,[165,246,200],{"class":174},[17,248,249],{},"либо",[156,251,253],{"className":158,"code":252,"language":160,"meta":161,"style":161},"body {\n  margin: 0;\n  container-type: inline-size;\n}\n\n.full-width {\n  width: 100vw; /* fallback for older browsers */\n  width: 100cqw; /* 100cqw учитывет сколлбар */\n}\n",[21,254,255,261,273,281,285,289,295,311,327],{"__ignoreMap":161},[165,256,257,259],{"class":167,"line":168},[165,258,181],{"class":171},[165,260,184],{"class":174},[165,262,263,266,268,271],{"class":167,"line":178},[165,264,265],{"class":190},"  margin",[165,267,232],{"class":174},[165,269,270],{"class":190},"0",[165,272,241],{"class":174},[165,274,275,278],{"class":167,"line":187},[165,276,277],{"class":190},"  container-type",[165,279,280],{"class":174},": inline-size;\n",[165,282,283],{"class":167,"line":197},[165,284,200],{"class":174},[165,286,287],{"class":167,"line":203},[165,288,207],{"emptyLinePlaceholder":206},[165,290,291,293],{"class":167,"line":210},[165,292,221],{"class":220},[165,294,184],{"class":174},[165,296,297,299,301,303,305,308],{"class":167,"line":217},[165,298,229],{"class":190},[165,300,232],{"class":174},[165,302,235],{"class":190},[165,304,70],{"class":238},[165,306,307],{"class":174},"; ",[165,309,310],{"class":213},"/* fallback for older browsers */\n",[165,312,313,315,317,319,322,324],{"class":167,"line":226},[165,314,229],{"class":190},[165,316,232],{"class":174},[165,318,235],{"class":190},[165,320,321],{"class":238},"cqw",[165,323,307],{"class":174},[165,325,326],{"class":213},"/* 100cqw учитывет сколлбар */\n",[165,328,329],{"class":167,"line":244},[165,330,200],{"class":174},[30,332,334],{"id":333},"container-based","Зависящие от размера блока",[17,336,337],{},"Можно использовать единицы измерения, которые будут зависить от размера блока",[63,339,340,345,351,357,363,369],{},[66,341,342,344],{},[21,343,321],{},": 1% of a query container's width",[66,346,347,350],{},[21,348,349],{},"cqh",": 1% of a query container's height",[66,352,353,356],{},[21,354,355],{},"cqi",": 1% of a query container's inline size",[66,358,359,362],{},[21,360,361],{},"cqb",": 1% of a query container's block size",[66,364,365,368],{},[21,366,367],{},"cqmin",": The smaller value of either cqi or cqb",[66,370,371,374],{},[21,372,373],{},"cqmax",": The larger value of either cqi or cqb",[17,376,377,378,381],{},"Чтобы использовать эти единицы измерения, нужно задать ",[21,379,380],{},"container-type"," у родительского контейнера:",[152,383,385,386,393,394],{"summary":384},"Объяснение container-type","  ",[387,388],"img",{"className":389,"src":392},[390,391],"w-full","max-w-lg","https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_logical_properties_and_values/Basic_concepts_of_logical_properties_and_values/mdn-horizontal.png","\n  ",[387,395],{"className":396,"src":397},[390,391],"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_logical_properties_and_values/Basic_concepts_of_logical_properties_and_values/mdn-vertical.png",[156,399,401],{"className":158,"code":400,"language":160,"meta":161,"style":161},".container {\n  container-type: inline-size;\n  container-name: card;\n}\n\n.container-child {\n  width: 100cqw; /* всегда будет того же размера, что и my-container */\n}\n",[21,402,403,410,416,424,428,432,439,454],{"__ignoreMap":161},[165,404,405,408],{"class":167,"line":168},[165,406,407],{"class":220},".container",[165,409,184],{"class":174},[165,411,412,414],{"class":167,"line":178},[165,413,277],{"class":190},[165,415,280],{"class":174},[165,417,418,421],{"class":167,"line":187},[165,419,420],{"class":190},"  container-name",[165,422,423],{"class":174},": card;\n",[165,425,426],{"class":167,"line":197},[165,427,200],{"class":174},[165,429,430],{"class":167,"line":203},[165,431,207],{"emptyLinePlaceholder":206},[165,433,434,437],{"class":167,"line":210},[165,435,436],{"class":220},".container-child",[165,438,184],{"class":174},[165,440,441,443,445,447,449,451],{"class":167,"line":217},[165,442,229],{"class":190},[165,444,232],{"class":174},[165,446,235],{"class":190},[165,448,321],{"class":238},[165,450,307],{"class":174},[165,452,453],{"class":213},"/* всегда будет того же размера, что и my-container */\n",[165,455,456],{"class":167,"line":226},[165,457,200],{"class":174},[17,459,460,462],{},[21,461,321],{}," всегда зависит от ширины контейнера, даже если есть вложенность.",[156,464,467],{"className":465,"code":466,"language":54,"meta":161,"style":161},"language-html shiki shiki-themes github-light github-dark","\u003Cdiv className=\"container\">\n  \u003Cdiv className=\"container-inner\">\n    \u003Cdiv className=\"container-child\">\n      Hi\n    \u003C/div>\n  \u003C/div>\n\u003C/div>\n",[21,468,469,490,506,522,527,536,545],{"__ignoreMap":161},[165,470,471,474,477,480,483,487],{"class":167,"line":168},[165,472,473],{"class":174},"\u003C",[165,475,476],{"class":171},"div",[165,478,479],{"class":220}," className",[165,481,482],{"class":174},"=",[165,484,486],{"class":485},"sZZnC","\"container\"",[165,488,489],{"class":174},">\n",[165,491,492,495,497,499,501,504],{"class":167,"line":178},[165,493,494],{"class":174},"  \u003C",[165,496,476],{"class":171},[165,498,479],{"class":220},[165,500,482],{"class":174},[165,502,503],{"class":485},"\"container-inner\"",[165,505,489],{"class":174},[165,507,508,511,513,515,517,520],{"class":167,"line":187},[165,509,510],{"class":174},"    \u003C",[165,512,476],{"class":171},[165,514,479],{"class":220},[165,516,482],{"class":174},[165,518,519],{"class":485},"\"container-child\"",[165,521,489],{"class":174},[165,523,524],{"class":167,"line":197},[165,525,526],{"class":174},"      Hi\n",[165,528,529,532,534],{"class":167,"line":203},[165,530,531],{"class":174},"    \u003C/",[165,533,476],{"class":171},[165,535,489],{"class":174},[165,537,538,541,543],{"class":167,"line":210},[165,539,540],{"class":174},"  \u003C/",[165,542,476],{"class":171},[165,544,489],{"class":174},[165,546,547,550,552],{"class":167,"line":217},[165,548,549],{"class":174},"\u003C/",[165,551,476],{"class":171},[165,553,489],{"class":174},[156,555,557],{"className":158,"code":556,"language":160,"meta":161,"style":161},".container {\n  width: 400px;\n  height: 400px;\n  background: blueviolet;\n  container-type: inline-size;\n  container-name: card;\n}\n\n.container-inner {\n  width: 300px;\n}\n\n.container-child {\n  width: 100cqw; /* 400px, а не 300px */\n  height: 40px;\n  background: red;\n}\n",[21,558,559,565,578,591,603,609,615,619,623,630,644,649,654,661,677,691,703],{"__ignoreMap":161},[165,560,561,563],{"class":167,"line":168},[165,562,407],{"class":220},[165,564,184],{"class":174},[165,566,567,569,571,574,576],{"class":167,"line":178},[165,568,229],{"class":190},[165,570,232],{"class":174},[165,572,573],{"class":190},"400",[165,575,23],{"class":238},[165,577,241],{"class":174},[165,579,580,583,585,587,589],{"class":167,"line":187},[165,581,582],{"class":190},"  height",[165,584,232],{"class":174},[165,586,573],{"class":190},[165,588,23],{"class":238},[165,590,241],{"class":174},[165,592,593,596,598,601],{"class":167,"line":197},[165,594,595],{"class":190},"  background",[165,597,232],{"class":174},[165,599,600],{"class":190},"blueviolet",[165,602,241],{"class":174},[165,604,605,607],{"class":167,"line":203},[165,606,277],{"class":190},[165,608,280],{"class":174},[165,610,611,613],{"class":167,"line":210},[165,612,420],{"class":190},[165,614,423],{"class":174},[165,616,617],{"class":167,"line":217},[165,618,200],{"class":174},[165,620,621],{"class":167,"line":226},[165,622,207],{"emptyLinePlaceholder":206},[165,624,625,628],{"class":167,"line":244},[165,626,627],{"class":220},".container-inner",[165,629,184],{"class":174},[165,631,633,635,637,640,642],{"class":167,"line":632},10,[165,634,229],{"class":190},[165,636,232],{"class":174},[165,638,639],{"class":190},"300",[165,641,23],{"class":238},[165,643,241],{"class":174},[165,645,647],{"class":167,"line":646},11,[165,648,200],{"class":174},[165,650,652],{"class":167,"line":651},12,[165,653,207],{"emptyLinePlaceholder":206},[165,655,657,659],{"class":167,"line":656},13,[165,658,436],{"class":220},[165,660,184],{"class":174},[165,662,664,666,668,670,672,674],{"class":167,"line":663},14,[165,665,229],{"class":190},[165,667,232],{"class":174},[165,669,235],{"class":190},[165,671,321],{"class":238},[165,673,307],{"class":174},[165,675,676],{"class":213},"/* 400px, а не 300px */\n",[165,678,680,682,684,687,689],{"class":167,"line":679},15,[165,681,582],{"class":190},[165,683,232],{"class":174},[165,685,686],{"class":190},"40",[165,688,23],{"class":238},[165,690,241],{"class":174},[165,692,694,696,698,701],{"class":167,"line":693},16,[165,695,595],{"class":190},[165,697,232],{"class":174},[165,699,700],{"class":190},"red",[165,702,241],{"class":174},[165,704,706],{"class":167,"line":705},17,[165,707,200],{"class":174},[17,709,710],{},"Можно использовать в медиазапросах:",[156,712,714],{"className":158,"code":713,"language":160,"meta":161,"style":161},"@container (min-width: 400px) { /* Если ширина ближайшего контейнера больше 400px */\n  .card h2 {\n    font-size: 2em;\n  }\n}\n\n@container card (min-width: 400px) { /* Если ширина контейнера с именем card больше 400px */\n  .card h2 {\n    font-size: 2em;\n  }\n}\n",[21,715,716,727,737,751,756,760,764,774,782,794,798],{"__ignoreMap":161},[165,717,718,721,724],{"class":167,"line":168},[165,719,720],{"class":238},"@container",[165,722,723],{"class":174}," (min-width: 400px) { ",[165,725,726],{"class":213},"/* Если ширина ближайшего контейнера больше 400px */\n",[165,728,729,732,735],{"class":167,"line":178},[165,730,731],{"class":220},"  .card",[165,733,734],{"class":171}," h2",[165,736,184],{"class":174},[165,738,739,742,744,747,749],{"class":167,"line":187},[165,740,741],{"class":190},"    font-size",[165,743,232],{"class":174},[165,745,746],{"class":190},"2",[165,748,38],{"class":238},[165,750,241],{"class":174},[165,752,753],{"class":167,"line":197},[165,754,755],{"class":174},"  }\n",[165,757,758],{"class":167,"line":203},[165,759,200],{"class":174},[165,761,762],{"class":167,"line":210},[165,763,207],{"emptyLinePlaceholder":206},[165,765,766,768,771],{"class":167,"line":217},[165,767,720],{"class":238},[165,769,770],{"class":174}," card (min-width: 400px) { ",[165,772,773],{"class":213},"/* Если ширина контейнера с именем card больше 400px */\n",[165,775,776,778,780],{"class":167,"line":226},[165,777,731],{"class":220},[165,779,734],{"class":171},[165,781,184],{"class":174},[165,783,784,786,788,790,792],{"class":167,"line":244},[165,785,741],{"class":190},[165,787,232],{"class":174},[165,789,746],{"class":190},[165,791,38],{"class":238},[165,793,241],{"class":174},[165,795,796],{"class":167,"line":632},[165,797,755],{"class":174},[165,799,800],{"class":167,"line":646},[165,801,200],{"class":174},[30,803,805],{"id":804},"aspect-ratio-based","Зависящие от соотношения сторон",[17,807,808,811],{},[21,809,810],{},"aspect-ratio"," - соотношение ширины к высоте, например 1 / 1 - квадрат, а 16 / 9 - прямоугольник",[17,813,814,815,83,818],{},"Можно использовать в медиазапросах, для этого есть ",[21,816,817],{},"min-aspect-ratio",[21,819,820],{},"max-aspect-ratio",[156,822,824],{"className":158,"code":823,"language":160,"meta":161,"style":161},"@media screen and (min-aspect-ratio: 16/10) {\n  /* something for wide screens */\n}\n",[21,825,826,856,861],{"__ignoreMap":161},[165,827,828,831,834,837,840,842,844,847,850,853],{"class":167,"line":168},[165,829,830],{"class":238},"@media",[165,832,833],{"class":190}," screen",[165,835,836],{"class":238}," and",[165,838,839],{"class":174}," (",[165,841,817],{"class":190},[165,843,232],{"class":174},[165,845,846],{"class":190},"16",[165,848,849],{"class":238},"/",[165,851,852],{"class":190},"10",[165,854,855],{"class":174},") {\n",[165,857,858],{"class":167,"line":178},[165,859,860],{"class":213},"  /* something for wide screens */\n",[165,862,863],{"class":167,"line":187},[165,864,200],{"class":174},[12,866,868],{"id":867},"selectors","Селекторы",[156,870,872],{"className":158,"code":871,"language":160,"meta":161,"style":161},"/* По id */\n#foo {}\n\n/* По классу */\n.bar {}\n\n/* По наличию аттрибута */\n.input[type]\n\n/* По значению аттрибута */\n.input[type=\"submit\"]\n\n/* Потомок с классом .bar  внетри элемента с классом .foo */\n.foo .bar {}\n\n/* Элемент с классом .foo И классом .bar */\n.foo.bar {}\n\n/* Непосредственная вложенность - .bar может быть только на первом уровне вложенности */\n.foo > .bar {}\n\n/* Стили для .bar, если он расположен сразу после .foo (сосед) */\n.foo + .bar {}\n\n/* Стили для любого .bar, если он расположен после .foo (но не обязательно сосед)*/\n.foo ~ .bar {}\n",[21,873,874,879,887,891,896,903,907,912,926,930,935,950,954,959,969,973,978,985,990,996,1008,1013,1019,1031,1036,1042],{"__ignoreMap":161},[165,875,876],{"class":167,"line":168},[165,877,878],{"class":213},"/* По id */\n",[165,880,881,884],{"class":167,"line":178},[165,882,883],{"class":220},"#foo",[165,885,886],{"class":174}," {}\n",[165,888,889],{"class":167,"line":187},[165,890,207],{"emptyLinePlaceholder":206},[165,892,893],{"class":167,"line":197},[165,894,895],{"class":213},"/* По классу */\n",[165,897,898,901],{"class":167,"line":203},[165,899,900],{"class":220},".bar",[165,902,886],{"class":174},[165,904,905],{"class":167,"line":210},[165,906,207],{"emptyLinePlaceholder":206},[165,908,909],{"class":167,"line":217},[165,910,911],{"class":213},"/* По наличию аттрибута */\n",[165,913,914,917,920,923],{"class":167,"line":226},[165,915,916],{"class":220},".input",[165,918,919],{"class":174},"[",[165,921,922],{"class":220},"type",[165,924,925],{"class":174},"]\n",[165,927,928],{"class":167,"line":244},[165,929,207],{"emptyLinePlaceholder":206},[165,931,932],{"class":167,"line":632},[165,933,934],{"class":213},"/* По значению аттрибута */\n",[165,936,937,939,941,943,945,948],{"class":167,"line":646},[165,938,916],{"class":220},[165,940,919],{"class":174},[165,942,922],{"class":220},[165,944,482],{"class":238},[165,946,947],{"class":485},"\"submit\"",[165,949,925],{"class":174},[165,951,952],{"class":167,"line":651},[165,953,207],{"emptyLinePlaceholder":206},[165,955,956],{"class":167,"line":656},[165,957,958],{"class":213},"/* Потомок с классом .bar  внетри элемента с классом .foo */\n",[165,960,961,964,967],{"class":167,"line":663},[165,962,963],{"class":220},".foo",[165,965,966],{"class":220}," .bar",[165,968,886],{"class":174},[165,970,971],{"class":167,"line":679},[165,972,207],{"emptyLinePlaceholder":206},[165,974,975],{"class":167,"line":693},[165,976,977],{"class":213},"/* Элемент с классом .foo И классом .bar */\n",[165,979,980,983],{"class":167,"line":705},[165,981,982],{"class":220},".foo.bar",[165,984,886],{"class":174},[165,986,988],{"class":167,"line":987},18,[165,989,207],{"emptyLinePlaceholder":206},[165,991,993],{"class":167,"line":992},19,[165,994,995],{"class":213},"/* Непосредственная вложенность - .bar может быть только на первом уровне вложенности */\n",[165,997,999,1001,1004,1006],{"class":167,"line":998},20,[165,1000,963],{"class":220},[165,1002,1003],{"class":238}," >",[165,1005,966],{"class":220},[165,1007,886],{"class":174},[165,1009,1011],{"class":167,"line":1010},21,[165,1012,207],{"emptyLinePlaceholder":206},[165,1014,1016],{"class":167,"line":1015},22,[165,1017,1018],{"class":213},"/* Стили для .bar, если он расположен сразу после .foo (сосед) */\n",[165,1020,1022,1024,1027,1029],{"class":167,"line":1021},23,[165,1023,963],{"class":220},[165,1025,1026],{"class":238}," +",[165,1028,966],{"class":220},[165,1030,886],{"class":174},[165,1032,1034],{"class":167,"line":1033},24,[165,1035,207],{"emptyLinePlaceholder":206},[165,1037,1039],{"class":167,"line":1038},25,[165,1040,1041],{"class":213},"/* Стили для любого .bar, если он расположен после .foo (но не обязательно сосед)*/\n",[165,1043,1045,1047,1050,1052],{"class":167,"line":1044},26,[165,1046,963],{"class":220},[165,1048,1049],{"class":238}," ~",[165,1051,966],{"class":220},[165,1053,886],{"class":174},[12,1055,1057],{"id":1056},"pseudo-classes","Псевдоклассы",[17,1059,1060],{},"Псевдокласс - ключевое слово, добавленное к селектору для уточнения его состояния.",[156,1062,1064],{"className":158,"code":1063,"language":160,"meta":161,"style":161},"selector:pseudo-class {\n  property: value;\n}\n",[21,1065,1066,1076,1084],{"__ignoreMap":161},[165,1067,1068,1071,1074],{"class":167,"line":168},[165,1069,1070],{"class":174},"selector:",[165,1072,1073],{"class":171},"pseudo-class",[165,1075,184],{"class":174},[165,1077,1078,1081],{"class":167,"line":178},[165,1079,1080],{"class":190},"  property",[165,1082,1083],{"class":174},": value;\n",[165,1085,1086],{"class":167,"line":187},[165,1087,200],{"class":174},[17,1089,1090],{},"Самые полезные:",[63,1092,1093,1099,1105,1111,1117,1137,1143,1153,1159,1167,1173,1181,1187,1193,1199,1205,1217,1223],{},[66,1094,1095,1098],{},[21,1096,1097],{},":hover"," - при наведении",[66,1100,1101,1104],{},[21,1102,1103],{},":focus"," - при фокусе (tab)",[66,1106,1107,1110],{},[21,1108,1109],{},":focus-within"," - при фокусе этого элемента или его детей",[66,1112,1113,1116],{},[21,1114,1115],{},":active"," - при активации, например при зажатии ЛКМ",[66,1118,1119,1122,1123,83,1126,1129,1130,1133,1134],{},[21,1120,1121],{},":checked"," - для выбранных ",[21,1124,1125],{},"\u003Cinput type=\"radio\">",[21,1127,1128],{},"\u003Cinput type=\"checkbox\">"," или ",[21,1131,1132],{},"\u003Coption>"," внутри ",[21,1135,1136],{},"\u003Cselect>",[66,1138,1139,1142],{},[21,1140,1141],{},":disabled"," - для кнопок",[66,1144,1145,1148,1149,1152],{},[21,1146,1147],{},":empty"," - когда у элемент пуст (нет children), можно применить ",[21,1150,1151],{},".element:empty { display: none }"," вместо условного рендеринга",[66,1154,1155,1158],{},[21,1156,1157],{},":first-child"," - первый ребенок своего родителя",[66,1160,1161,1164,1165],{},[21,1162,1163],{},":first-of-type"," - первый ребенок такого типа, например первый ",[21,1166,476],{},[66,1168,1169,1172],{},[21,1170,1171],{},":last-child"," - последний ребенок своего родителя",[66,1174,1175,1178,1179],{},[21,1176,1177],{},":last-of-type"," - последний ребенок такого типа, например последний ",[21,1180,476],{},[66,1182,1183,1186],{},[21,1184,1185],{},":nth-child()"," - какой-то конкетный ребенок (1-й, второй, третий, четный, нечетный)",[66,1188,1189,1192],{},[21,1190,1191],{},":nth-of-type()"," - какой-то конкетный элемент такого типа",[66,1194,1195,1198],{},[21,1196,1197],{},":only-child"," - единственный ребенок",[66,1200,1201,1204],{},[21,1202,1203],{},":only-of-type"," - единственный элемент такого типа",[66,1206,1207,83,1210,83,1213,1216],{},[21,1208,1209],{},":valid",[21,1211,1212],{},":optional",[21,1214,1215],{},":required"," - для валидации форм",[66,1218,1219,1222],{},[21,1220,1221],{},":visited"," - для посещенных ссылок, рудимент если честно",[66,1224,1225,1228],{},[21,1226,1227],{},":is()"," - позволяет проще писать сложный CSS",[156,1230,1232],{"className":158,"code":1231,"language":160,"meta":161,"style":161},".card h1,\n.card h2,\n.card h3 {\n  color: black;\n}\n\n.card :is(h1, h2, h3) {\n  color: black;\n}\n\na:hover,\na:focus {\n  color: purple;\n}\n\na:is(:hover, :focus) {\n  color: purple;\n}\n\n",[21,1233,1234,1244,1252,1261,1273,1277,1281,1304,1314,1318,1322,1331,1339,1350,1354,1358,1375,1385],{"__ignoreMap":161},[165,1235,1236,1239,1242],{"class":167,"line":168},[165,1237,1238],{"class":220},".card",[165,1240,1241],{"class":171}," h1",[165,1243,175],{"class":174},[165,1245,1246,1248,1250],{"class":167,"line":178},[165,1247,1238],{"class":220},[165,1249,734],{"class":171},[165,1251,175],{"class":174},[165,1253,1254,1256,1259],{"class":167,"line":187},[165,1255,1238],{"class":220},[165,1257,1258],{"class":171}," h3",[165,1260,184],{"class":174},[165,1262,1263,1266,1268,1271],{"class":167,"line":197},[165,1264,1265],{"class":190},"  color",[165,1267,232],{"class":174},[165,1269,1270],{"class":190},"black",[165,1272,241],{"class":174},[165,1274,1275],{"class":167,"line":203},[165,1276,200],{"class":174},[165,1278,1279],{"class":167,"line":210},[165,1280,207],{"emptyLinePlaceholder":206},[165,1282,1283,1285,1288,1291,1294,1296,1298,1300,1302],{"class":167,"line":217},[165,1284,1238],{"class":220},[165,1286,1287],{"class":220}," :is",[165,1289,1290],{"class":174},"(",[165,1292,1293],{"class":171},"h1",[165,1295,83],{"class":174},[165,1297,12],{"class":171},[165,1299,83],{"class":174},[165,1301,30],{"class":171},[165,1303,855],{"class":174},[165,1305,1306,1308,1310,1312],{"class":167,"line":226},[165,1307,1265],{"class":190},[165,1309,232],{"class":174},[165,1311,1270],{"class":190},[165,1313,241],{"class":174},[165,1315,1316],{"class":167,"line":244},[165,1317,200],{"class":174},[165,1319,1320],{"class":167,"line":632},[165,1321,207],{"emptyLinePlaceholder":206},[165,1323,1324,1327,1329],{"class":167,"line":646},[165,1325,1326],{"class":171},"a",[165,1328,1097],{"class":220},[165,1330,175],{"class":174},[165,1332,1333,1335,1337],{"class":167,"line":651},[165,1334,1326],{"class":171},[165,1336,1103],{"class":220},[165,1338,184],{"class":174},[165,1340,1341,1343,1345,1348],{"class":167,"line":656},[165,1342,1265],{"class":190},[165,1344,232],{"class":174},[165,1346,1347],{"class":190},"purple",[165,1349,241],{"class":174},[165,1351,1352],{"class":167,"line":663},[165,1353,200],{"class":174},[165,1355,1356],{"class":167,"line":679},[165,1357,207],{"emptyLinePlaceholder":206},[165,1359,1360,1362,1365,1367,1369,1371,1373],{"class":167,"line":693},[165,1361,1326],{"class":171},[165,1363,1364],{"class":220},":is",[165,1366,1290],{"class":174},[165,1368,1097],{"class":220},[165,1370,83],{"class":174},[165,1372,1103],{"class":220},[165,1374,855],{"class":174},[165,1376,1377,1379,1381,1383],{"class":167,"line":705},[165,1378,1265],{"class":190},[165,1380,232],{"class":174},[165,1382,1347],{"class":190},[165,1384,241],{"class":174},[165,1386,1387],{"class":167,"line":987},[165,1388,200],{"class":174},[63,1390,1391,1400],{},[66,1392,1393,1396,1397,1399],{},[21,1394,1395],{},":where()"," похож на ",[21,1398,1364],{},", но позволяет убить специфичность, идеально для reset",[66,1401,1402,1405],{},[21,1403,1404],{},":has()"," - позволяет проверить наличие у родителя наличие какого-то селектора внутри и выбрать именно родителя",[156,1407,1409],{"className":158,"code":1408,"language":160,"meta":161,"style":161},"/* Если в форме есть невалидный инпут - красим submit кнопку в красный  */\n.my-form:has(input:invalid) button[type=\"submit\"]{\n  background: red;\n}\n\n/*  Если есть открытая модалка - меняем цвет фона */\nhtml:has(.modal.open) {\n  background: red;\n}\n",[21,1410,1411,1416,1446,1456,1460,1464,1469,1483,1493],{"__ignoreMap":161},[165,1412,1413],{"class":167,"line":168},[165,1414,1415],{"class":213},"/* Если в форме есть невалидный инпут - красим submit кнопку в красный  */\n",[165,1417,1418,1421,1423,1426,1429,1432,1435,1437,1439,1441,1443],{"class":167,"line":178},[165,1419,1420],{"class":220},".my-form:has",[165,1422,1290],{"class":174},[165,1424,1425],{"class":171},"input",[165,1427,1428],{"class":220},":invalid",[165,1430,1431],{"class":174},") ",[165,1433,1434],{"class":171},"button",[165,1436,919],{"class":174},[165,1438,922],{"class":220},[165,1440,482],{"class":238},[165,1442,947],{"class":485},[165,1444,1445],{"class":174},"]{\n",[165,1447,1448,1450,1452,1454],{"class":167,"line":187},[165,1449,595],{"class":190},[165,1451,232],{"class":174},[165,1453,700],{"class":190},[165,1455,241],{"class":174},[165,1457,1458],{"class":167,"line":197},[165,1459,200],{"class":174},[165,1461,1462],{"class":167,"line":203},[165,1463,207],{"emptyLinePlaceholder":206},[165,1465,1466],{"class":167,"line":210},[165,1467,1468],{"class":213},"/*  Если есть открытая модалка - меняем цвет фона */\n",[165,1470,1471,1473,1476,1478,1481],{"class":167,"line":217},[165,1472,54],{"class":171},[165,1474,1475],{"class":220},":has",[165,1477,1290],{"class":174},[165,1479,1480],{"class":220},".modal.open",[165,1482,855],{"class":174},[165,1484,1485,1487,1489,1491],{"class":167,"line":226},[165,1486,595],{"class":190},[165,1488,232],{"class":174},[165,1490,700],{"class":190},[165,1492,241],{"class":174},[165,1494,1495],{"class":167,"line":244},[165,1496,200],{"class":174},[12,1498,1500],{"id":1499},"pseudo-elements","Псевдоэлементы",[17,1502,1503],{},"Псевдоэлементы не существуют в HTML разметке, они создаются только с помощью CSS,\nих нельзя создать, выбрать(querySelector-ом) и менять при помощи JS.",[63,1505,1506,1512,1518,1524],{},[66,1507,1508,1511],{},[21,1509,1510],{},"::after"," - добавить какой-то контент после элемента (создать псевдоэлемент, который является последним потомком)",[66,1513,1514,1517],{},[21,1515,1516],{},"::before"," - до (создать псевдоэлемент, который будет первым потомком)",[66,1519,1520,1523],{},[21,1521,1522],{},"::first-letter"," - стилизовать первую букву",[66,1525,1526,1529],{},[21,1527,1528],{},"::first-line"," - стилизовать первую линию",[1531,1532,1533],"style",{},"html pre.shiki code .s9eBZ, html code.shiki .s9eBZ{--shiki-default:#22863A;--shiki-dark:#85E89D}html pre.shiki code .sVt8B, html code.shiki .sVt8B{--shiki-default:#24292E;--shiki-dark:#E1E4E8}html pre.shiki code .sj4cs, html code.shiki .sj4cs{--shiki-default:#005CC5;--shiki-dark:#79B8FF}html pre.shiki code .sJ8bj, html code.shiki .sJ8bj{--shiki-default:#6A737D;--shiki-dark:#6A737D}html pre.shiki code .sScJk, html code.shiki .sScJk{--shiki-default:#6F42C1;--shiki-dark:#B392F0}html pre.shiki code .szBVR, html code.shiki .szBVR{--shiki-default:#D73A49;--shiki-dark:#F97583}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html pre.shiki code .sZZnC, html code.shiki .sZZnC{--shiki-default:#032F62;--shiki-dark:#9ECBFF}",{"title":161,"searchDepth":178,"depth":178,"links":1535},[1536,1542,1543,1544],{"id":14,"depth":178,"text":15,"children":1537},[1538,1539,1540,1541],{"id":32,"depth":187,"text":33},{"id":57,"depth":187,"text":58},{"id":333,"depth":187,"text":334},{"id":804,"depth":187,"text":805},{"id":867,"depth":178,"text":868},{"id":1056,"depth":178,"text":1057},{"id":1499,"depth":178,"text":1500},"2024-04-28","И продвинутые CSS штуки","md",{},"/blog/advanced-css","/images/advanced-css-preview.png",{"title":7,"description":1546},"blog/advanced-css",[160,1554,1555],"cheatsheet","interview","G8UEnfTE622H3qDDOjdMIvPZsUXF_IfTZbnRf-JWOXY",{"id":1558,"title":1559,"body":1560,"date":7477,"description":7478,"extension":1547,"meta":7479,"navigation":206,"path":7480,"previewImg":7481,"seo":7482,"stem":7483,"topics":7484,"__hash__":7489},"articles/blog/implementing-own-redux-toolkit.md","Пишем свой redux-toolkit",{"type":9,"value":1561,"toc":7467},[1562,1566,1586,1614,1618,1621,2128,2132,2138,2643,2646,2650,2659,2726,2729,2855,2858,2861,2864,2955,2958,2967,2973,2982,3697,3700,3709,3729,3732,3951,3957,3961,3973,4022,4040,4047,4127,4129,4136,4143,4146,4210,4217,4220,4251,4254,4265,4271,4493,4497,4504,5061,5106,5110,6816,7107,7184,7464],[12,1563,1565],{"id":1564},"motivation","Мотивация",[17,1567,1568,1569,1572,1573,83,1576,1129,1579,83,1582,1585],{},"Как правило мы задумываемся о глобальном стейте, когда приложение обрастает какой-то сложной бизнес логикой и прокидывать пропсы становится больно.\nВ случае с более менее легкой бизнес логикой можно обойтись ",[21,1570,1571],{},"React Context",". Но когда уже не хватает и его - на помощь приходит стейт менеджер,\nнапример редакс. Обычно в качестве примера использования редакса показывают TODO лист, что на мой взгляд тупо - мне трудно представить\nсебе туду лист, который был бы достаточно сложен, что для него бы мог потребоваться глобальный стейт.\nСкорее вы будете хранить в стейте профиль авторизованного юзера или какие-то сложные структуры,\nкоторые нужно уметь находить разными способами, скажем ",[21,1574,1575],{},"profileById",[21,1577,1578],{},"profileByUsername",[21,1580,1581],{},"noteIdsByWeekTs",[21,1583,1584],{},"noteIdsByDayTs",".",[17,1587,1588,1589,1596,1597,1601,1602,1605,1606,1609,1610,1613],{},"Глобальный стейт решает 3 основный задачи - хранить, записывать и доставать данные. Чем удобнее, тем лучше.\nRedux предлагает редьюсеры, экшены и селекторы для этих задач.\nЕсли говорить про ",[1326,1590,1595],{"href":1591,"rel":1592,"target":1594},"https://redux.js.org/tutorials/fundamentals/part-3-state-actions-reducers",[1593],"nofollow","_blank","стандартную реализацию",",\nто про про удобство говорить не приходится, switch case конструкция для экшенов - это боль.\nРазработчики редакса тоже так подумали и изобрели красивую обертку под названием ",[1598,1599,1600],"strong",{},"Redux Toolkit.","\nОднако они умудрились превратить ",[1598,1603,1604],{},"3.33 kB"," в ",[1598,1607,1608],{},"37 kB"," и это наталкивает на мысль, что они напихали слишком много лишнего.\nВозможно, им следовало бы остановиться на методе ",[21,1611,1612],{},"createSlice",",\nкоторый позволяет создавать редьюсер и экшены без лишней головной боли, а так же хуке useSlectors.\nИменно эти вещи я и хочу реализовать самостоятельно. Это будет интересно еще и точки зрения типизации.",[12,1615,1617],{"id":1616},"api","API",[17,1619,1620],{},"Для начала нужно прикинуть, что именно мы хотим получить на выходе.\nВ рамках данной статьи я хочу реализовать метод createSlice, где можно было бы создать экшены и селекторы,\nа так же useSelector для доступа к данным из реакт компонента и dispatch для вызова экшенов",[156,1622,1627],{"className":1623,"code":1624,"filename":1625,"language":1626,"meta":161,"style":161},"language-ts shiki shiki-themes github-light github-dark","\ntype User = {\n  id: string;\n  username: string;\n  displayName: string;\n}\n\nexport const usersSlice = createSlice({\n  name: 'users',\n  defaultState: {\n    userById: {} as Record\u003Cstring, User>,\n    usernameById: {} as Record\u003Cstring, string>,\n  },\n  actions: {\n    addUser: (state, user: User) => {\n      // state должен иметь тот же тип, что и defaultState\n      state.userById[user.id] = user;\n      state.usernameById[user.username] = user.id;\n    },\n    deleteUser: (state, userId: string) => {\n      const user = state.userById[userId];\n      delete state.usernameById[user.username];\n      delete state.userById[userId];\n    }\n  },\n  selectors: {\n    selectUserByUsername: (state, username: string) => state.userById[state.usernameById[username]],\n  }\n});\n\nusersSlice.actions;// экшены\nusersSlice.selectors;// селекторы\n\n// ...\n\n// SomeComponent.tsx\n\n// user Должен иметь тип User\nconst user = useSelector(state => state.selectUserByUsername(state.users, 'someUsername'));\n\nconst addUser = useCallback(() => {\n  dispatch(\n    // Аргументом addUser должен быть объект User\n    usersSlice.actions.addUser({\n      id: '2',\n      username: 'username2',\n      displayName: 'some display name',\n    })\n  );\n}, [dispatch]);\n","usersSlice.ts","ts",[21,1628,1629,1633,1645,1659,1670,1681,1685,1689,1708,1718,1723,1747,1766,1771,1776,1803,1808,1818,1828,1833,1857,1870,1878,1884,1889,1893,1898,1924,1929,1935,1940,1949,1958,1963,1969,1974,1980,1985,1991,2026,2031,2051,2060,2066,2077,2088,2099,2110,2116,2122],{"__ignoreMap":161},[165,1630,1631],{"class":167,"line":168},[165,1632,207],{"emptyLinePlaceholder":206},[165,1634,1635,1637,1640,1643],{"class":167,"line":178},[165,1636,922],{"class":238},[165,1638,1639],{"class":220}," User",[165,1641,1642],{"class":238}," =",[165,1644,184],{"class":174},[165,1646,1647,1651,1654,1657],{"class":167,"line":187},[165,1648,1650],{"class":1649},"s4XuR","  id",[165,1652,1653],{"class":238},":",[165,1655,1656],{"class":190}," string",[165,1658,241],{"class":174},[165,1660,1661,1664,1666,1668],{"class":167,"line":197},[165,1662,1663],{"class":1649},"  username",[165,1665,1653],{"class":238},[165,1667,1656],{"class":190},[165,1669,241],{"class":174},[165,1671,1672,1675,1677,1679],{"class":167,"line":203},[165,1673,1674],{"class":1649},"  displayName",[165,1676,1653],{"class":238},[165,1678,1656],{"class":190},[165,1680,241],{"class":174},[165,1682,1683],{"class":167,"line":210},[165,1684,200],{"class":174},[165,1686,1687],{"class":167,"line":217},[165,1688,207],{"emptyLinePlaceholder":206},[165,1690,1691,1694,1697,1700,1702,1705],{"class":167,"line":226},[165,1692,1693],{"class":238},"export",[165,1695,1696],{"class":238}," const",[165,1698,1699],{"class":190}," usersSlice",[165,1701,1642],{"class":238},[165,1703,1704],{"class":220}," createSlice",[165,1706,1707],{"class":174},"({\n",[165,1709,1710,1713,1716],{"class":167,"line":244},[165,1711,1712],{"class":174},"  name: ",[165,1714,1715],{"class":485},"'users'",[165,1717,175],{"class":174},[165,1719,1720],{"class":167,"line":632},[165,1721,1722],{"class":174},"  defaultState: {\n",[165,1724,1725,1728,1731,1734,1736,1739,1741,1744],{"class":167,"line":646},[165,1726,1727],{"class":174},"    userById: {} ",[165,1729,1730],{"class":238},"as",[165,1732,1733],{"class":220}," Record",[165,1735,473],{"class":174},[165,1737,1738],{"class":190},"string",[165,1740,83],{"class":174},[165,1742,1743],{"class":220},"User",[165,1745,1746],{"class":174},">,\n",[165,1748,1749,1752,1754,1756,1758,1760,1762,1764],{"class":167,"line":651},[165,1750,1751],{"class":174},"    usernameById: {} ",[165,1753,1730],{"class":238},[165,1755,1733],{"class":220},[165,1757,473],{"class":174},[165,1759,1738],{"class":190},[165,1761,83],{"class":174},[165,1763,1738],{"class":190},[165,1765,1746],{"class":174},[165,1767,1768],{"class":167,"line":656},[165,1769,1770],{"class":174},"  },\n",[165,1772,1773],{"class":167,"line":663},[165,1774,1775],{"class":174},"  actions: {\n",[165,1777,1778,1781,1784,1787,1789,1792,1794,1796,1798,1801],{"class":167,"line":679},[165,1779,1780],{"class":220},"    addUser",[165,1782,1783],{"class":174},": (",[165,1785,1786],{"class":1649},"state",[165,1788,83],{"class":174},[165,1790,1791],{"class":1649},"user",[165,1793,1653],{"class":238},[165,1795,1639],{"class":220},[165,1797,1431],{"class":174},[165,1799,1800],{"class":238},"=>",[165,1802,184],{"class":174},[165,1804,1805],{"class":167,"line":693},[165,1806,1807],{"class":213},"      // state должен иметь тот же тип, что и defaultState\n",[165,1809,1810,1813,1815],{"class":167,"line":705},[165,1811,1812],{"class":174},"      state.userById[user.id] ",[165,1814,482],{"class":238},[165,1816,1817],{"class":174}," user;\n",[165,1819,1820,1823,1825],{"class":167,"line":987},[165,1821,1822],{"class":174},"      state.usernameById[user.username] ",[165,1824,482],{"class":238},[165,1826,1827],{"class":174}," user.id;\n",[165,1829,1830],{"class":167,"line":992},[165,1831,1832],{"class":174},"    },\n",[165,1834,1835,1838,1840,1842,1844,1847,1849,1851,1853,1855],{"class":167,"line":998},[165,1836,1837],{"class":220},"    deleteUser",[165,1839,1783],{"class":174},[165,1841,1786],{"class":1649},[165,1843,83],{"class":174},[165,1845,1846],{"class":1649},"userId",[165,1848,1653],{"class":238},[165,1850,1656],{"class":190},[165,1852,1431],{"class":174},[165,1854,1800],{"class":238},[165,1856,184],{"class":174},[165,1858,1859,1862,1865,1867],{"class":167,"line":1010},[165,1860,1861],{"class":238},"      const",[165,1863,1864],{"class":190}," user",[165,1866,1642],{"class":238},[165,1868,1869],{"class":174}," state.userById[userId];\n",[165,1871,1872,1875],{"class":167,"line":1015},[165,1873,1874],{"class":238},"      delete",[165,1876,1877],{"class":174}," state.usernameById[user.username];\n",[165,1879,1880,1882],{"class":167,"line":1021},[165,1881,1874],{"class":238},[165,1883,1869],{"class":174},[165,1885,1886],{"class":167,"line":1033},[165,1887,1888],{"class":174},"    }\n",[165,1890,1891],{"class":167,"line":1038},[165,1892,1770],{"class":174},[165,1894,1895],{"class":167,"line":1044},[165,1896,1897],{"class":174},"  selectors: {\n",[165,1899,1901,1904,1906,1908,1910,1913,1915,1917,1919,1921],{"class":167,"line":1900},27,[165,1902,1903],{"class":220},"    selectUserByUsername",[165,1905,1783],{"class":174},[165,1907,1786],{"class":1649},[165,1909,83],{"class":174},[165,1911,1912],{"class":1649},"username",[165,1914,1653],{"class":238},[165,1916,1656],{"class":190},[165,1918,1431],{"class":174},[165,1920,1800],{"class":238},[165,1922,1923],{"class":174}," state.userById[state.usernameById[username]],\n",[165,1925,1927],{"class":167,"line":1926},28,[165,1928,755],{"class":174},[165,1930,1932],{"class":167,"line":1931},29,[165,1933,1934],{"class":174},"});\n",[165,1936,1938],{"class":167,"line":1937},30,[165,1939,207],{"emptyLinePlaceholder":206},[165,1941,1943,1946],{"class":167,"line":1942},31,[165,1944,1945],{"class":174},"usersSlice.actions;",[165,1947,1948],{"class":213},"// экшены\n",[165,1950,1952,1955],{"class":167,"line":1951},32,[165,1953,1954],{"class":174},"usersSlice.selectors;",[165,1956,1957],{"class":213},"// селекторы\n",[165,1959,1961],{"class":167,"line":1960},33,[165,1962,207],{"emptyLinePlaceholder":206},[165,1964,1966],{"class":167,"line":1965},34,[165,1967,1968],{"class":213},"// ...\n",[165,1970,1972],{"class":167,"line":1971},35,[165,1973,207],{"emptyLinePlaceholder":206},[165,1975,1977],{"class":167,"line":1976},36,[165,1978,1979],{"class":213},"// SomeComponent.tsx\n",[165,1981,1983],{"class":167,"line":1982},37,[165,1984,207],{"emptyLinePlaceholder":206},[165,1986,1988],{"class":167,"line":1987},38,[165,1989,1990],{"class":213},"// user Должен иметь тип User\n",[165,1992,1994,1997,1999,2001,2004,2006,2008,2011,2014,2017,2020,2023],{"class":167,"line":1993},39,[165,1995,1996],{"class":238},"const",[165,1998,1864],{"class":190},[165,2000,1642],{"class":238},[165,2002,2003],{"class":220}," useSelector",[165,2005,1290],{"class":174},[165,2007,1786],{"class":1649},[165,2009,2010],{"class":238}," =>",[165,2012,2013],{"class":174}," state.",[165,2015,2016],{"class":220},"selectUserByUsername",[165,2018,2019],{"class":174},"(state.users, ",[165,2021,2022],{"class":485},"'someUsername'",[165,2024,2025],{"class":174},"));\n",[165,2027,2029],{"class":167,"line":2028},40,[165,2030,207],{"emptyLinePlaceholder":206},[165,2032,2034,2036,2039,2041,2044,2047,2049],{"class":167,"line":2033},41,[165,2035,1996],{"class":238},[165,2037,2038],{"class":190}," addUser",[165,2040,1642],{"class":238},[165,2042,2043],{"class":220}," useCallback",[165,2045,2046],{"class":174},"(() ",[165,2048,1800],{"class":238},[165,2050,184],{"class":174},[165,2052,2054,2057],{"class":167,"line":2053},42,[165,2055,2056],{"class":220},"  dispatch",[165,2058,2059],{"class":174},"(\n",[165,2061,2063],{"class":167,"line":2062},43,[165,2064,2065],{"class":213},"    // Аргументом addUser должен быть объект User\n",[165,2067,2069,2072,2075],{"class":167,"line":2068},44,[165,2070,2071],{"class":174},"    usersSlice.actions.",[165,2073,2074],{"class":220},"addUser",[165,2076,1707],{"class":174},[165,2078,2080,2083,2086],{"class":167,"line":2079},45,[165,2081,2082],{"class":174},"      id: ",[165,2084,2085],{"class":485},"'2'",[165,2087,175],{"class":174},[165,2089,2091,2094,2097],{"class":167,"line":2090},46,[165,2092,2093],{"class":174},"      username: ",[165,2095,2096],{"class":485},"'username2'",[165,2098,175],{"class":174},[165,2100,2102,2105,2108],{"class":167,"line":2101},47,[165,2103,2104],{"class":174},"      displayName: ",[165,2106,2107],{"class":485},"'some display name'",[165,2109,175],{"class":174},[165,2111,2113],{"class":167,"line":2112},48,[165,2114,2115],{"class":174},"    })\n",[165,2117,2119],{"class":167,"line":2118},49,[165,2120,2121],{"class":174},"  );\n",[165,2123,2125],{"class":167,"line":2124},50,[165,2126,2127],{"class":174},"}, [dispatch]);\n",[12,2129,2131],{"id":2130},"implementation","Реализация",[17,2133,2134,2135,2137],{},"Для начала определимся с параметрами ",[21,2136,1612],{}," и набросаем небольшой черновик:",[156,2139,2141],{"className":1623,"code":2140,"language":1626,"meta":161,"style":161},"type SliceActionCreator\u003CState, Payload = any> = (\n  state: State,\n  payload: Payload\n) => void;\n\ntype SliceSelector\u003CState, Payload = unknown, SelectorReturn = unknown> = (\n  state: State,\n  payload: Payload\n) => SelectorReturn;\n\ntype CreateSliceProps\u003C\n  Name extends string,\n  State extends Record\u003Cstring, unknown>,\n  Actions extends Record\u003Cstring, SliceActionCreator\u003CState>>,\n  Selectors extends Record\u003Cstring, SliceSelector\u003CState>>\n> = {\n  name: Name;\n  actions: Actions;\n  defaultState: State;\n  selectors: Selectors;\n};\n\nexport const createSlice = \u003C\n  Name extends string,\n  State extends Record\u003Cstring, unknown>,\n  Actions extends Record\u003Cstring, SliceActionCreator\u003CState>>,\n  Selectors extends Record\u003Cstring, SliceSelector\u003CState>>\n>({\n    name,\n    actions,\n    defaultState,\n    selectors,\n  }: CreateSliceProps\u003CName, State, Actions, Selectors>) => {\n  let sliceActions; // TODO\n  let reducer; // TODO\n  let sliceSelectors; // TODO\n\n  return {\n    reducer,\n    selectors: sliceSelectors,\n    actions: sliceActions,\n  };\n};\n\n",[21,2142,2143,2173,2185,2195,2206,2210,2245,2255,2263,2274,2278,2288,2300,2320,2345,2370,2378,2390,2402,2413,2425,2430,2434,2447,2457,2475,2497,2519,2524,2529,2534,2539,2544,2579,2590,2599,2608,2612,2619,2624,2629,2634,2639],{"__ignoreMap":161},[165,2144,2145,2147,2150,2152,2155,2157,2160,2162,2165,2168,2170],{"class":167,"line":168},[165,2146,922],{"class":238},[165,2148,2149],{"class":220}," SliceActionCreator",[165,2151,473],{"class":174},[165,2153,2154],{"class":220},"State",[165,2156,83],{"class":174},[165,2158,2159],{"class":220},"Payload",[165,2161,1642],{"class":238},[165,2163,2164],{"class":190}," any",[165,2166,2167],{"class":174},"> ",[165,2169,482],{"class":238},[165,2171,2172],{"class":174}," (\n",[165,2174,2175,2178,2180,2183],{"class":167,"line":178},[165,2176,2177],{"class":1649},"  state",[165,2179,1653],{"class":238},[165,2181,2182],{"class":220}," State",[165,2184,175],{"class":174},[165,2186,2187,2190,2192],{"class":167,"line":187},[165,2188,2189],{"class":1649},"  payload",[165,2191,1653],{"class":238},[165,2193,2194],{"class":220}," Payload\n",[165,2196,2197,2199,2201,2204],{"class":167,"line":197},[165,2198,1431],{"class":174},[165,2200,1800],{"class":238},[165,2202,2203],{"class":190}," void",[165,2205,241],{"class":174},[165,2207,2208],{"class":167,"line":203},[165,2209,207],{"emptyLinePlaceholder":206},[165,2211,2212,2214,2217,2219,2221,2223,2225,2227,2230,2232,2235,2237,2239,2241,2243],{"class":167,"line":210},[165,2213,922],{"class":238},[165,2215,2216],{"class":220}," SliceSelector",[165,2218,473],{"class":174},[165,2220,2154],{"class":220},[165,2222,83],{"class":174},[165,2224,2159],{"class":220},[165,2226,1642],{"class":238},[165,2228,2229],{"class":190}," unknown",[165,2231,83],{"class":174},[165,2233,2234],{"class":220},"SelectorReturn",[165,2236,1642],{"class":238},[165,2238,2229],{"class":190},[165,2240,2167],{"class":174},[165,2242,482],{"class":238},[165,2244,2172],{"class":174},[165,2246,2247,2249,2251,2253],{"class":167,"line":217},[165,2248,2177],{"class":1649},[165,2250,1653],{"class":238},[165,2252,2182],{"class":220},[165,2254,175],{"class":174},[165,2256,2257,2259,2261],{"class":167,"line":226},[165,2258,2189],{"class":1649},[165,2260,1653],{"class":238},[165,2262,2194],{"class":220},[165,2264,2265,2267,2269,2272],{"class":167,"line":244},[165,2266,1431],{"class":174},[165,2268,1800],{"class":238},[165,2270,2271],{"class":220}," SelectorReturn",[165,2273,241],{"class":174},[165,2275,2276],{"class":167,"line":632},[165,2277,207],{"emptyLinePlaceholder":206},[165,2279,2280,2282,2285],{"class":167,"line":646},[165,2281,922],{"class":238},[165,2283,2284],{"class":220}," CreateSliceProps",[165,2286,2287],{"class":174},"\u003C\n",[165,2289,2290,2293,2296,2298],{"class":167,"line":651},[165,2291,2292],{"class":220},"  Name",[165,2294,2295],{"class":238}," extends",[165,2297,1656],{"class":190},[165,2299,175],{"class":174},[165,2301,2302,2305,2307,2309,2311,2313,2315,2318],{"class":167,"line":656},[165,2303,2304],{"class":220},"  State",[165,2306,2295],{"class":238},[165,2308,1733],{"class":220},[165,2310,473],{"class":174},[165,2312,1738],{"class":190},[165,2314,83],{"class":174},[165,2316,2317],{"class":190},"unknown",[165,2319,1746],{"class":174},[165,2321,2322,2325,2327,2329,2331,2333,2335,2338,2340,2342],{"class":167,"line":663},[165,2323,2324],{"class":220},"  Actions",[165,2326,2295],{"class":238},[165,2328,1733],{"class":220},[165,2330,473],{"class":174},[165,2332,1738],{"class":190},[165,2334,83],{"class":174},[165,2336,2337],{"class":220},"SliceActionCreator",[165,2339,473],{"class":174},[165,2341,2154],{"class":220},[165,2343,2344],{"class":174},">>,\n",[165,2346,2347,2350,2352,2354,2356,2358,2360,2363,2365,2367],{"class":167,"line":679},[165,2348,2349],{"class":220},"  Selectors",[165,2351,2295],{"class":238},[165,2353,1733],{"class":220},[165,2355,473],{"class":174},[165,2357,1738],{"class":190},[165,2359,83],{"class":174},[165,2361,2362],{"class":220},"SliceSelector",[165,2364,473],{"class":174},[165,2366,2154],{"class":220},[165,2368,2369],{"class":174},">>\n",[165,2371,2372,2374,2376],{"class":167,"line":693},[165,2373,2167],{"class":174},[165,2375,482],{"class":238},[165,2377,184],{"class":174},[165,2379,2380,2383,2385,2388],{"class":167,"line":705},[165,2381,2382],{"class":1649},"  name",[165,2384,1653],{"class":238},[165,2386,2387],{"class":220}," Name",[165,2389,241],{"class":174},[165,2391,2392,2395,2397,2400],{"class":167,"line":987},[165,2393,2394],{"class":1649},"  actions",[165,2396,1653],{"class":238},[165,2398,2399],{"class":220}," Actions",[165,2401,241],{"class":174},[165,2403,2404,2407,2409,2411],{"class":167,"line":992},[165,2405,2406],{"class":1649},"  defaultState",[165,2408,1653],{"class":238},[165,2410,2182],{"class":220},[165,2412,241],{"class":174},[165,2414,2415,2418,2420,2423],{"class":167,"line":998},[165,2416,2417],{"class":1649},"  selectors",[165,2419,1653],{"class":238},[165,2421,2422],{"class":220}," Selectors",[165,2424,241],{"class":174},[165,2426,2427],{"class":167,"line":1010},[165,2428,2429],{"class":174},"};\n",[165,2431,2432],{"class":167,"line":1015},[165,2433,207],{"emptyLinePlaceholder":206},[165,2435,2436,2438,2440,2442,2444],{"class":167,"line":1021},[165,2437,1693],{"class":238},[165,2439,1696],{"class":238},[165,2441,1704],{"class":220},[165,2443,1642],{"class":238},[165,2445,2446],{"class":174}," \u003C\n",[165,2448,2449,2451,2453,2455],{"class":167,"line":1033},[165,2450,2292],{"class":220},[165,2452,2295],{"class":238},[165,2454,1656],{"class":190},[165,2456,175],{"class":174},[165,2458,2459,2461,2463,2465,2467,2469,2471,2473],{"class":167,"line":1038},[165,2460,2304],{"class":220},[165,2462,2295],{"class":238},[165,2464,1733],{"class":220},[165,2466,473],{"class":174},[165,2468,1738],{"class":190},[165,2470,83],{"class":174},[165,2472,2317],{"class":190},[165,2474,1746],{"class":174},[165,2476,2477,2479,2481,2483,2485,2487,2489,2491,2493,2495],{"class":167,"line":1044},[165,2478,2324],{"class":220},[165,2480,2295],{"class":238},[165,2482,1733],{"class":220},[165,2484,473],{"class":174},[165,2486,1738],{"class":190},[165,2488,83],{"class":174},[165,2490,2337],{"class":220},[165,2492,473],{"class":174},[165,2494,2154],{"class":220},[165,2496,2344],{"class":174},[165,2498,2499,2501,2503,2505,2507,2509,2511,2513,2515,2517],{"class":167,"line":1900},[165,2500,2349],{"class":220},[165,2502,2295],{"class":238},[165,2504,1733],{"class":220},[165,2506,473],{"class":174},[165,2508,1738],{"class":190},[165,2510,83],{"class":174},[165,2512,2362],{"class":220},[165,2514,473],{"class":174},[165,2516,2154],{"class":220},[165,2518,2369],{"class":174},[165,2520,2521],{"class":167,"line":1926},[165,2522,2523],{"class":174},">({\n",[165,2525,2526],{"class":167,"line":1931},[165,2527,2528],{"class":174},"    name,\n",[165,2530,2531],{"class":167,"line":1937},[165,2532,2533],{"class":174},"    actions,\n",[165,2535,2536],{"class":167,"line":1942},[165,2537,2538],{"class":174},"    defaultState,\n",[165,2540,2541],{"class":167,"line":1951},[165,2542,2543],{"class":174},"    selectors,\n",[165,2545,2546,2549,2551,2553,2555,2558,2560,2562,2564,2567,2569,2572,2575,2577],{"class":167,"line":1960},[165,2547,2548],{"class":174},"  }",[165,2550,1653],{"class":238},[165,2552,2284],{"class":220},[165,2554,473],{"class":174},[165,2556,2557],{"class":220},"Name",[165,2559,83],{"class":174},[165,2561,2154],{"class":220},[165,2563,83],{"class":174},[165,2565,2566],{"class":220},"Actions",[165,2568,83],{"class":174},[165,2570,2571],{"class":220},"Selectors",[165,2573,2574],{"class":174},">) ",[165,2576,1800],{"class":238},[165,2578,184],{"class":174},[165,2580,2581,2584,2587],{"class":167,"line":1965},[165,2582,2583],{"class":238},"  let",[165,2585,2586],{"class":174}," sliceActions; ",[165,2588,2589],{"class":213},"// TODO\n",[165,2591,2592,2594,2597],{"class":167,"line":1971},[165,2593,2583],{"class":238},[165,2595,2596],{"class":174}," reducer; ",[165,2598,2589],{"class":213},[165,2600,2601,2603,2606],{"class":167,"line":1976},[165,2602,2583],{"class":238},[165,2604,2605],{"class":174}," sliceSelectors; ",[165,2607,2589],{"class":213},[165,2609,2610],{"class":167,"line":1982},[165,2611,207],{"emptyLinePlaceholder":206},[165,2613,2614,2617],{"class":167,"line":1987},[165,2615,2616],{"class":238},"  return",[165,2618,184],{"class":174},[165,2620,2621],{"class":167,"line":1993},[165,2622,2623],{"class":174},"    reducer,\n",[165,2625,2626],{"class":167,"line":2028},[165,2627,2628],{"class":174},"    selectors: sliceSelectors,\n",[165,2630,2631],{"class":167,"line":2033},[165,2632,2633],{"class":174},"    actions: sliceActions,\n",[165,2635,2636],{"class":167,"line":2053},[165,2637,2638],{"class":174},"  };\n",[165,2640,2641],{"class":167,"line":2062},[165,2642,2429],{"class":174},[17,2644,2645],{},"План такой - сначала реализовать экшены, потом редьюсер и в самом конце - селекторы.",[12,2647,2649],{"id":2648},"actions","Экшены",[17,2651,2652,2653,2655,2656],{},"Экшен представляет из себя объект с обязательным полем ",[21,2654,922],{}," и опциональным ",[21,2657,2658],{},"payload",[156,2660,2662],{"className":1623,"code":2661,"language":1626,"meta":161,"style":161},"type Action\u003CType extends string = string, Payload = unknown> = {\n  type: Type;\n  payload?: Payload;\n};\n",[21,2663,2664,2698,2710,2722],{"__ignoreMap":161},[165,2665,2666,2668,2671,2673,2676,2678,2680,2682,2684,2686,2688,2690,2692,2694,2696],{"class":167,"line":168},[165,2667,922],{"class":238},[165,2669,2670],{"class":220}," Action",[165,2672,473],{"class":174},[165,2674,2675],{"class":220},"Type",[165,2677,2295],{"class":238},[165,2679,1656],{"class":190},[165,2681,1642],{"class":238},[165,2683,1656],{"class":190},[165,2685,83],{"class":174},[165,2687,2159],{"class":220},[165,2689,1642],{"class":238},[165,2691,2229],{"class":190},[165,2693,2167],{"class":174},[165,2695,482],{"class":238},[165,2697,184],{"class":174},[165,2699,2700,2703,2705,2708],{"class":167,"line":178},[165,2701,2702],{"class":1649},"  type",[165,2704,1653],{"class":238},[165,2706,2707],{"class":220}," Type",[165,2709,241],{"class":174},[165,2711,2712,2714,2717,2720],{"class":167,"line":187},[165,2713,2189],{"class":1649},[165,2715,2716],{"class":238},"?:",[165,2718,2719],{"class":220}," Payload",[165,2721,241],{"class":174},[165,2723,2724],{"class":167,"line":197},[165,2725,2429],{"class":174},[17,2727,2728],{},"Пусть, если в метод createSlice прокинуты",[156,2730,2732],{"className":1623,"code":2731,"language":1626,"meta":161,"style":161},"const props = {\n  name: 'users',\n  actions: {\n    addUser: (state, user: User) => {\n      state.userById[user.id] = user;\n      state.usernameById[user.username] = user.id;\n    },\n    deleteUser: (state, userId: string) => {\n      const user = state.userById[userId];\n      delete state.usernameById[user.username];\n      delete state.userById[userId];\n    }\n  }\n};\n",[21,2733,2734,2745,2753,2757,2779,2787,2795,2799,2821,2831,2837,2843,2847,2851],{"__ignoreMap":161},[165,2735,2736,2738,2741,2743],{"class":167,"line":168},[165,2737,1996],{"class":238},[165,2739,2740],{"class":190}," props",[165,2742,1642],{"class":238},[165,2744,184],{"class":174},[165,2746,2747,2749,2751],{"class":167,"line":178},[165,2748,1712],{"class":174},[165,2750,1715],{"class":485},[165,2752,175],{"class":174},[165,2754,2755],{"class":167,"line":187},[165,2756,1775],{"class":174},[165,2758,2759,2761,2763,2765,2767,2769,2771,2773,2775,2777],{"class":167,"line":197},[165,2760,1780],{"class":220},[165,2762,1783],{"class":174},[165,2764,1786],{"class":1649},[165,2766,83],{"class":174},[165,2768,1791],{"class":1649},[165,2770,1653],{"class":238},[165,2772,1639],{"class":220},[165,2774,1431],{"class":174},[165,2776,1800],{"class":238},[165,2778,184],{"class":174},[165,2780,2781,2783,2785],{"class":167,"line":203},[165,2782,1812],{"class":174},[165,2784,482],{"class":238},[165,2786,1817],{"class":174},[165,2788,2789,2791,2793],{"class":167,"line":210},[165,2790,1822],{"class":174},[165,2792,482],{"class":238},[165,2794,1827],{"class":174},[165,2796,2797],{"class":167,"line":217},[165,2798,1832],{"class":174},[165,2800,2801,2803,2805,2807,2809,2811,2813,2815,2817,2819],{"class":167,"line":226},[165,2802,1837],{"class":220},[165,2804,1783],{"class":174},[165,2806,1786],{"class":1649},[165,2808,83],{"class":174},[165,2810,1846],{"class":1649},[165,2812,1653],{"class":238},[165,2814,1656],{"class":190},[165,2816,1431],{"class":174},[165,2818,1800],{"class":238},[165,2820,184],{"class":174},[165,2822,2823,2825,2827,2829],{"class":167,"line":244},[165,2824,1861],{"class":238},[165,2826,1864],{"class":190},[165,2828,1642],{"class":238},[165,2830,1869],{"class":174},[165,2832,2833,2835],{"class":167,"line":632},[165,2834,1874],{"class":238},[165,2836,1877],{"class":174},[165,2838,2839,2841],{"class":167,"line":646},[165,2840,1874],{"class":238},[165,2842,1869],{"class":174},[165,2844,2845],{"class":167,"line":651},[165,2846,1888],{"class":174},[165,2848,2849],{"class":167,"line":656},[165,2850,755],{"class":174},[165,2852,2853],{"class":167,"line":663},[165,2854,2429],{"class":174},[17,2856,2857],{},"то мы будем генерировать два actionType:",[17,2859,2860],{},"users/addUser\nusers/deleteUser",[17,2862,2863],{},"и два экшена -",[156,2865,2867],{"className":1623,"code":2866,"language":1626,"meta":161,"style":161},"const addUser = (user: User) => ({\n  type: \"users/addUser\",\n  payload: user,\n});\n\nconst deleteUser = (userId: string) => ({\n  type: \"users/deleteUser\",\n  payload: user,\n});\n",[21,2868,2869,2892,2902,2907,2911,2915,2938,2947,2951],{"__ignoreMap":161},[165,2870,2871,2873,2875,2877,2879,2881,2883,2885,2887,2889],{"class":167,"line":168},[165,2872,1996],{"class":238},[165,2874,2038],{"class":220},[165,2876,1642],{"class":238},[165,2878,839],{"class":174},[165,2880,1791],{"class":1649},[165,2882,1653],{"class":238},[165,2884,1639],{"class":220},[165,2886,1431],{"class":174},[165,2888,1800],{"class":238},[165,2890,2891],{"class":174}," ({\n",[165,2893,2894,2897,2900],{"class":167,"line":178},[165,2895,2896],{"class":174},"  type: ",[165,2898,2899],{"class":485},"\"users/addUser\"",[165,2901,175],{"class":174},[165,2903,2904],{"class":167,"line":187},[165,2905,2906],{"class":174},"  payload: user,\n",[165,2908,2909],{"class":167,"line":197},[165,2910,1934],{"class":174},[165,2912,2913],{"class":167,"line":203},[165,2914,207],{"emptyLinePlaceholder":206},[165,2916,2917,2919,2922,2924,2926,2928,2930,2932,2934,2936],{"class":167,"line":210},[165,2918,1996],{"class":238},[165,2920,2921],{"class":220}," deleteUser",[165,2923,1642],{"class":238},[165,2925,839],{"class":174},[165,2927,1846],{"class":1649},[165,2929,1653],{"class":238},[165,2931,1656],{"class":190},[165,2933,1431],{"class":174},[165,2935,1800],{"class":238},[165,2937,2891],{"class":174},[165,2939,2940,2942,2945],{"class":167,"line":217},[165,2941,2896],{"class":174},[165,2943,2944],{"class":485},"\"users/deleteUser\"",[165,2946,175],{"class":174},[165,2948,2949],{"class":167,"line":226},[165,2950,2906],{"class":174},[165,2952,2953],{"class":167,"line":244},[165,2954,1934],{"class":174},[17,2956,2957],{},"Префикс с названием слайса добавлен для удобства и для того, чтобы предотвратить конфликт экшенов с одинаковыми названиями.",[17,2959,2960,2961,24,2964],{},"Нам понадобится два новых типа - ",[21,2962,2963],{},"ActionKey",[21,2965,2966],{},"ActionType",[17,2968,2969,2970,2972],{},"это ключи переданного объекта actions, а ",[21,2971,2966],{}," - это экшены, которые генерирует слайс, те же ключи, но с префиксом,",[17,2974,2975,2976,2978,2979],{},"Для создания типа ",[21,2977,2966],{}," используется небольшой генерик хелпер ",[21,2980,2981],{},"Scoped",[156,2983,2985],{"className":1623,"code":2984,"language":1626,"meta":161,"style":161},"type Scoped\u003CString extends string, Scope extends string> = `${Scope}/${String}`;\n\nexport const createSlice = \u003C\n  Name extends string,\n  State extends Record\u003Cstring, unknown>,\n  Actions extends Record\u003Cstring, SliceActionCreator\u003CState>>,\n  ActionKey extends Extract\u003Ckeyof Actions, string>,\n  ScopedActionType extends Scoped\u003CActionKey, Name>,\n  ActionPayload extends Parameters\u003CActions[ActionKey]>[1],\n  Action extends { type: ScopedActionType, payload: ActionPayload },\n>({\n    name,\n    actions,\n    defaultState,\n    selectors,\n  }: CreateSliceProps\u003CName, State, Actions, Selectors>) => {\n  const actionKeys = Object.keys(actions) as ActionKey[];\n  const actionTypeByActionKey = actionKeys.reduce((acc, action) => {\n    const scopedActionType = `${name}/${action}` as ScopedActionType;\n    acc[scopedActionType] = action;\n    return acc;\n  }, {} as Record\u003CScopedActionType, ActionKey>);\n\n  const reducer = (state: State = defaultState, action: Action) => {\n    const nextState = produce(state, draft => {\n      const actionType = actionTypeByActionKey[action.type];\n      actions[actionType]?.(draft as State, action.payload);\n    });\n    return nextState;\n  };\n\n  const sliceActions = actionKeys.reduce((acc, curr) => {\n    acc[curr] = (payload) => {\n      const scopedActionType = `${name}/${curr}` as ScopedActionType;\n\n      return {\n        type: scopedActionType,\n        payload,\n      };\n    };\n    return acc;\n  }, {} as {\n    [ActionKey in Extract\u003Ckeyof Actions, string>]: (payload: Parameters\u003CActions[ActionKey]>[1]) => { type: Scoped\u003CActionKey, Name>, payload: P }\n  });\n\n  return {\n    actions: sliceActions,\n  };\n};\n",[21,2986,2987,3031,3035,3047,3057,3075,3097,3120,3139,3166,3195,3199,3203,3207,3211,3215,3245,3272,3304,3332,3342,3350,3371,3375,3409,3431,3443,3455,3460,3467,3471,3475,3503,3520,3544,3548,3555,3560,3565,3570,3575,3581,3589,3670,3675,3679,3685,3689,3693],{"__ignoreMap":161},[165,2988,2989,2991,2994,2996,2999,3001,3003,3005,3008,3010,3012,3014,3016,3019,3021,3024,3026,3029],{"class":167,"line":168},[165,2990,922],{"class":238},[165,2992,2993],{"class":220}," Scoped",[165,2995,473],{"class":174},[165,2997,2998],{"class":220},"String",[165,3000,2295],{"class":238},[165,3002,1656],{"class":190},[165,3004,83],{"class":174},[165,3006,3007],{"class":220},"Scope",[165,3009,2295],{"class":238},[165,3011,1656],{"class":190},[165,3013,2167],{"class":174},[165,3015,482],{"class":238},[165,3017,3018],{"class":485}," `${",[165,3020,3007],{"class":220},[165,3022,3023],{"class":485},"}/${",[165,3025,2998],{"class":220},[165,3027,3028],{"class":485},"}`",[165,3030,241],{"class":174},[165,3032,3033],{"class":167,"line":178},[165,3034,207],{"emptyLinePlaceholder":206},[165,3036,3037,3039,3041,3043,3045],{"class":167,"line":187},[165,3038,1693],{"class":238},[165,3040,1696],{"class":238},[165,3042,1704],{"class":220},[165,3044,1642],{"class":238},[165,3046,2446],{"class":174},[165,3048,3049,3051,3053,3055],{"class":167,"line":197},[165,3050,2292],{"class":220},[165,3052,2295],{"class":238},[165,3054,1656],{"class":190},[165,3056,175],{"class":174},[165,3058,3059,3061,3063,3065,3067,3069,3071,3073],{"class":167,"line":203},[165,3060,2304],{"class":220},[165,3062,2295],{"class":238},[165,3064,1733],{"class":220},[165,3066,473],{"class":174},[165,3068,1738],{"class":190},[165,3070,83],{"class":174},[165,3072,2317],{"class":190},[165,3074,1746],{"class":174},[165,3076,3077,3079,3081,3083,3085,3087,3089,3091,3093,3095],{"class":167,"line":210},[165,3078,2324],{"class":220},[165,3080,2295],{"class":238},[165,3082,1733],{"class":220},[165,3084,473],{"class":174},[165,3086,1738],{"class":190},[165,3088,83],{"class":174},[165,3090,2337],{"class":220},[165,3092,473],{"class":174},[165,3094,2154],{"class":220},[165,3096,2344],{"class":174},[165,3098,3099,3102,3104,3107,3109,3112,3114,3116,3118],{"class":167,"line":217},[165,3100,3101],{"class":220},"  ActionKey",[165,3103,2295],{"class":238},[165,3105,3106],{"class":220}," Extract",[165,3108,473],{"class":174},[165,3110,3111],{"class":238},"keyof",[165,3113,2399],{"class":220},[165,3115,83],{"class":174},[165,3117,1738],{"class":190},[165,3119,1746],{"class":174},[165,3121,3122,3125,3127,3129,3131,3133,3135,3137],{"class":167,"line":226},[165,3123,3124],{"class":220},"  ScopedActionType",[165,3126,2295],{"class":238},[165,3128,2993],{"class":220},[165,3130,473],{"class":174},[165,3132,2963],{"class":220},[165,3134,83],{"class":174},[165,3136,2557],{"class":220},[165,3138,1746],{"class":174},[165,3140,3141,3144,3146,3149,3151,3153,3155,3157,3160,3163],{"class":167,"line":244},[165,3142,3143],{"class":220},"  ActionPayload",[165,3145,2295],{"class":238},[165,3147,3148],{"class":220}," Parameters",[165,3150,473],{"class":174},[165,3152,2566],{"class":220},[165,3154,919],{"class":174},[165,3156,2963],{"class":220},[165,3158,3159],{"class":174},"]>[",[165,3161,3162],{"class":190},"1",[165,3164,3165],{"class":174},"],\n",[165,3167,3168,3171,3173,3176,3178,3180,3183,3185,3187,3189,3192],{"class":167,"line":632},[165,3169,3170],{"class":220},"  Action",[165,3172,2295],{"class":238},[165,3174,3175],{"class":174}," { ",[165,3177,922],{"class":1649},[165,3179,1653],{"class":238},[165,3181,3182],{"class":220}," ScopedActionType",[165,3184,83],{"class":174},[165,3186,2658],{"class":1649},[165,3188,1653],{"class":238},[165,3190,3191],{"class":220}," ActionPayload",[165,3193,3194],{"class":174}," },\n",[165,3196,3197],{"class":167,"line":646},[165,3198,2523],{"class":174},[165,3200,3201],{"class":167,"line":651},[165,3202,2528],{"class":174},[165,3204,3205],{"class":167,"line":656},[165,3206,2533],{"class":174},[165,3208,3209],{"class":167,"line":663},[165,3210,2538],{"class":174},[165,3212,3213],{"class":167,"line":679},[165,3214,2543],{"class":174},[165,3216,3217,3219,3221,3223,3225,3227,3229,3231,3233,3235,3237,3239,3241,3243],{"class":167,"line":693},[165,3218,2548],{"class":174},[165,3220,1653],{"class":238},[165,3222,2284],{"class":220},[165,3224,473],{"class":174},[165,3226,2557],{"class":220},[165,3228,83],{"class":174},[165,3230,2154],{"class":220},[165,3232,83],{"class":174},[165,3234,2566],{"class":220},[165,3236,83],{"class":174},[165,3238,2571],{"class":220},[165,3240,2574],{"class":174},[165,3242,1800],{"class":238},[165,3244,184],{"class":174},[165,3246,3247,3250,3253,3255,3258,3261,3264,3266,3269],{"class":167,"line":705},[165,3248,3249],{"class":238},"  const",[165,3251,3252],{"class":190}," actionKeys",[165,3254,1642],{"class":238},[165,3256,3257],{"class":174}," Object.",[165,3259,3260],{"class":220},"keys",[165,3262,3263],{"class":174},"(actions) ",[165,3265,1730],{"class":238},[165,3267,3268],{"class":220}," ActionKey",[165,3270,3271],{"class":174},"[];\n",[165,3273,3274,3276,3279,3281,3284,3287,3290,3293,3295,3298,3300,3302],{"class":167,"line":987},[165,3275,3249],{"class":238},[165,3277,3278],{"class":190}," actionTypeByActionKey",[165,3280,1642],{"class":238},[165,3282,3283],{"class":174}," actionKeys.",[165,3285,3286],{"class":220},"reduce",[165,3288,3289],{"class":174},"((",[165,3291,3292],{"class":1649},"acc",[165,3294,83],{"class":174},[165,3296,3297],{"class":1649},"action",[165,3299,1431],{"class":174},[165,3301,1800],{"class":238},[165,3303,184],{"class":174},[165,3305,3306,3309,3312,3314,3316,3319,3321,3323,3325,3328,3330],{"class":167,"line":992},[165,3307,3308],{"class":238},"    const",[165,3310,3311],{"class":190}," scopedActionType",[165,3313,1642],{"class":238},[165,3315,3018],{"class":485},[165,3317,3318],{"class":174},"name",[165,3320,3023],{"class":485},[165,3322,3297],{"class":174},[165,3324,3028],{"class":485},[165,3326,3327],{"class":238}," as",[165,3329,3182],{"class":220},[165,3331,241],{"class":174},[165,3333,3334,3337,3339],{"class":167,"line":998},[165,3335,3336],{"class":174},"    acc[scopedActionType] ",[165,3338,482],{"class":238},[165,3340,3341],{"class":174}," action;\n",[165,3343,3344,3347],{"class":167,"line":1010},[165,3345,3346],{"class":238},"    return",[165,3348,3349],{"class":174}," acc;\n",[165,3351,3352,3355,3357,3359,3361,3364,3366,3368],{"class":167,"line":1015},[165,3353,3354],{"class":174},"  }, {} ",[165,3356,1730],{"class":238},[165,3358,1733],{"class":220},[165,3360,473],{"class":174},[165,3362,3363],{"class":220},"ScopedActionType",[165,3365,83],{"class":174},[165,3367,2963],{"class":220},[165,3369,3370],{"class":174},">);\n",[165,3372,3373],{"class":167,"line":1021},[165,3374,207],{"emptyLinePlaceholder":206},[165,3376,3377,3379,3382,3384,3386,3388,3390,3392,3394,3397,3399,3401,3403,3405,3407],{"class":167,"line":1033},[165,3378,3249],{"class":238},[165,3380,3381],{"class":220}," reducer",[165,3383,1642],{"class":238},[165,3385,839],{"class":174},[165,3387,1786],{"class":1649},[165,3389,1653],{"class":238},[165,3391,2182],{"class":220},[165,3393,1642],{"class":238},[165,3395,3396],{"class":174}," defaultState, ",[165,3398,3297],{"class":1649},[165,3400,1653],{"class":238},[165,3402,2670],{"class":220},[165,3404,1431],{"class":174},[165,3406,1800],{"class":238},[165,3408,184],{"class":174},[165,3410,3411,3413,3416,3418,3421,3424,3427,3429],{"class":167,"line":1038},[165,3412,3308],{"class":238},[165,3414,3415],{"class":190}," nextState",[165,3417,1642],{"class":238},[165,3419,3420],{"class":220}," produce",[165,3422,3423],{"class":174},"(state, ",[165,3425,3426],{"class":1649},"draft",[165,3428,2010],{"class":238},[165,3430,184],{"class":174},[165,3432,3433,3435,3438,3440],{"class":167,"line":1044},[165,3434,1861],{"class":238},[165,3436,3437],{"class":190}," actionType",[165,3439,1642],{"class":238},[165,3441,3442],{"class":174}," actionTypeByActionKey[action.type];\n",[165,3444,3445,3448,3450,3452],{"class":167,"line":1900},[165,3446,3447],{"class":174},"      actions[actionType]?.(draft ",[165,3449,1730],{"class":238},[165,3451,2182],{"class":220},[165,3453,3454],{"class":174},", action.payload);\n",[165,3456,3457],{"class":167,"line":1926},[165,3458,3459],{"class":174},"    });\n",[165,3461,3462,3464],{"class":167,"line":1931},[165,3463,3346],{"class":238},[165,3465,3466],{"class":174}," nextState;\n",[165,3468,3469],{"class":167,"line":1937},[165,3470,2638],{"class":174},[165,3472,3473],{"class":167,"line":1942},[165,3474,207],{"emptyLinePlaceholder":206},[165,3476,3477,3479,3482,3484,3486,3488,3490,3492,3494,3497,3499,3501],{"class":167,"line":1951},[165,3478,3249],{"class":238},[165,3480,3481],{"class":190}," sliceActions",[165,3483,1642],{"class":238},[165,3485,3283],{"class":174},[165,3487,3286],{"class":220},[165,3489,3289],{"class":174},[165,3491,3292],{"class":1649},[165,3493,83],{"class":174},[165,3495,3496],{"class":1649},"curr",[165,3498,1431],{"class":174},[165,3500,1800],{"class":238},[165,3502,184],{"class":174},[165,3504,3505,3508,3510,3512,3514,3516,3518],{"class":167,"line":1960},[165,3506,3507],{"class":174},"    acc[curr] ",[165,3509,482],{"class":238},[165,3511,839],{"class":174},[165,3513,2658],{"class":1649},[165,3515,1431],{"class":174},[165,3517,1800],{"class":238},[165,3519,184],{"class":174},[165,3521,3522,3524,3526,3528,3530,3532,3534,3536,3538,3540,3542],{"class":167,"line":1965},[165,3523,1861],{"class":238},[165,3525,3311],{"class":190},[165,3527,1642],{"class":238},[165,3529,3018],{"class":485},[165,3531,3318],{"class":174},[165,3533,3023],{"class":485},[165,3535,3496],{"class":174},[165,3537,3028],{"class":485},[165,3539,3327],{"class":238},[165,3541,3182],{"class":220},[165,3543,241],{"class":174},[165,3545,3546],{"class":167,"line":1971},[165,3547,207],{"emptyLinePlaceholder":206},[165,3549,3550,3553],{"class":167,"line":1976},[165,3551,3552],{"class":238},"      return",[165,3554,184],{"class":174},[165,3556,3557],{"class":167,"line":1982},[165,3558,3559],{"class":174},"        type: scopedActionType,\n",[165,3561,3562],{"class":167,"line":1987},[165,3563,3564],{"class":174},"        payload,\n",[165,3566,3567],{"class":167,"line":1993},[165,3568,3569],{"class":174},"      };\n",[165,3571,3572],{"class":167,"line":2028},[165,3573,3574],{"class":174},"    };\n",[165,3576,3577,3579],{"class":167,"line":2033},[165,3578,3346],{"class":238},[165,3580,3349],{"class":174},[165,3582,3583,3585,3587],{"class":167,"line":2053},[165,3584,3354],{"class":174},[165,3586,1730],{"class":238},[165,3588,184],{"class":174},[165,3590,3591,3594,3596,3599,3601,3603,3605,3607,3609,3611,3614,3616,3618,3620,3622,3624,3626,3628,3630,3632,3634,3636,3639,3641,3643,3645,3647,3649,3651,3653,3655,3657,3660,3662,3664,3667],{"class":167,"line":2062},[165,3592,3593],{"class":174},"    [",[165,3595,2963],{"class":220},[165,3597,3598],{"class":238}," in",[165,3600,3106],{"class":220},[165,3602,473],{"class":174},[165,3604,3111],{"class":238},[165,3606,2399],{"class":220},[165,3608,83],{"class":174},[165,3610,1738],{"class":190},[165,3612,3613],{"class":174},">]",[165,3615,1653],{"class":238},[165,3617,839],{"class":174},[165,3619,2658],{"class":1649},[165,3621,1653],{"class":238},[165,3623,3148],{"class":220},[165,3625,473],{"class":174},[165,3627,2566],{"class":220},[165,3629,919],{"class":174},[165,3631,2963],{"class":220},[165,3633,3159],{"class":174},[165,3635,3162],{"class":190},[165,3637,3638],{"class":174},"]) ",[165,3640,1800],{"class":238},[165,3642,3175],{"class":174},[165,3644,922],{"class":1649},[165,3646,1653],{"class":238},[165,3648,2993],{"class":220},[165,3650,473],{"class":174},[165,3652,2963],{"class":220},[165,3654,83],{"class":174},[165,3656,2557],{"class":220},[165,3658,3659],{"class":174},">, ",[165,3661,2658],{"class":1649},[165,3663,1653],{"class":238},[165,3665,3666],{"class":220}," P",[165,3668,3669],{"class":174}," }\n",[165,3671,3672],{"class":167,"line":2068},[165,3673,3674],{"class":174},"  });\n",[165,3676,3677],{"class":167,"line":2079},[165,3678,207],{"emptyLinePlaceholder":206},[165,3680,3681,3683],{"class":167,"line":2090},[165,3682,2616],{"class":238},[165,3684,184],{"class":174},[165,3686,3687],{"class":167,"line":2101},[165,3688,2633],{"class":174},[165,3690,3691],{"class":167,"line":2112},[165,3692,2638],{"class":174},[165,3694,3695],{"class":167,"line":2118},[165,3696,2429],{"class":174},[17,3698,3699],{},"Остановлюсь на некоторых аспектах типизации чуть подробнее",[17,3701,3702,3703,3705,3706],{},"должен быть генериком, который будет на лету подхватывать ключи из переданного объекта ",[21,3704,2566],{},".\nУ объекта в качестве ключа помимо строки может быть число или символ.\nЧтобы избежать проблем с типизацией, нужно достать только строки при помощи  ",[21,3707,3708],{},"Extract\u003Ckeyof Actions, string>",[17,3710,3711,3712,3714,3715,3718,3719,3722,3723,3725,3726],{},"Чтобы сгенерировать экшены с правильным payload (чтобы у ",[21,3713,2074],{}," была поддержка типизации и аргументом был именно ",[21,3716,3717],{},"user: User","),\nнужно достать второй аргумент из переданного коллбека. Для этого воспользуемся хелпером ",[21,3720,3721],{},"Parameters","\nи укажем нужный ",[21,3724,2963],{},"-  ",[21,3727,3728],{},"Parameters\u003CActions[ActionType]>[1]",[17,3730,3731],{},"Проверим, что все работает правильно:",[156,3733,3735],{"className":1623,"code":3734,"language":1626,"meta":161,"style":161},"export const usersSlice = createSlice({\n  name: 'users',\n  defaultState: {\n    userById: {} as Record\u003Cstring, User>,\n    usernameById: {} as Record\u003Cstring, string>,\n  },\n  actions: {\n    addUser: (state, user: User) => {\n      // state должен иметь тот же тип, что и defaultState\n      state.userById[user.id] = user;\n      state.usernameById[user.username] = user.id;\n    },\n    deleteUser: (state, userId: string) => {\n      const user = state.userById[userId];\n      delete state.usernameById[user.username];\n      delete state.userById[userId];\n    }\n  },\n  selectors: {\n    selectUserByUsername: (state, username: string) => state.userById[state.usernameById[username]],\n  }\n});\n\nusersSlice.actions; // можно навести на actions и увидеть его тип\n",[21,3736,3737,3751,3759,3763,3781,3799,3803,3807,3829,3833,3841,3849,3853,3875,3885,3891,3897,3901,3905,3909,3931,3935,3939,3943],{"__ignoreMap":161},[165,3738,3739,3741,3743,3745,3747,3749],{"class":167,"line":168},[165,3740,1693],{"class":238},[165,3742,1696],{"class":238},[165,3744,1699],{"class":190},[165,3746,1642],{"class":238},[165,3748,1704],{"class":220},[165,3750,1707],{"class":174},[165,3752,3753,3755,3757],{"class":167,"line":178},[165,3754,1712],{"class":174},[165,3756,1715],{"class":485},[165,3758,175],{"class":174},[165,3760,3761],{"class":167,"line":187},[165,3762,1722],{"class":174},[165,3764,3765,3767,3769,3771,3773,3775,3777,3779],{"class":167,"line":197},[165,3766,1727],{"class":174},[165,3768,1730],{"class":238},[165,3770,1733],{"class":220},[165,3772,473],{"class":174},[165,3774,1738],{"class":190},[165,3776,83],{"class":174},[165,3778,1743],{"class":220},[165,3780,1746],{"class":174},[165,3782,3783,3785,3787,3789,3791,3793,3795,3797],{"class":167,"line":203},[165,3784,1751],{"class":174},[165,3786,1730],{"class":238},[165,3788,1733],{"class":220},[165,3790,473],{"class":174},[165,3792,1738],{"class":190},[165,3794,83],{"class":174},[165,3796,1738],{"class":190},[165,3798,1746],{"class":174},[165,3800,3801],{"class":167,"line":210},[165,3802,1770],{"class":174},[165,3804,3805],{"class":167,"line":217},[165,3806,1775],{"class":174},[165,3808,3809,3811,3813,3815,3817,3819,3821,3823,3825,3827],{"class":167,"line":226},[165,3810,1780],{"class":220},[165,3812,1783],{"class":174},[165,3814,1786],{"class":1649},[165,3816,83],{"class":174},[165,3818,1791],{"class":1649},[165,3820,1653],{"class":238},[165,3822,1639],{"class":220},[165,3824,1431],{"class":174},[165,3826,1800],{"class":238},[165,3828,184],{"class":174},[165,3830,3831],{"class":167,"line":244},[165,3832,1807],{"class":213},[165,3834,3835,3837,3839],{"class":167,"line":632},[165,3836,1812],{"class":174},[165,3838,482],{"class":238},[165,3840,1817],{"class":174},[165,3842,3843,3845,3847],{"class":167,"line":646},[165,3844,1822],{"class":174},[165,3846,482],{"class":238},[165,3848,1827],{"class":174},[165,3850,3851],{"class":167,"line":651},[165,3852,1832],{"class":174},[165,3854,3855,3857,3859,3861,3863,3865,3867,3869,3871,3873],{"class":167,"line":656},[165,3856,1837],{"class":220},[165,3858,1783],{"class":174},[165,3860,1786],{"class":1649},[165,3862,83],{"class":174},[165,3864,1846],{"class":1649},[165,3866,1653],{"class":238},[165,3868,1656],{"class":190},[165,3870,1431],{"class":174},[165,3872,1800],{"class":238},[165,3874,184],{"class":174},[165,3876,3877,3879,3881,3883],{"class":167,"line":663},[165,3878,1861],{"class":238},[165,3880,1864],{"class":190},[165,3882,1642],{"class":238},[165,3884,1869],{"class":174},[165,3886,3887,3889],{"class":167,"line":679},[165,3888,1874],{"class":238},[165,3890,1877],{"class":174},[165,3892,3893,3895],{"class":167,"line":693},[165,3894,1874],{"class":238},[165,3896,1869],{"class":174},[165,3898,3899],{"class":167,"line":705},[165,3900,1888],{"class":174},[165,3902,3903],{"class":167,"line":987},[165,3904,1770],{"class":174},[165,3906,3907],{"class":167,"line":992},[165,3908,1897],{"class":174},[165,3910,3911,3913,3915,3917,3919,3921,3923,3925,3927,3929],{"class":167,"line":998},[165,3912,1903],{"class":220},[165,3914,1783],{"class":174},[165,3916,1786],{"class":1649},[165,3918,83],{"class":174},[165,3920,1912],{"class":1649},[165,3922,1653],{"class":238},[165,3924,1656],{"class":190},[165,3926,1431],{"class":174},[165,3928,1800],{"class":238},[165,3930,1923],{"class":174},[165,3932,3933],{"class":167,"line":1010},[165,3934,755],{"class":174},[165,3936,3937],{"class":167,"line":1015},[165,3938,1934],{"class":174},[165,3940,3941],{"class":167,"line":1021},[165,3942,207],{"emptyLinePlaceholder":206},[165,3944,3945,3948],{"class":167,"line":1033},[165,3946,3947],{"class":174},"usersSlice.actions; ",[165,3949,3950],{"class":213},"// можно навести на actions и увидеть его тип\n",[17,3952,3953],{},[387,3954],{"alt":3955,"src":3956},"Подсказка в vs code","/images/actions-type-hightlight.png",[12,3958,3960],{"id":3959},"reducer","Редьюсер",[17,3962,3963,3964,24,3966,3968,3969,3972],{},"По своей сути редьюсер - это чистая функция, которая принимает два аргумента - ",[21,3965,1786],{},[21,3967,3297],{}," и возвращает ",[21,3970,3971],{},"nextState",".\nОчень важно при этом, чтобы стейт был иммутабельным, ради этого обычно используются страшные конструкции вроде",[156,3974,3976],{"className":1623,"code":3975,"language":1626,"meta":161,"style":161},"const nextState = {\n  ...state,\n  userById: {\n    ...state.userById,\n    [user.id]: user, \n  }\n};\n",[21,3977,3978,3988,3996,4001,4009,4014,4018],{"__ignoreMap":161},[165,3979,3980,3982,3984,3986],{"class":167,"line":168},[165,3981,1996],{"class":238},[165,3983,3415],{"class":190},[165,3985,1642],{"class":238},[165,3987,184],{"class":174},[165,3989,3990,3993],{"class":167,"line":178},[165,3991,3992],{"class":238},"  ...",[165,3994,3995],{"class":174},"state,\n",[165,3997,3998],{"class":167,"line":187},[165,3999,4000],{"class":174},"  userById: {\n",[165,4002,4003,4006],{"class":167,"line":197},[165,4004,4005],{"class":238},"    ...",[165,4007,4008],{"class":174},"state.userById,\n",[165,4010,4011],{"class":167,"line":203},[165,4012,4013],{"class":174},"    [user.id]: user, \n",[165,4015,4016],{"class":167,"line":210},[165,4017,755],{"class":174},[165,4019,4020],{"class":167,"line":217},[165,4021,2429],{"class":174},[17,4023,4024,4025,4029,4030,4034,4035,4039],{},"Чтобы облегчить себе жизнь, для создания иммутабельного стейта предлагаю использовать\n",[1326,4026,4027],{"href":4027,"rel":4028},"https://www.npmjs.com/package/immer",[1593],"](",[1326,4031,4032],{"href":4032,"rel":4033},"https://github.com/immerjs/immer",[1593],"), в частности метод\nproduce](",[1326,4036,4037],{"href":4037,"rel":4038},"https://immerjs.github.io/immer/produce",[1593],")",[17,4041,4042,4043,4046],{},"таким образом все, что нам нужно - это вызвать внутри ",[21,4044,4045],{},"produce"," нужный коллбек (экшен), передав туда драфт стейта и payload экшена",[156,4048,4050],{"className":1623,"code":4049,"language":1626,"meta":161,"style":161},"const reducer = (state: State = defaultState, action: Action) => {\n  const nextState = produce(state, draft => {\n    actions[action.type]?.(draft as State, action.payload);\n  });\n  return nextState;\n};\n",[21,4051,4052,4084,4102,4113,4117,4123],{"__ignoreMap":161},[165,4053,4054,4056,4058,4060,4062,4064,4066,4068,4070,4072,4074,4076,4078,4080,4082],{"class":167,"line":168},[165,4055,1996],{"class":238},[165,4057,3381],{"class":220},[165,4059,1642],{"class":238},[165,4061,839],{"class":174},[165,4063,1786],{"class":1649},[165,4065,1653],{"class":238},[165,4067,2182],{"class":220},[165,4069,1642],{"class":238},[165,4071,3396],{"class":174},[165,4073,3297],{"class":1649},[165,4075,1653],{"class":238},[165,4077,2670],{"class":220},[165,4079,1431],{"class":174},[165,4081,1800],{"class":238},[165,4083,184],{"class":174},[165,4085,4086,4088,4090,4092,4094,4096,4098,4100],{"class":167,"line":178},[165,4087,3249],{"class":238},[165,4089,3415],{"class":190},[165,4091,1642],{"class":238},[165,4093,3420],{"class":220},[165,4095,3423],{"class":174},[165,4097,3426],{"class":1649},[165,4099,2010],{"class":238},[165,4101,184],{"class":174},[165,4103,4104,4107,4109,4111],{"class":167,"line":187},[165,4105,4106],{"class":174},"    actions[action.type]?.(draft ",[165,4108,1730],{"class":238},[165,4110,2182],{"class":220},[165,4112,3454],{"class":174},[165,4114,4115],{"class":167,"line":197},[165,4116,3674],{"class":174},[165,4118,4119,4121],{"class":167,"line":203},[165,4120,2616],{"class":238},[165,4122,3466],{"class":174},[165,4124,4125],{"class":167,"line":210},[165,4126,2429],{"class":174},[12,4128,868],{"id":867},[17,4130,4131,4132,4135],{},"Для работы в связке с react + redux используется хук ",[21,4133,4134],{},"useSelector"," .",[17,4137,4138,4139,4039],{},"Чтобы реакт знал и мог реагировать (делать ререндер компонента) на изменения в стейте существует метод\nuseSyncExternalStore](",[1326,4140,4141],{"href":4141,"rel":4142},"https://react.dev/reference/react/useSyncExternalStore",[1593],[17,4144,4145],{},"Например, чтобы получить актуальный стейт, можно написать следующий код:",[156,4147,4149],{"className":1623,"code":4148,"language":1626,"meta":161,"style":161},"const useStore = () => {\n  const state = useSyncExternalStore(\n    myStore.subscribe,\n    myStore.getState,\n  );\n\n  return state;\n};\n",[21,4150,4151,4167,4181,4186,4191,4195,4199,4206],{"__ignoreMap":161},[165,4152,4153,4155,4158,4160,4163,4165],{"class":167,"line":168},[165,4154,1996],{"class":238},[165,4156,4157],{"class":220}," useStore",[165,4159,1642],{"class":238},[165,4161,4162],{"class":174}," () ",[165,4164,1800],{"class":238},[165,4166,184],{"class":174},[165,4168,4169,4171,4174,4176,4179],{"class":167,"line":178},[165,4170,3249],{"class":238},[165,4172,4173],{"class":190}," state",[165,4175,1642],{"class":238},[165,4177,4178],{"class":220}," useSyncExternalStore",[165,4180,2059],{"class":174},[165,4182,4183],{"class":167,"line":187},[165,4184,4185],{"class":174},"    myStore.subscribe,\n",[165,4187,4188],{"class":167,"line":197},[165,4189,4190],{"class":174},"    myStore.getState,\n",[165,4192,4193],{"class":167,"line":203},[165,4194,2121],{"class":174},[165,4196,4197],{"class":167,"line":210},[165,4198,207],{"emptyLinePlaceholder":206},[165,4200,4201,4203],{"class":167,"line":217},[165,4202,2616],{"class":238},[165,4204,4205],{"class":174}," state;\n",[165,4207,4208],{"class":167,"line":226},[165,4209,2429],{"class":174},[17,4211,4212,4213,4216],{},"Мы могли бы даже использовать селектор, чтобы достать из стора нужные нам данные,\nоднако такая реализация будет реагировать на ",[1598,4214,4215],{},"любые"," изменения в стейте.",[17,4218,4219],{},"Мы же хотим, чтобы наш useSelector реагировал только на изменения результата селектора, а не всего стейта.\nТ.е. чтобы селектор",[156,4221,4223],{"className":1623,"code":4222,"language":1626,"meta":161,"style":161},"const username = useSelector(state => state.users.usersById['some-id'].username);\n",[21,4224,4225],{"__ignoreMap":161},[165,4226,4227,4229,4232,4234,4236,4238,4240,4242,4245,4248],{"class":167,"line":168},[165,4228,1996],{"class":238},[165,4230,4231],{"class":190}," username",[165,4233,1642],{"class":238},[165,4235,2003],{"class":220},[165,4237,1290],{"class":174},[165,4239,1786],{"class":1649},[165,4241,2010],{"class":238},[165,4243,4244],{"class":174}," state.users.usersById[",[165,4246,4247],{"class":485},"'some-id'",[165,4249,4250],{"class":174},"].username);\n",[17,4252,4253],{},"реагировал только на изменение username конкретного юзера (с id = “some-id”).",[17,4255,4256,4257,4260,4261,4264],{},"Предлагаю не писать велосипед и использовать ",[21,4258,4259],{},"useSyncExternalStoreWithSelector",".\nЭто модифицированная версия ",[21,4262,4263],{},"useSyncExternalStore"," c поддержкой селекторов и мемоизацией.",[17,4266,4267,4268,4270],{},"Таким образом хелпер для создания ",[21,4269,4134],{}," будет выглядеть следующим образом:",[156,4272,4274],{"className":1623,"code":4273,"language":1626,"meta":161,"style":161},"import type { Store as ReduxStore } from 'redux';\nimport { useSyncExternalStoreWithSelector } from 'use-sync-external-store/with-selector';\n\nexport const createUseSelector = \u003C\n  Store extends ReduxStore,\n  State extends ReturnType\u003CStore['getState']>,\n>(store: Store) => {\n  const useSelector = \u003CSelector extends (state: State) => unknown>(selector: Selector) => {\n    return useSyncExternalStoreWithSelector(\n      store.subscribe,\n      store.getState,\n      store.getState,\n      selector\n    ) as ReturnType\u003CSelector>;\n  };\n\n  return useSelector;\n};\n",[21,4275,4276,4300,4314,4318,4331,4343,4365,4384,4430,4439,4444,4449,4453,4458,4474,4478,4482,4489],{"__ignoreMap":161},[165,4277,4278,4281,4284,4287,4289,4292,4295,4298],{"class":167,"line":168},[165,4279,4280],{"class":238},"import",[165,4282,4283],{"class":238}," type",[165,4285,4286],{"class":174}," { Store ",[165,4288,1730],{"class":238},[165,4290,4291],{"class":174}," ReduxStore } ",[165,4293,4294],{"class":238},"from",[165,4296,4297],{"class":485}," 'redux'",[165,4299,241],{"class":174},[165,4301,4302,4304,4307,4309,4312],{"class":167,"line":178},[165,4303,4280],{"class":238},[165,4305,4306],{"class":174}," { useSyncExternalStoreWithSelector } ",[165,4308,4294],{"class":238},[165,4310,4311],{"class":485}," 'use-sync-external-store/with-selector'",[165,4313,241],{"class":174},[165,4315,4316],{"class":167,"line":187},[165,4317,207],{"emptyLinePlaceholder":206},[165,4319,4320,4322,4324,4327,4329],{"class":167,"line":197},[165,4321,1693],{"class":238},[165,4323,1696],{"class":238},[165,4325,4326],{"class":220}," createUseSelector",[165,4328,1642],{"class":238},[165,4330,2446],{"class":174},[165,4332,4333,4336,4338,4341],{"class":167,"line":203},[165,4334,4335],{"class":220},"  Store",[165,4337,2295],{"class":238},[165,4339,4340],{"class":220}," ReduxStore",[165,4342,175],{"class":174},[165,4344,4345,4347,4349,4352,4354,4357,4359,4362],{"class":167,"line":210},[165,4346,2304],{"class":220},[165,4348,2295],{"class":238},[165,4350,4351],{"class":220}," ReturnType",[165,4353,473],{"class":174},[165,4355,4356],{"class":220},"Store",[165,4358,919],{"class":174},[165,4360,4361],{"class":485},"'getState'",[165,4363,4364],{"class":174},"]>,\n",[165,4366,4367,4370,4373,4375,4378,4380,4382],{"class":167,"line":217},[165,4368,4369],{"class":174},">(",[165,4371,4372],{"class":1649},"store",[165,4374,1653],{"class":238},[165,4376,4377],{"class":220}," Store",[165,4379,1431],{"class":174},[165,4381,1800],{"class":238},[165,4383,184],{"class":174},[165,4385,4386,4388,4390,4392,4395,4398,4400,4402,4404,4406,4408,4410,4412,4414,4416,4419,4421,4424,4426,4428],{"class":167,"line":226},[165,4387,3249],{"class":238},[165,4389,2003],{"class":220},[165,4391,1642],{"class":238},[165,4393,4394],{"class":174}," \u003C",[165,4396,4397],{"class":220},"Selector",[165,4399,2295],{"class":238},[165,4401,839],{"class":174},[165,4403,1786],{"class":1649},[165,4405,1653],{"class":238},[165,4407,2182],{"class":220},[165,4409,1431],{"class":174},[165,4411,1800],{"class":238},[165,4413,2229],{"class":190},[165,4415,4369],{"class":174},[165,4417,4418],{"class":1649},"selector",[165,4420,1653],{"class":238},[165,4422,4423],{"class":220}," Selector",[165,4425,1431],{"class":174},[165,4427,1800],{"class":238},[165,4429,184],{"class":174},[165,4431,4432,4434,4437],{"class":167,"line":244},[165,4433,3346],{"class":238},[165,4435,4436],{"class":220}," useSyncExternalStoreWithSelector",[165,4438,2059],{"class":174},[165,4440,4441],{"class":167,"line":632},[165,4442,4443],{"class":174},"      store.subscribe,\n",[165,4445,4446],{"class":167,"line":646},[165,4447,4448],{"class":174},"      store.getState,\n",[165,4450,4451],{"class":167,"line":651},[165,4452,4448],{"class":174},[165,4454,4455],{"class":167,"line":656},[165,4456,4457],{"class":174},"      selector\n",[165,4459,4460,4463,4465,4467,4469,4471],{"class":167,"line":663},[165,4461,4462],{"class":174},"    ) ",[165,4464,1730],{"class":238},[165,4466,4351],{"class":220},[165,4468,473],{"class":174},[165,4470,4397],{"class":220},[165,4472,4473],{"class":174},">;\n",[165,4475,4476],{"class":167,"line":679},[165,4477,2638],{"class":174},[165,4479,4480],{"class":167,"line":693},[165,4481,207],{"emptyLinePlaceholder":206},[165,4483,4484,4486],{"class":167,"line":705},[165,4485,2616],{"class":238},[165,4487,4488],{"class":174}," useSelector;\n",[165,4490,4491],{"class":167,"line":987},[165,4492,2429],{"class":174},[12,4494,4496],{"id":4495},"global-store","Глобальный стор",[17,4498,4499,4500,4503],{},"В redux-toolkit есть метод ",[21,4501,4502],{},"configureStore"," для создания глобального стора.\nПредлагаю написать минималистичную версию, которая лишь объединяет редьюсеры и создает store",[156,4505,4507],{"className":1623,"code":4506,"language":1626,"meta":161,"style":161},"import type { Reducer } from 'redux';\n\ntype SliceAction\u003CType extends string = string, Payload = unknown> = {\n  type: Type,\n  payload: Payload,\n}\n\ntype SimpleSlice\u003CName extends string, ReducerType extends Reducer\u003Cany, any>> = {\n  name: Name;\n  reducer: ReducerType,\n}\n\ntype TypesFromSlices\u003CT> = T extends readonly { name: infer Name extends string, reducer: Reducer\u003Cinfer State, infer Action> }[]\n  ? Action extends SliceAction\u003Cinfer Type, infer Payload>\n  ? {\n    action: SliceAction\u003CType, Payload>,\n    state: { [P in Name]: State }\n  } : never : never\n\nexport const configureStore = \u003C\n  Slice extends SimpleSlice\u003Cstring, Reducer\u003Cany, any, any>>,\n  State extends TypesFromSlices\u003CSlice[]>['state'],\n  Action extends TypesFromSlices\u003CSlice[]>['action'],\n>(slices: Slice[]) => {\n  const reducersByName = slices.reduce((acc, current) => {\n    acc[current.name] = current.reducer;\n    return acc;\n  }, {} as Record\u003Cstring, Reducer>);\n\n  const reducer = combineReducers(reducersByName) as Reducer\u003CState, Action>;\n\n  const store = createStore(reducer);\n\n  return {\n    store,\n  };\n};\n",[21,4508,4509,4524,4528,4561,4571,4581,4585,4589,4630,4640,4652,4656,4660,4723,4748,4754,4773,4799,4815,4819,4832,4864,4885,4904,4923,4952,4962,4968,4986,4990,5019,5023,5038,5042,5048,5053,5057],{"__ignoreMap":161},[165,4510,4511,4513,4515,4518,4520,4522],{"class":167,"line":168},[165,4512,4280],{"class":238},[165,4514,4283],{"class":238},[165,4516,4517],{"class":174}," { Reducer } ",[165,4519,4294],{"class":238},[165,4521,4297],{"class":485},[165,4523,241],{"class":174},[165,4525,4526],{"class":167,"line":178},[165,4527,207],{"emptyLinePlaceholder":206},[165,4529,4530,4532,4535,4537,4539,4541,4543,4545,4547,4549,4551,4553,4555,4557,4559],{"class":167,"line":187},[165,4531,922],{"class":238},[165,4533,4534],{"class":220}," SliceAction",[165,4536,473],{"class":174},[165,4538,2675],{"class":220},[165,4540,2295],{"class":238},[165,4542,1656],{"class":190},[165,4544,1642],{"class":238},[165,4546,1656],{"class":190},[165,4548,83],{"class":174},[165,4550,2159],{"class":220},[165,4552,1642],{"class":238},[165,4554,2229],{"class":190},[165,4556,2167],{"class":174},[165,4558,482],{"class":238},[165,4560,184],{"class":174},[165,4562,4563,4565,4567,4569],{"class":167,"line":197},[165,4564,2702],{"class":1649},[165,4566,1653],{"class":238},[165,4568,2707],{"class":220},[165,4570,175],{"class":174},[165,4572,4573,4575,4577,4579],{"class":167,"line":203},[165,4574,2189],{"class":1649},[165,4576,1653],{"class":238},[165,4578,2719],{"class":220},[165,4580,175],{"class":174},[165,4582,4583],{"class":167,"line":210},[165,4584,200],{"class":174},[165,4586,4587],{"class":167,"line":217},[165,4588,207],{"emptyLinePlaceholder":206},[165,4590,4591,4593,4596,4598,4600,4602,4604,4606,4609,4611,4614,4616,4619,4621,4623,4626,4628],{"class":167,"line":226},[165,4592,922],{"class":238},[165,4594,4595],{"class":220}," SimpleSlice",[165,4597,473],{"class":174},[165,4599,2557],{"class":220},[165,4601,2295],{"class":238},[165,4603,1656],{"class":190},[165,4605,83],{"class":174},[165,4607,4608],{"class":220},"ReducerType",[165,4610,2295],{"class":238},[165,4612,4613],{"class":220}," Reducer",[165,4615,473],{"class":174},[165,4617,4618],{"class":190},"any",[165,4620,83],{"class":174},[165,4622,4618],{"class":190},[165,4624,4625],{"class":174},">> ",[165,4627,482],{"class":238},[165,4629,184],{"class":174},[165,4631,4632,4634,4636,4638],{"class":167,"line":244},[165,4633,2382],{"class":1649},[165,4635,1653],{"class":238},[165,4637,2387],{"class":220},[165,4639,241],{"class":174},[165,4641,4642,4645,4647,4650],{"class":167,"line":632},[165,4643,4644],{"class":1649},"  reducer",[165,4646,1653],{"class":238},[165,4648,4649],{"class":220}," ReducerType",[165,4651,175],{"class":174},[165,4653,4654],{"class":167,"line":646},[165,4655,200],{"class":174},[165,4657,4658],{"class":167,"line":651},[165,4659,207],{"emptyLinePlaceholder":206},[165,4661,4662,4664,4667,4669,4672,4674,4676,4679,4681,4684,4686,4688,4690,4693,4695,4697,4699,4701,4703,4705,4707,4709,4712,4714,4716,4718,4720],{"class":167,"line":656},[165,4663,922],{"class":238},[165,4665,4666],{"class":220}," TypesFromSlices",[165,4668,473],{"class":174},[165,4670,4671],{"class":220},"T",[165,4673,2167],{"class":174},[165,4675,482],{"class":238},[165,4677,4678],{"class":220}," T",[165,4680,2295],{"class":238},[165,4682,4683],{"class":238}," readonly",[165,4685,3175],{"class":174},[165,4687,3318],{"class":1649},[165,4689,1653],{"class":238},[165,4691,4692],{"class":238}," infer",[165,4694,2387],{"class":220},[165,4696,2295],{"class":238},[165,4698,1656],{"class":190},[165,4700,83],{"class":174},[165,4702,3959],{"class":1649},[165,4704,1653],{"class":238},[165,4706,4613],{"class":220},[165,4708,473],{"class":174},[165,4710,4711],{"class":238},"infer",[165,4713,2182],{"class":220},[165,4715,83],{"class":174},[165,4717,4711],{"class":238},[165,4719,2670],{"class":220},[165,4721,4722],{"class":174},"> }[]\n",[165,4724,4725,4728,4730,4732,4734,4736,4738,4740,4742,4744,4746],{"class":167,"line":663},[165,4726,4727],{"class":238},"  ?",[165,4729,2670],{"class":220},[165,4731,2295],{"class":238},[165,4733,4534],{"class":220},[165,4735,473],{"class":174},[165,4737,4711],{"class":238},[165,4739,2707],{"class":220},[165,4741,83],{"class":174},[165,4743,4711],{"class":238},[165,4745,2719],{"class":220},[165,4747,489],{"class":174},[165,4749,4750,4752],{"class":167,"line":679},[165,4751,4727],{"class":238},[165,4753,184],{"class":174},[165,4755,4756,4759,4761,4763,4765,4767,4769,4771],{"class":167,"line":693},[165,4757,4758],{"class":1649},"    action",[165,4760,1653],{"class":238},[165,4762,4534],{"class":220},[165,4764,473],{"class":174},[165,4766,2675],{"class":220},[165,4768,83],{"class":174},[165,4770,2159],{"class":220},[165,4772,1746],{"class":174},[165,4774,4775,4778,4780,4783,4786,4788,4790,4793,4795,4797],{"class":167,"line":705},[165,4776,4777],{"class":1649},"    state",[165,4779,1653],{"class":238},[165,4781,4782],{"class":174}," { [",[165,4784,4785],{"class":220},"P",[165,4787,3598],{"class":238},[165,4789,2387],{"class":220},[165,4791,4792],{"class":174},"]",[165,4794,1653],{"class":238},[165,4796,2182],{"class":220},[165,4798,3669],{"class":174},[165,4800,4801,4804,4806,4809,4812],{"class":167,"line":987},[165,4802,4803],{"class":174},"  } ",[165,4805,1653],{"class":238},[165,4807,4808],{"class":190}," never",[165,4810,4811],{"class":238}," :",[165,4813,4814],{"class":190}," never\n",[165,4816,4817],{"class":167,"line":992},[165,4818,207],{"emptyLinePlaceholder":206},[165,4820,4821,4823,4825,4828,4830],{"class":167,"line":998},[165,4822,1693],{"class":238},[165,4824,1696],{"class":238},[165,4826,4827],{"class":220}," configureStore",[165,4829,1642],{"class":238},[165,4831,2446],{"class":174},[165,4833,4834,4837,4839,4841,4843,4845,4847,4850,4852,4854,4856,4858,4860,4862],{"class":167,"line":1010},[165,4835,4836],{"class":220},"  Slice",[165,4838,2295],{"class":238},[165,4840,4595],{"class":220},[165,4842,473],{"class":174},[165,4844,1738],{"class":190},[165,4846,83],{"class":174},[165,4848,4849],{"class":220},"Reducer",[165,4851,473],{"class":174},[165,4853,4618],{"class":190},[165,4855,83],{"class":174},[165,4857,4618],{"class":190},[165,4859,83],{"class":174},[165,4861,4618],{"class":190},[165,4863,2344],{"class":174},[165,4865,4866,4868,4870,4872,4874,4877,4880,4883],{"class":167,"line":1015},[165,4867,2304],{"class":220},[165,4869,2295],{"class":238},[165,4871,4666],{"class":220},[165,4873,473],{"class":174},[165,4875,4876],{"class":220},"Slice",[165,4878,4879],{"class":174},"[]>[",[165,4881,4882],{"class":485},"'state'",[165,4884,3165],{"class":174},[165,4886,4887,4889,4891,4893,4895,4897,4899,4902],{"class":167,"line":1021},[165,4888,3170],{"class":220},[165,4890,2295],{"class":238},[165,4892,4666],{"class":220},[165,4894,473],{"class":174},[165,4896,4876],{"class":220},[165,4898,4879],{"class":174},[165,4900,4901],{"class":485},"'action'",[165,4903,3165],{"class":174},[165,4905,4906,4908,4911,4913,4916,4919,4921],{"class":167,"line":1033},[165,4907,4369],{"class":174},[165,4909,4910],{"class":1649},"slices",[165,4912,1653],{"class":238},[165,4914,4915],{"class":220}," Slice",[165,4917,4918],{"class":174},"[]) ",[165,4920,1800],{"class":238},[165,4922,184],{"class":174},[165,4924,4925,4927,4930,4932,4935,4937,4939,4941,4943,4946,4948,4950],{"class":167,"line":1038},[165,4926,3249],{"class":238},[165,4928,4929],{"class":190}," reducersByName",[165,4931,1642],{"class":238},[165,4933,4934],{"class":174}," slices.",[165,4936,3286],{"class":220},[165,4938,3289],{"class":174},[165,4940,3292],{"class":1649},[165,4942,83],{"class":174},[165,4944,4945],{"class":1649},"current",[165,4947,1431],{"class":174},[165,4949,1800],{"class":238},[165,4951,184],{"class":174},[165,4953,4954,4957,4959],{"class":167,"line":1044},[165,4955,4956],{"class":174},"    acc[current.name] ",[165,4958,482],{"class":238},[165,4960,4961],{"class":174}," current.reducer;\n",[165,4963,4964,4966],{"class":167,"line":1900},[165,4965,3346],{"class":238},[165,4967,3349],{"class":174},[165,4969,4970,4972,4974,4976,4978,4980,4982,4984],{"class":167,"line":1926},[165,4971,3354],{"class":174},[165,4973,1730],{"class":238},[165,4975,1733],{"class":220},[165,4977,473],{"class":174},[165,4979,1738],{"class":190},[165,4981,83],{"class":174},[165,4983,4849],{"class":220},[165,4985,3370],{"class":174},[165,4987,4988],{"class":167,"line":1931},[165,4989,207],{"emptyLinePlaceholder":206},[165,4991,4992,4994,4996,4998,5001,5004,5006,5008,5010,5012,5014,5017],{"class":167,"line":1937},[165,4993,3249],{"class":238},[165,4995,3381],{"class":190},[165,4997,1642],{"class":238},[165,4999,5000],{"class":220}," combineReducers",[165,5002,5003],{"class":174},"(reducersByName) ",[165,5005,1730],{"class":238},[165,5007,4613],{"class":220},[165,5009,473],{"class":174},[165,5011,2154],{"class":220},[165,5013,83],{"class":174},[165,5015,5016],{"class":220},"Action",[165,5018,4473],{"class":174},[165,5020,5021],{"class":167,"line":1942},[165,5022,207],{"emptyLinePlaceholder":206},[165,5024,5025,5027,5030,5032,5035],{"class":167,"line":1951},[165,5026,3249],{"class":238},[165,5028,5029],{"class":190}," store",[165,5031,1642],{"class":238},[165,5033,5034],{"class":220}," createStore",[165,5036,5037],{"class":174},"(reducer);\n",[165,5039,5040],{"class":167,"line":1960},[165,5041,207],{"emptyLinePlaceholder":206},[165,5043,5044,5046],{"class":167,"line":1965},[165,5045,2616],{"class":238},[165,5047,184],{"class":174},[165,5049,5050],{"class":167,"line":1971},[165,5051,5052],{"class":174},"    store,\n",[165,5054,5055],{"class":167,"line":1976},[165,5056,2638],{"class":174},[165,5058,5059],{"class":167,"line":1982},[165,5060,2429],{"class":174},[17,5062,5063,5064,5067,5068,5070,5071,5074,5075,5077,5078,24,5080,5082,5083,5085,5086,5088,5089,24,5091,5093,5094,5096,5097,24,5099,5101,5102,24,5104],{},"Чтобы правильно типизировать созданный стор, нужно указать стейт и экшены редьюсера,\nкоторый будет создан при помощи ",[21,5065,5066],{},"combineReducers",".\nМы можем извлечь стейт и экшены из редьюсеров при помощи ",[21,5069,4711],{},".\nВ хелпере ",[21,5072,5073],{},"TypesFromSlices"," мы постепенно проверяем сначала, что ",[21,5076,4671],{}," расширяет массив объектов,\nгде есть два интересующих нас поля - ",[21,5079,3318],{},[21,5081,3959],{},". Мы можем вытащить типы этих полей при помощи ",[21,5084,4711],{},".\nПохожим образом при помощи ",[21,5087,4711],{}," можно вытащить типы ",[21,5090,2154],{},[21,5092,5016],{},".\nИз ",[21,5095,5016],{}," в свою очередь можно достать ",[21,5098,2675],{},[21,5100,2159],{},".\nПосле этого мы можем вернуть извлеченные типы для ",[21,5103,3297],{},[21,5105,1786],{},[12,5107,5109],{"id":5108},"bring-all-together","Собираем все вместе",[156,5111,5114],{"className":1623,"code":5112,"filename":5113,"language":1626,"meta":161,"style":161},"\nimport { createStore, combineReducers } from 'redux';\nimport type { Store as ReduxStore, Reducer } from 'redux';\nimport { produce } from 'immer';\nimport { useSyncExternalStoreWithSelector } from 'use-sync-external-store/with-selector';\n\ntype SliceActionCreator\u003CState, Payload = any> = (state: State, payload: Payload) => void\n\ntype SliceSelector\u003CState, Payload = any> = (state: State, payload: Payload) => void\n\ntype Scoped\u003CString extends string, Scope extends string> = `${Scope}/${String}`;\n\ntype CreateSliceProps\u003C\n  Name extends string,\n  State extends Record\u003Cstring, unknown>,\n  Actions extends Record\u003Cstring, SliceActionCreator\u003CState>>,\n  Selectors extends Record\u003Cstring, SliceSelector\u003CState>>\n> = {\n  name: Name\n  actions: Actions\n  defaultState: State\n  selectors: Selectors\n}\n\nexport const createSlice = \u003C\n  Name extends string,\n  State extends Record\u003Cstring, unknown>,\n  Actions extends Record\u003Cstring, SliceActionCreator\u003CState>>,\n  ActionKey extends Extract\u003Ckeyof Actions, string>,\n  ScopedActionType extends Scoped\u003CActionKey, Name>,\n  Selectors extends Record\u003Cstring, SliceSelector\u003CState>>,\n  ActionPayload extends Parameters\u003CActions[ActionKey]>[1],\n  Action extends { type: ScopedActionType, payload: ActionPayload },\n>({\n    name,\n    actions,\n    defaultState,\n    selectors,\n  }: CreateSliceProps\u003CName, State, Actions, Selectors>) => {\n  const actionKeys = Object.keys(actions) as ActionKey[];\n  const actionTypeByActionKey = actionKeys.reduce((acc, action) => {\n    const scopedActionType = `${name}/${action}` as ScopedActionType;\n    acc[scopedActionType] = action;\n    return acc;\n  }, {} as Record\u003CScopedActionType, ActionKey>);\n\n  const reducer = (state: State = defaultState, action: Action) => {\n    const nextState = produce(state, draft => {\n      const actionType = actionTypeByActionKey[action.type];\n      actions[actionType]?.(draft as State, action.payload);\n    });\n    return nextState;\n  };\n\n  const sliceActions = actionKeys.reduce((acc, curr) => {\n    acc[curr] = (payload) => {\n      const scopedActionType = `${name}/${curr}` as ScopedActionType;\n\n      return {\n        type: scopedActionType,\n        payload,\n      };\n    };\n    return acc;\n  }, {} as {\n    [ActionKey in Extract\u003Ckeyof Actions, string>]: \u003CP extends Parameters\u003CActions[ActionKey]>[1]>(payload: P) => { type: Scoped\u003CActionKey, Name>, payload: P }\n  });\n\n  return {\n    name,\n    reducer,\n    actions: sliceActions,\n    selectors: selectors,\n  };\n};\n\ntype SliceAction\u003CType extends string = string, Payload = unknown> = {\n  type: Type,\n  payload: Payload,\n}\n\ntype SimpleSlice\u003CName extends string, ReducerType extends Reducer\u003Cany, any>> = {\n  name: Name;\n  reducer: ReducerType,\n}\n\ntype TypesFromSlices\u003CT> = T extends { name: infer Name extends string, reducer: Reducer\u003Cinfer State, infer Action> }[]\n  ? Action extends SliceAction\u003Cinfer Type, infer Payload>\n  ? {\n    action: SliceAction\u003CType, Payload>,\n    state: { [P in Name]: State }\n  } : never : never\n\nexport const configureStore = \u003C\n  Slice extends SimpleSlice\u003Cstring, Reducer\u003Cany, any, any>>,\n  State extends TypesFromSlices\u003CSlice[]>['state'],\n  Action extends TypesFromSlices\u003CSlice[]>['action'],\n>(slices: Slice[]) => {\n  const reducersByName = slices.reduce((acc, current) => {\n    acc[current.name] = current.reducer;\n    return acc;\n  }, {} as Record\u003Cstring, Reducer>);\n\n  const reducer = combineReducers(reducersByName) as Reducer\u003CState, Action>;\n\n  const store = createStore(reducer);\n\n  return {\n    store,\n  };\n};\n\nexport const createUseSelector = \u003C\n  Store extends ReduxStore,\n  State extends ReturnType\u003CStore['getState']>,\n>(store: Store) => {\n  const useSelector = \u003CSelector extends (state: State) => unknown>(selector: Selector) => {\n    return useSyncExternalStoreWithSelector(\n      store.subscribe,\n      store.getState,\n      store.getState,\n      selector\n    ) as ReturnType\u003CSelector>;\n  };\n\n  return useSelector;\n};\n\n","myReduxToolkit.ts",[21,5115,5116,5120,5133,5152,5166,5178,5182,5227,5231,5275,5279,5317,5321,5329,5339,5357,5379,5401,5409,5418,5427,5436,5445,5449,5453,5465,5475,5493,5515,5535,5553,5575,5597,5621,5625,5629,5633,5637,5641,5671,5691,5717,5741,5749,5755,5773,5777,5809,5827,5837,5847,5852,5859,5864,5869,5896,5913,5938,5943,5950,5955,5960,5965,5970,5977,5986,6070,6075,6080,6087,6092,6097,6102,6108,6113,6118,6123,6156,6167,6178,6183,6188,6225,6236,6247,6252,6257,6312,6337,6344,6363,6386,6399,6404,6417,6448,6467,6486,6503,6530,6539,6546,6565,6570,6597,6602,6615,6620,6627,6632,6637,6642,6647,6660,6671,6690,6707,6750,6759,6764,6769,6774,6779,6794,6799,6804,6811],{"__ignoreMap":161},[165,5117,5118],{"class":167,"line":168},[165,5119,207],{"emptyLinePlaceholder":206},[165,5121,5122,5124,5127,5129,5131],{"class":167,"line":178},[165,5123,4280],{"class":238},[165,5125,5126],{"class":174}," { createStore, combineReducers } ",[165,5128,4294],{"class":238},[165,5130,4297],{"class":485},[165,5132,241],{"class":174},[165,5134,5135,5137,5139,5141,5143,5146,5148,5150],{"class":167,"line":187},[165,5136,4280],{"class":238},[165,5138,4283],{"class":238},[165,5140,4286],{"class":174},[165,5142,1730],{"class":238},[165,5144,5145],{"class":174}," ReduxStore, Reducer } ",[165,5147,4294],{"class":238},[165,5149,4297],{"class":485},[165,5151,241],{"class":174},[165,5153,5154,5156,5159,5161,5164],{"class":167,"line":197},[165,5155,4280],{"class":238},[165,5157,5158],{"class":174}," { produce } ",[165,5160,4294],{"class":238},[165,5162,5163],{"class":485}," 'immer'",[165,5165,241],{"class":174},[165,5167,5168,5170,5172,5174,5176],{"class":167,"line":203},[165,5169,4280],{"class":238},[165,5171,4306],{"class":174},[165,5173,4294],{"class":238},[165,5175,4311],{"class":485},[165,5177,241],{"class":174},[165,5179,5180],{"class":167,"line":210},[165,5181,207],{"emptyLinePlaceholder":206},[165,5183,5184,5186,5188,5190,5192,5194,5196,5198,5200,5202,5204,5206,5208,5210,5212,5214,5216,5218,5220,5222,5224],{"class":167,"line":217},[165,5185,922],{"class":238},[165,5187,2149],{"class":220},[165,5189,473],{"class":174},[165,5191,2154],{"class":220},[165,5193,83],{"class":174},[165,5195,2159],{"class":220},[165,5197,1642],{"class":238},[165,5199,2164],{"class":190},[165,5201,2167],{"class":174},[165,5203,482],{"class":238},[165,5205,839],{"class":174},[165,5207,1786],{"class":1649},[165,5209,1653],{"class":238},[165,5211,2182],{"class":220},[165,5213,83],{"class":174},[165,5215,2658],{"class":1649},[165,5217,1653],{"class":238},[165,5219,2719],{"class":220},[165,5221,1431],{"class":174},[165,5223,1800],{"class":238},[165,5225,5226],{"class":190}," void\n",[165,5228,5229],{"class":167,"line":226},[165,5230,207],{"emptyLinePlaceholder":206},[165,5232,5233,5235,5237,5239,5241,5243,5245,5247,5249,5251,5253,5255,5257,5259,5261,5263,5265,5267,5269,5271,5273],{"class":167,"line":244},[165,5234,922],{"class":238},[165,5236,2216],{"class":220},[165,5238,473],{"class":174},[165,5240,2154],{"class":220},[165,5242,83],{"class":174},[165,5244,2159],{"class":220},[165,5246,1642],{"class":238},[165,5248,2164],{"class":190},[165,5250,2167],{"class":174},[165,5252,482],{"class":238},[165,5254,839],{"class":174},[165,5256,1786],{"class":1649},[165,5258,1653],{"class":238},[165,5260,2182],{"class":220},[165,5262,83],{"class":174},[165,5264,2658],{"class":1649},[165,5266,1653],{"class":238},[165,5268,2719],{"class":220},[165,5270,1431],{"class":174},[165,5272,1800],{"class":238},[165,5274,5226],{"class":190},[165,5276,5277],{"class":167,"line":632},[165,5278,207],{"emptyLinePlaceholder":206},[165,5280,5281,5283,5285,5287,5289,5291,5293,5295,5297,5299,5301,5303,5305,5307,5309,5311,5313,5315],{"class":167,"line":646},[165,5282,922],{"class":238},[165,5284,2993],{"class":220},[165,5286,473],{"class":174},[165,5288,2998],{"class":220},[165,5290,2295],{"class":238},[165,5292,1656],{"class":190},[165,5294,83],{"class":174},[165,5296,3007],{"class":220},[165,5298,2295],{"class":238},[165,5300,1656],{"class":190},[165,5302,2167],{"class":174},[165,5304,482],{"class":238},[165,5306,3018],{"class":485},[165,5308,3007],{"class":220},[165,5310,3023],{"class":485},[165,5312,2998],{"class":220},[165,5314,3028],{"class":485},[165,5316,241],{"class":174},[165,5318,5319],{"class":167,"line":651},[165,5320,207],{"emptyLinePlaceholder":206},[165,5322,5323,5325,5327],{"class":167,"line":656},[165,5324,922],{"class":238},[165,5326,2284],{"class":220},[165,5328,2287],{"class":174},[165,5330,5331,5333,5335,5337],{"class":167,"line":663},[165,5332,2292],{"class":220},[165,5334,2295],{"class":238},[165,5336,1656],{"class":190},[165,5338,175],{"class":174},[165,5340,5341,5343,5345,5347,5349,5351,5353,5355],{"class":167,"line":679},[165,5342,2304],{"class":220},[165,5344,2295],{"class":238},[165,5346,1733],{"class":220},[165,5348,473],{"class":174},[165,5350,1738],{"class":190},[165,5352,83],{"class":174},[165,5354,2317],{"class":190},[165,5356,1746],{"class":174},[165,5358,5359,5361,5363,5365,5367,5369,5371,5373,5375,5377],{"class":167,"line":693},[165,5360,2324],{"class":220},[165,5362,2295],{"class":238},[165,5364,1733],{"class":220},[165,5366,473],{"class":174},[165,5368,1738],{"class":190},[165,5370,83],{"class":174},[165,5372,2337],{"class":220},[165,5374,473],{"class":174},[165,5376,2154],{"class":220},[165,5378,2344],{"class":174},[165,5380,5381,5383,5385,5387,5389,5391,5393,5395,5397,5399],{"class":167,"line":705},[165,5382,2349],{"class":220},[165,5384,2295],{"class":238},[165,5386,1733],{"class":220},[165,5388,473],{"class":174},[165,5390,1738],{"class":190},[165,5392,83],{"class":174},[165,5394,2362],{"class":220},[165,5396,473],{"class":174},[165,5398,2154],{"class":220},[165,5400,2369],{"class":174},[165,5402,5403,5405,5407],{"class":167,"line":987},[165,5404,2167],{"class":174},[165,5406,482],{"class":238},[165,5408,184],{"class":174},[165,5410,5411,5413,5415],{"class":167,"line":992},[165,5412,2382],{"class":1649},[165,5414,1653],{"class":238},[165,5416,5417],{"class":220}," Name\n",[165,5419,5420,5422,5424],{"class":167,"line":998},[165,5421,2394],{"class":1649},[165,5423,1653],{"class":238},[165,5425,5426],{"class":220}," Actions\n",[165,5428,5429,5431,5433],{"class":167,"line":1010},[165,5430,2406],{"class":1649},[165,5432,1653],{"class":238},[165,5434,5435],{"class":220}," State\n",[165,5437,5438,5440,5442],{"class":167,"line":1015},[165,5439,2417],{"class":1649},[165,5441,1653],{"class":238},[165,5443,5444],{"class":220}," Selectors\n",[165,5446,5447],{"class":167,"line":1021},[165,5448,200],{"class":174},[165,5450,5451],{"class":167,"line":1033},[165,5452,207],{"emptyLinePlaceholder":206},[165,5454,5455,5457,5459,5461,5463],{"class":167,"line":1038},[165,5456,1693],{"class":238},[165,5458,1696],{"class":238},[165,5460,1704],{"class":220},[165,5462,1642],{"class":238},[165,5464,2446],{"class":174},[165,5466,5467,5469,5471,5473],{"class":167,"line":1044},[165,5468,2292],{"class":220},[165,5470,2295],{"class":238},[165,5472,1656],{"class":190},[165,5474,175],{"class":174},[165,5476,5477,5479,5481,5483,5485,5487,5489,5491],{"class":167,"line":1900},[165,5478,2304],{"class":220},[165,5480,2295],{"class":238},[165,5482,1733],{"class":220},[165,5484,473],{"class":174},[165,5486,1738],{"class":190},[165,5488,83],{"class":174},[165,5490,2317],{"class":190},[165,5492,1746],{"class":174},[165,5494,5495,5497,5499,5501,5503,5505,5507,5509,5511,5513],{"class":167,"line":1926},[165,5496,2324],{"class":220},[165,5498,2295],{"class":238},[165,5500,1733],{"class":220},[165,5502,473],{"class":174},[165,5504,1738],{"class":190},[165,5506,83],{"class":174},[165,5508,2337],{"class":220},[165,5510,473],{"class":174},[165,5512,2154],{"class":220},[165,5514,2344],{"class":174},[165,5516,5517,5519,5521,5523,5525,5527,5529,5531,5533],{"class":167,"line":1931},[165,5518,3101],{"class":220},[165,5520,2295],{"class":238},[165,5522,3106],{"class":220},[165,5524,473],{"class":174},[165,5526,3111],{"class":238},[165,5528,2399],{"class":220},[165,5530,83],{"class":174},[165,5532,1738],{"class":190},[165,5534,1746],{"class":174},[165,5536,5537,5539,5541,5543,5545,5547,5549,5551],{"class":167,"line":1937},[165,5538,3124],{"class":220},[165,5540,2295],{"class":238},[165,5542,2993],{"class":220},[165,5544,473],{"class":174},[165,5546,2963],{"class":220},[165,5548,83],{"class":174},[165,5550,2557],{"class":220},[165,5552,1746],{"class":174},[165,5554,5555,5557,5559,5561,5563,5565,5567,5569,5571,5573],{"class":167,"line":1942},[165,5556,2349],{"class":220},[165,5558,2295],{"class":238},[165,5560,1733],{"class":220},[165,5562,473],{"class":174},[165,5564,1738],{"class":190},[165,5566,83],{"class":174},[165,5568,2362],{"class":220},[165,5570,473],{"class":174},[165,5572,2154],{"class":220},[165,5574,2344],{"class":174},[165,5576,5577,5579,5581,5583,5585,5587,5589,5591,5593,5595],{"class":167,"line":1951},[165,5578,3143],{"class":220},[165,5580,2295],{"class":238},[165,5582,3148],{"class":220},[165,5584,473],{"class":174},[165,5586,2566],{"class":220},[165,5588,919],{"class":174},[165,5590,2963],{"class":220},[165,5592,3159],{"class":174},[165,5594,3162],{"class":190},[165,5596,3165],{"class":174},[165,5598,5599,5601,5603,5605,5607,5609,5611,5613,5615,5617,5619],{"class":167,"line":1960},[165,5600,3170],{"class":220},[165,5602,2295],{"class":238},[165,5604,3175],{"class":174},[165,5606,922],{"class":1649},[165,5608,1653],{"class":238},[165,5610,3182],{"class":220},[165,5612,83],{"class":174},[165,5614,2658],{"class":1649},[165,5616,1653],{"class":238},[165,5618,3191],{"class":220},[165,5620,3194],{"class":174},[165,5622,5623],{"class":167,"line":1965},[165,5624,2523],{"class":174},[165,5626,5627],{"class":167,"line":1971},[165,5628,2528],{"class":174},[165,5630,5631],{"class":167,"line":1976},[165,5632,2533],{"class":174},[165,5634,5635],{"class":167,"line":1982},[165,5636,2538],{"class":174},[165,5638,5639],{"class":167,"line":1987},[165,5640,2543],{"class":174},[165,5642,5643,5645,5647,5649,5651,5653,5655,5657,5659,5661,5663,5665,5667,5669],{"class":167,"line":1993},[165,5644,2548],{"class":174},[165,5646,1653],{"class":238},[165,5648,2284],{"class":220},[165,5650,473],{"class":174},[165,5652,2557],{"class":220},[165,5654,83],{"class":174},[165,5656,2154],{"class":220},[165,5658,83],{"class":174},[165,5660,2566],{"class":220},[165,5662,83],{"class":174},[165,5664,2571],{"class":220},[165,5666,2574],{"class":174},[165,5668,1800],{"class":238},[165,5670,184],{"class":174},[165,5672,5673,5675,5677,5679,5681,5683,5685,5687,5689],{"class":167,"line":2028},[165,5674,3249],{"class":238},[165,5676,3252],{"class":190},[165,5678,1642],{"class":238},[165,5680,3257],{"class":174},[165,5682,3260],{"class":220},[165,5684,3263],{"class":174},[165,5686,1730],{"class":238},[165,5688,3268],{"class":220},[165,5690,3271],{"class":174},[165,5692,5693,5695,5697,5699,5701,5703,5705,5707,5709,5711,5713,5715],{"class":167,"line":2033},[165,5694,3249],{"class":238},[165,5696,3278],{"class":190},[165,5698,1642],{"class":238},[165,5700,3283],{"class":174},[165,5702,3286],{"class":220},[165,5704,3289],{"class":174},[165,5706,3292],{"class":1649},[165,5708,83],{"class":174},[165,5710,3297],{"class":1649},[165,5712,1431],{"class":174},[165,5714,1800],{"class":238},[165,5716,184],{"class":174},[165,5718,5719,5721,5723,5725,5727,5729,5731,5733,5735,5737,5739],{"class":167,"line":2053},[165,5720,3308],{"class":238},[165,5722,3311],{"class":190},[165,5724,1642],{"class":238},[165,5726,3018],{"class":485},[165,5728,3318],{"class":174},[165,5730,3023],{"class":485},[165,5732,3297],{"class":174},[165,5734,3028],{"class":485},[165,5736,3327],{"class":238},[165,5738,3182],{"class":220},[165,5740,241],{"class":174},[165,5742,5743,5745,5747],{"class":167,"line":2062},[165,5744,3336],{"class":174},[165,5746,482],{"class":238},[165,5748,3341],{"class":174},[165,5750,5751,5753],{"class":167,"line":2068},[165,5752,3346],{"class":238},[165,5754,3349],{"class":174},[165,5756,5757,5759,5761,5763,5765,5767,5769,5771],{"class":167,"line":2079},[165,5758,3354],{"class":174},[165,5760,1730],{"class":238},[165,5762,1733],{"class":220},[165,5764,473],{"class":174},[165,5766,3363],{"class":220},[165,5768,83],{"class":174},[165,5770,2963],{"class":220},[165,5772,3370],{"class":174},[165,5774,5775],{"class":167,"line":2090},[165,5776,207],{"emptyLinePlaceholder":206},[165,5778,5779,5781,5783,5785,5787,5789,5791,5793,5795,5797,5799,5801,5803,5805,5807],{"class":167,"line":2101},[165,5780,3249],{"class":238},[165,5782,3381],{"class":220},[165,5784,1642],{"class":238},[165,5786,839],{"class":174},[165,5788,1786],{"class":1649},[165,5790,1653],{"class":238},[165,5792,2182],{"class":220},[165,5794,1642],{"class":238},[165,5796,3396],{"class":174},[165,5798,3297],{"class":1649},[165,5800,1653],{"class":238},[165,5802,2670],{"class":220},[165,5804,1431],{"class":174},[165,5806,1800],{"class":238},[165,5808,184],{"class":174},[165,5810,5811,5813,5815,5817,5819,5821,5823,5825],{"class":167,"line":2112},[165,5812,3308],{"class":238},[165,5814,3415],{"class":190},[165,5816,1642],{"class":238},[165,5818,3420],{"class":220},[165,5820,3423],{"class":174},[165,5822,3426],{"class":1649},[165,5824,2010],{"class":238},[165,5826,184],{"class":174},[165,5828,5829,5831,5833,5835],{"class":167,"line":2118},[165,5830,1861],{"class":238},[165,5832,3437],{"class":190},[165,5834,1642],{"class":238},[165,5836,3442],{"class":174},[165,5838,5839,5841,5843,5845],{"class":167,"line":2124},[165,5840,3447],{"class":174},[165,5842,1730],{"class":238},[165,5844,2182],{"class":220},[165,5846,3454],{"class":174},[165,5848,5850],{"class":167,"line":5849},51,[165,5851,3459],{"class":174},[165,5853,5855,5857],{"class":167,"line":5854},52,[165,5856,3346],{"class":238},[165,5858,3466],{"class":174},[165,5860,5862],{"class":167,"line":5861},53,[165,5863,2638],{"class":174},[165,5865,5867],{"class":167,"line":5866},54,[165,5868,207],{"emptyLinePlaceholder":206},[165,5870,5872,5874,5876,5878,5880,5882,5884,5886,5888,5890,5892,5894],{"class":167,"line":5871},55,[165,5873,3249],{"class":238},[165,5875,3481],{"class":190},[165,5877,1642],{"class":238},[165,5879,3283],{"class":174},[165,5881,3286],{"class":220},[165,5883,3289],{"class":174},[165,5885,3292],{"class":1649},[165,5887,83],{"class":174},[165,5889,3496],{"class":1649},[165,5891,1431],{"class":174},[165,5893,1800],{"class":238},[165,5895,184],{"class":174},[165,5897,5899,5901,5903,5905,5907,5909,5911],{"class":167,"line":5898},56,[165,5900,3507],{"class":174},[165,5902,482],{"class":238},[165,5904,839],{"class":174},[165,5906,2658],{"class":1649},[165,5908,1431],{"class":174},[165,5910,1800],{"class":238},[165,5912,184],{"class":174},[165,5914,5916,5918,5920,5922,5924,5926,5928,5930,5932,5934,5936],{"class":167,"line":5915},57,[165,5917,1861],{"class":238},[165,5919,3311],{"class":190},[165,5921,1642],{"class":238},[165,5923,3018],{"class":485},[165,5925,3318],{"class":174},[165,5927,3023],{"class":485},[165,5929,3496],{"class":174},[165,5931,3028],{"class":485},[165,5933,3327],{"class":238},[165,5935,3182],{"class":220},[165,5937,241],{"class":174},[165,5939,5941],{"class":167,"line":5940},58,[165,5942,207],{"emptyLinePlaceholder":206},[165,5944,5946,5948],{"class":167,"line":5945},59,[165,5947,3552],{"class":238},[165,5949,184],{"class":174},[165,5951,5953],{"class":167,"line":5952},60,[165,5954,3559],{"class":174},[165,5956,5958],{"class":167,"line":5957},61,[165,5959,3564],{"class":174},[165,5961,5963],{"class":167,"line":5962},62,[165,5964,3569],{"class":174},[165,5966,5968],{"class":167,"line":5967},63,[165,5969,3574],{"class":174},[165,5971,5973,5975],{"class":167,"line":5972},64,[165,5974,3346],{"class":238},[165,5976,3349],{"class":174},[165,5978,5980,5982,5984],{"class":167,"line":5979},65,[165,5981,3354],{"class":174},[165,5983,1730],{"class":238},[165,5985,184],{"class":174},[165,5987,5989,5991,5993,5995,5997,5999,6001,6003,6005,6007,6009,6011,6013,6015,6017,6019,6021,6023,6025,6027,6029,6031,6034,6036,6038,6040,6042,6044,6046,6048,6050,6052,6054,6056,6058,6060,6062,6064,6066,6068],{"class":167,"line":5988},66,[165,5990,3593],{"class":174},[165,5992,2963],{"class":220},[165,5994,3598],{"class":238},[165,5996,3106],{"class":220},[165,5998,473],{"class":174},[165,6000,3111],{"class":238},[165,6002,2399],{"class":220},[165,6004,83],{"class":174},[165,6006,1738],{"class":190},[165,6008,3613],{"class":174},[165,6010,1653],{"class":238},[165,6012,4394],{"class":174},[165,6014,4785],{"class":220},[165,6016,2295],{"class":238},[165,6018,3148],{"class":220},[165,6020,473],{"class":174},[165,6022,2566],{"class":220},[165,6024,919],{"class":174},[165,6026,2963],{"class":220},[165,6028,3159],{"class":174},[165,6030,3162],{"class":190},[165,6032,6033],{"class":174},"]>(",[165,6035,2658],{"class":1649},[165,6037,1653],{"class":238},[165,6039,3666],{"class":220},[165,6041,1431],{"class":174},[165,6043,1800],{"class":238},[165,6045,3175],{"class":174},[165,6047,922],{"class":1649},[165,6049,1653],{"class":238},[165,6051,2993],{"class":220},[165,6053,473],{"class":174},[165,6055,2963],{"class":220},[165,6057,83],{"class":174},[165,6059,2557],{"class":220},[165,6061,3659],{"class":174},[165,6063,2658],{"class":1649},[165,6065,1653],{"class":238},[165,6067,3666],{"class":220},[165,6069,3669],{"class":174},[165,6071,6073],{"class":167,"line":6072},67,[165,6074,3674],{"class":174},[165,6076,6078],{"class":167,"line":6077},68,[165,6079,207],{"emptyLinePlaceholder":206},[165,6081,6083,6085],{"class":167,"line":6082},69,[165,6084,2616],{"class":238},[165,6086,184],{"class":174},[165,6088,6090],{"class":167,"line":6089},70,[165,6091,2528],{"class":174},[165,6093,6095],{"class":167,"line":6094},71,[165,6096,2623],{"class":174},[165,6098,6100],{"class":167,"line":6099},72,[165,6101,2633],{"class":174},[165,6103,6105],{"class":167,"line":6104},73,[165,6106,6107],{"class":174},"    selectors: selectors,\n",[165,6109,6111],{"class":167,"line":6110},74,[165,6112,2638],{"class":174},[165,6114,6116],{"class":167,"line":6115},75,[165,6117,2429],{"class":174},[165,6119,6121],{"class":167,"line":6120},76,[165,6122,207],{"emptyLinePlaceholder":206},[165,6124,6126,6128,6130,6132,6134,6136,6138,6140,6142,6144,6146,6148,6150,6152,6154],{"class":167,"line":6125},77,[165,6127,922],{"class":238},[165,6129,4534],{"class":220},[165,6131,473],{"class":174},[165,6133,2675],{"class":220},[165,6135,2295],{"class":238},[165,6137,1656],{"class":190},[165,6139,1642],{"class":238},[165,6141,1656],{"class":190},[165,6143,83],{"class":174},[165,6145,2159],{"class":220},[165,6147,1642],{"class":238},[165,6149,2229],{"class":190},[165,6151,2167],{"class":174},[165,6153,482],{"class":238},[165,6155,184],{"class":174},[165,6157,6159,6161,6163,6165],{"class":167,"line":6158},78,[165,6160,2702],{"class":1649},[165,6162,1653],{"class":238},[165,6164,2707],{"class":220},[165,6166,175],{"class":174},[165,6168,6170,6172,6174,6176],{"class":167,"line":6169},79,[165,6171,2189],{"class":1649},[165,6173,1653],{"class":238},[165,6175,2719],{"class":220},[165,6177,175],{"class":174},[165,6179,6181],{"class":167,"line":6180},80,[165,6182,200],{"class":174},[165,6184,6186],{"class":167,"line":6185},81,[165,6187,207],{"emptyLinePlaceholder":206},[165,6189,6191,6193,6195,6197,6199,6201,6203,6205,6207,6209,6211,6213,6215,6217,6219,6221,6223],{"class":167,"line":6190},82,[165,6192,922],{"class":238},[165,6194,4595],{"class":220},[165,6196,473],{"class":174},[165,6198,2557],{"class":220},[165,6200,2295],{"class":238},[165,6202,1656],{"class":190},[165,6204,83],{"class":174},[165,6206,4608],{"class":220},[165,6208,2295],{"class":238},[165,6210,4613],{"class":220},[165,6212,473],{"class":174},[165,6214,4618],{"class":190},[165,6216,83],{"class":174},[165,6218,4618],{"class":190},[165,6220,4625],{"class":174},[165,6222,482],{"class":238},[165,6224,184],{"class":174},[165,6226,6228,6230,6232,6234],{"class":167,"line":6227},83,[165,6229,2382],{"class":1649},[165,6231,1653],{"class":238},[165,6233,2387],{"class":220},[165,6235,241],{"class":174},[165,6237,6239,6241,6243,6245],{"class":167,"line":6238},84,[165,6240,4644],{"class":1649},[165,6242,1653],{"class":238},[165,6244,4649],{"class":220},[165,6246,175],{"class":174},[165,6248,6250],{"class":167,"line":6249},85,[165,6251,200],{"class":174},[165,6253,6255],{"class":167,"line":6254},86,[165,6256,207],{"emptyLinePlaceholder":206},[165,6258,6260,6262,6264,6266,6268,6270,6272,6274,6276,6278,6280,6282,6284,6286,6288,6290,6292,6294,6296,6298,6300,6302,6304,6306,6308,6310],{"class":167,"line":6259},87,[165,6261,922],{"class":238},[165,6263,4666],{"class":220},[165,6265,473],{"class":174},[165,6267,4671],{"class":220},[165,6269,2167],{"class":174},[165,6271,482],{"class":238},[165,6273,4678],{"class":220},[165,6275,2295],{"class":238},[165,6277,3175],{"class":174},[165,6279,3318],{"class":1649},[165,6281,1653],{"class":238},[165,6283,4692],{"class":238},[165,6285,2387],{"class":220},[165,6287,2295],{"class":238},[165,6289,1656],{"class":190},[165,6291,83],{"class":174},[165,6293,3959],{"class":1649},[165,6295,1653],{"class":238},[165,6297,4613],{"class":220},[165,6299,473],{"class":174},[165,6301,4711],{"class":238},[165,6303,2182],{"class":220},[165,6305,83],{"class":174},[165,6307,4711],{"class":238},[165,6309,2670],{"class":220},[165,6311,4722],{"class":174},[165,6313,6315,6317,6319,6321,6323,6325,6327,6329,6331,6333,6335],{"class":167,"line":6314},88,[165,6316,4727],{"class":238},[165,6318,2670],{"class":220},[165,6320,2295],{"class":238},[165,6322,4534],{"class":220},[165,6324,473],{"class":174},[165,6326,4711],{"class":238},[165,6328,2707],{"class":220},[165,6330,83],{"class":174},[165,6332,4711],{"class":238},[165,6334,2719],{"class":220},[165,6336,489],{"class":174},[165,6338,6340,6342],{"class":167,"line":6339},89,[165,6341,4727],{"class":238},[165,6343,184],{"class":174},[165,6345,6347,6349,6351,6353,6355,6357,6359,6361],{"class":167,"line":6346},90,[165,6348,4758],{"class":1649},[165,6350,1653],{"class":238},[165,6352,4534],{"class":220},[165,6354,473],{"class":174},[165,6356,2675],{"class":220},[165,6358,83],{"class":174},[165,6360,2159],{"class":220},[165,6362,1746],{"class":174},[165,6364,6366,6368,6370,6372,6374,6376,6378,6380,6382,6384],{"class":167,"line":6365},91,[165,6367,4777],{"class":1649},[165,6369,1653],{"class":238},[165,6371,4782],{"class":174},[165,6373,4785],{"class":220},[165,6375,3598],{"class":238},[165,6377,2387],{"class":220},[165,6379,4792],{"class":174},[165,6381,1653],{"class":238},[165,6383,2182],{"class":220},[165,6385,3669],{"class":174},[165,6387,6389,6391,6393,6395,6397],{"class":167,"line":6388},92,[165,6390,4803],{"class":174},[165,6392,1653],{"class":238},[165,6394,4808],{"class":190},[165,6396,4811],{"class":238},[165,6398,4814],{"class":190},[165,6400,6402],{"class":167,"line":6401},93,[165,6403,207],{"emptyLinePlaceholder":206},[165,6405,6407,6409,6411,6413,6415],{"class":167,"line":6406},94,[165,6408,1693],{"class":238},[165,6410,1696],{"class":238},[165,6412,4827],{"class":220},[165,6414,1642],{"class":238},[165,6416,2446],{"class":174},[165,6418,6420,6422,6424,6426,6428,6430,6432,6434,6436,6438,6440,6442,6444,6446],{"class":167,"line":6419},95,[165,6421,4836],{"class":220},[165,6423,2295],{"class":238},[165,6425,4595],{"class":220},[165,6427,473],{"class":174},[165,6429,1738],{"class":190},[165,6431,83],{"class":174},[165,6433,4849],{"class":220},[165,6435,473],{"class":174},[165,6437,4618],{"class":190},[165,6439,83],{"class":174},[165,6441,4618],{"class":190},[165,6443,83],{"class":174},[165,6445,4618],{"class":190},[165,6447,2344],{"class":174},[165,6449,6451,6453,6455,6457,6459,6461,6463,6465],{"class":167,"line":6450},96,[165,6452,2304],{"class":220},[165,6454,2295],{"class":238},[165,6456,4666],{"class":220},[165,6458,473],{"class":174},[165,6460,4876],{"class":220},[165,6462,4879],{"class":174},[165,6464,4882],{"class":485},[165,6466,3165],{"class":174},[165,6468,6470,6472,6474,6476,6478,6480,6482,6484],{"class":167,"line":6469},97,[165,6471,3170],{"class":220},[165,6473,2295],{"class":238},[165,6475,4666],{"class":220},[165,6477,473],{"class":174},[165,6479,4876],{"class":220},[165,6481,4879],{"class":174},[165,6483,4901],{"class":485},[165,6485,3165],{"class":174},[165,6487,6489,6491,6493,6495,6497,6499,6501],{"class":167,"line":6488},98,[165,6490,4369],{"class":174},[165,6492,4910],{"class":1649},[165,6494,1653],{"class":238},[165,6496,4915],{"class":220},[165,6498,4918],{"class":174},[165,6500,1800],{"class":238},[165,6502,184],{"class":174},[165,6504,6506,6508,6510,6512,6514,6516,6518,6520,6522,6524,6526,6528],{"class":167,"line":6505},99,[165,6507,3249],{"class":238},[165,6509,4929],{"class":190},[165,6511,1642],{"class":238},[165,6513,4934],{"class":174},[165,6515,3286],{"class":220},[165,6517,3289],{"class":174},[165,6519,3292],{"class":1649},[165,6521,83],{"class":174},[165,6523,4945],{"class":1649},[165,6525,1431],{"class":174},[165,6527,1800],{"class":238},[165,6529,184],{"class":174},[165,6531,6533,6535,6537],{"class":167,"line":6532},100,[165,6534,4956],{"class":174},[165,6536,482],{"class":238},[165,6538,4961],{"class":174},[165,6540,6542,6544],{"class":167,"line":6541},101,[165,6543,3346],{"class":238},[165,6545,3349],{"class":174},[165,6547,6549,6551,6553,6555,6557,6559,6561,6563],{"class":167,"line":6548},102,[165,6550,3354],{"class":174},[165,6552,1730],{"class":238},[165,6554,1733],{"class":220},[165,6556,473],{"class":174},[165,6558,1738],{"class":190},[165,6560,83],{"class":174},[165,6562,4849],{"class":220},[165,6564,3370],{"class":174},[165,6566,6568],{"class":167,"line":6567},103,[165,6569,207],{"emptyLinePlaceholder":206},[165,6571,6573,6575,6577,6579,6581,6583,6585,6587,6589,6591,6593,6595],{"class":167,"line":6572},104,[165,6574,3249],{"class":238},[165,6576,3381],{"class":190},[165,6578,1642],{"class":238},[165,6580,5000],{"class":220},[165,6582,5003],{"class":174},[165,6584,1730],{"class":238},[165,6586,4613],{"class":220},[165,6588,473],{"class":174},[165,6590,2154],{"class":220},[165,6592,83],{"class":174},[165,6594,5016],{"class":220},[165,6596,4473],{"class":174},[165,6598,6600],{"class":167,"line":6599},105,[165,6601,207],{"emptyLinePlaceholder":206},[165,6603,6605,6607,6609,6611,6613],{"class":167,"line":6604},106,[165,6606,3249],{"class":238},[165,6608,5029],{"class":190},[165,6610,1642],{"class":238},[165,6612,5034],{"class":220},[165,6614,5037],{"class":174},[165,6616,6618],{"class":167,"line":6617},107,[165,6619,207],{"emptyLinePlaceholder":206},[165,6621,6623,6625],{"class":167,"line":6622},108,[165,6624,2616],{"class":238},[165,6626,184],{"class":174},[165,6628,6630],{"class":167,"line":6629},109,[165,6631,5052],{"class":174},[165,6633,6635],{"class":167,"line":6634},110,[165,6636,2638],{"class":174},[165,6638,6640],{"class":167,"line":6639},111,[165,6641,2429],{"class":174},[165,6643,6645],{"class":167,"line":6644},112,[165,6646,207],{"emptyLinePlaceholder":206},[165,6648,6650,6652,6654,6656,6658],{"class":167,"line":6649},113,[165,6651,1693],{"class":238},[165,6653,1696],{"class":238},[165,6655,4326],{"class":220},[165,6657,1642],{"class":238},[165,6659,2446],{"class":174},[165,6661,6663,6665,6667,6669],{"class":167,"line":6662},114,[165,6664,4335],{"class":220},[165,6666,2295],{"class":238},[165,6668,4340],{"class":220},[165,6670,175],{"class":174},[165,6672,6674,6676,6678,6680,6682,6684,6686,6688],{"class":167,"line":6673},115,[165,6675,2304],{"class":220},[165,6677,2295],{"class":238},[165,6679,4351],{"class":220},[165,6681,473],{"class":174},[165,6683,4356],{"class":220},[165,6685,919],{"class":174},[165,6687,4361],{"class":485},[165,6689,4364],{"class":174},[165,6691,6693,6695,6697,6699,6701,6703,6705],{"class":167,"line":6692},116,[165,6694,4369],{"class":174},[165,6696,4372],{"class":1649},[165,6698,1653],{"class":238},[165,6700,4377],{"class":220},[165,6702,1431],{"class":174},[165,6704,1800],{"class":238},[165,6706,184],{"class":174},[165,6708,6710,6712,6714,6716,6718,6720,6722,6724,6726,6728,6730,6732,6734,6736,6738,6740,6742,6744,6746,6748],{"class":167,"line":6709},117,[165,6711,3249],{"class":238},[165,6713,2003],{"class":220},[165,6715,1642],{"class":238},[165,6717,4394],{"class":174},[165,6719,4397],{"class":220},[165,6721,2295],{"class":238},[165,6723,839],{"class":174},[165,6725,1786],{"class":1649},[165,6727,1653],{"class":238},[165,6729,2182],{"class":220},[165,6731,1431],{"class":174},[165,6733,1800],{"class":238},[165,6735,2229],{"class":190},[165,6737,4369],{"class":174},[165,6739,4418],{"class":1649},[165,6741,1653],{"class":238},[165,6743,4423],{"class":220},[165,6745,1431],{"class":174},[165,6747,1800],{"class":238},[165,6749,184],{"class":174},[165,6751,6753,6755,6757],{"class":167,"line":6752},118,[165,6754,3346],{"class":238},[165,6756,4436],{"class":220},[165,6758,2059],{"class":174},[165,6760,6762],{"class":167,"line":6761},119,[165,6763,4443],{"class":174},[165,6765,6767],{"class":167,"line":6766},120,[165,6768,4448],{"class":174},[165,6770,6772],{"class":167,"line":6771},121,[165,6773,4448],{"class":174},[165,6775,6777],{"class":167,"line":6776},122,[165,6778,4457],{"class":174},[165,6780,6782,6784,6786,6788,6790,6792],{"class":167,"line":6781},123,[165,6783,4462],{"class":174},[165,6785,1730],{"class":238},[165,6787,4351],{"class":220},[165,6789,473],{"class":174},[165,6791,4397],{"class":220},[165,6793,4473],{"class":174},[165,6795,6797],{"class":167,"line":6796},124,[165,6798,2638],{"class":174},[165,6800,6802],{"class":167,"line":6801},125,[165,6803,207],{"emptyLinePlaceholder":206},[165,6805,6807,6809],{"class":167,"line":6806},126,[165,6808,2616],{"class":238},[165,6810,4488],{"class":174},[165,6812,6814],{"class":167,"line":6813},127,[165,6815,2429],{"class":174},[156,6817,6820],{"className":1623,"code":6818,"filename":6819,"language":1626,"meta":161,"style":161},"import { createSlice } from \"@/myReduxToolkit\";\n\ntype User = {\n  id: string;\n  username: string;\n  displayName: string;\n}\n\nexport const usersSlice = createSlice({\n  name: 'users',\n  defaultState: {\n    userById: {} as Record\u003Cstring, User>,\n    usernameById: {} as Record\u003Cstring, string>,\n  },\n  actions: {\n    addUser: (state, user: User) => {\n      state.userById[user.id] = user;\n      state.usernameById[user.username] = user.id;\n    },\n    deleteUser: (state, userId: string) => {\n      const user = state.userById[userId];\n      delete state.usernameById[user.username];\n      delete state.userById[userId];\n    }\n  },\n  selectors: {\n    selectUserByUsername: (state, username: string) => state.userById[state.usernameById[username]],\n    selectAllUsers: (state) => Object.values(state.userById),\n  }\n});\n\n","store/users/slice.ts",[21,6821,6822,6836,6840,6850,6860,6870,6880,6884,6888,6902,6910,6914,6932,6950,6954,6958,6980,6988,6996,7000,7022,7032,7038,7044,7048,7052,7056,7078,7099,7103],{"__ignoreMap":161},[165,6823,6824,6826,6829,6831,6834],{"class":167,"line":168},[165,6825,4280],{"class":238},[165,6827,6828],{"class":174}," { createSlice } ",[165,6830,4294],{"class":238},[165,6832,6833],{"class":485}," \"@/myReduxToolkit\"",[165,6835,241],{"class":174},[165,6837,6838],{"class":167,"line":178},[165,6839,207],{"emptyLinePlaceholder":206},[165,6841,6842,6844,6846,6848],{"class":167,"line":187},[165,6843,922],{"class":238},[165,6845,1639],{"class":220},[165,6847,1642],{"class":238},[165,6849,184],{"class":174},[165,6851,6852,6854,6856,6858],{"class":167,"line":197},[165,6853,1650],{"class":1649},[165,6855,1653],{"class":238},[165,6857,1656],{"class":190},[165,6859,241],{"class":174},[165,6861,6862,6864,6866,6868],{"class":167,"line":203},[165,6863,1663],{"class":1649},[165,6865,1653],{"class":238},[165,6867,1656],{"class":190},[165,6869,241],{"class":174},[165,6871,6872,6874,6876,6878],{"class":167,"line":210},[165,6873,1674],{"class":1649},[165,6875,1653],{"class":238},[165,6877,1656],{"class":190},[165,6879,241],{"class":174},[165,6881,6882],{"class":167,"line":217},[165,6883,200],{"class":174},[165,6885,6886],{"class":167,"line":226},[165,6887,207],{"emptyLinePlaceholder":206},[165,6889,6890,6892,6894,6896,6898,6900],{"class":167,"line":244},[165,6891,1693],{"class":238},[165,6893,1696],{"class":238},[165,6895,1699],{"class":190},[165,6897,1642],{"class":238},[165,6899,1704],{"class":220},[165,6901,1707],{"class":174},[165,6903,6904,6906,6908],{"class":167,"line":632},[165,6905,1712],{"class":174},[165,6907,1715],{"class":485},[165,6909,175],{"class":174},[165,6911,6912],{"class":167,"line":646},[165,6913,1722],{"class":174},[165,6915,6916,6918,6920,6922,6924,6926,6928,6930],{"class":167,"line":651},[165,6917,1727],{"class":174},[165,6919,1730],{"class":238},[165,6921,1733],{"class":220},[165,6923,473],{"class":174},[165,6925,1738],{"class":190},[165,6927,83],{"class":174},[165,6929,1743],{"class":220},[165,6931,1746],{"class":174},[165,6933,6934,6936,6938,6940,6942,6944,6946,6948],{"class":167,"line":656},[165,6935,1751],{"class":174},[165,6937,1730],{"class":238},[165,6939,1733],{"class":220},[165,6941,473],{"class":174},[165,6943,1738],{"class":190},[165,6945,83],{"class":174},[165,6947,1738],{"class":190},[165,6949,1746],{"class":174},[165,6951,6952],{"class":167,"line":663},[165,6953,1770],{"class":174},[165,6955,6956],{"class":167,"line":679},[165,6957,1775],{"class":174},[165,6959,6960,6962,6964,6966,6968,6970,6972,6974,6976,6978],{"class":167,"line":693},[165,6961,1780],{"class":220},[165,6963,1783],{"class":174},[165,6965,1786],{"class":1649},[165,6967,83],{"class":174},[165,6969,1791],{"class":1649},[165,6971,1653],{"class":238},[165,6973,1639],{"class":220},[165,6975,1431],{"class":174},[165,6977,1800],{"class":238},[165,6979,184],{"class":174},[165,6981,6982,6984,6986],{"class":167,"line":705},[165,6983,1812],{"class":174},[165,6985,482],{"class":238},[165,6987,1817],{"class":174},[165,6989,6990,6992,6994],{"class":167,"line":987},[165,6991,1822],{"class":174},[165,6993,482],{"class":238},[165,6995,1827],{"class":174},[165,6997,6998],{"class":167,"line":992},[165,6999,1832],{"class":174},[165,7001,7002,7004,7006,7008,7010,7012,7014,7016,7018,7020],{"class":167,"line":998},[165,7003,1837],{"class":220},[165,7005,1783],{"class":174},[165,7007,1786],{"class":1649},[165,7009,83],{"class":174},[165,7011,1846],{"class":1649},[165,7013,1653],{"class":238},[165,7015,1656],{"class":190},[165,7017,1431],{"class":174},[165,7019,1800],{"class":238},[165,7021,184],{"class":174},[165,7023,7024,7026,7028,7030],{"class":167,"line":1010},[165,7025,1861],{"class":238},[165,7027,1864],{"class":190},[165,7029,1642],{"class":238},[165,7031,1869],{"class":174},[165,7033,7034,7036],{"class":167,"line":1015},[165,7035,1874],{"class":238},[165,7037,1877],{"class":174},[165,7039,7040,7042],{"class":167,"line":1021},[165,7041,1874],{"class":238},[165,7043,1869],{"class":174},[165,7045,7046],{"class":167,"line":1033},[165,7047,1888],{"class":174},[165,7049,7050],{"class":167,"line":1038},[165,7051,1770],{"class":174},[165,7053,7054],{"class":167,"line":1044},[165,7055,1897],{"class":174},[165,7057,7058,7060,7062,7064,7066,7068,7070,7072,7074,7076],{"class":167,"line":1900},[165,7059,1903],{"class":220},[165,7061,1783],{"class":174},[165,7063,1786],{"class":1649},[165,7065,83],{"class":174},[165,7067,1912],{"class":1649},[165,7069,1653],{"class":238},[165,7071,1656],{"class":190},[165,7073,1431],{"class":174},[165,7075,1800],{"class":238},[165,7077,1923],{"class":174},[165,7079,7080,7083,7085,7087,7089,7091,7093,7096],{"class":167,"line":1926},[165,7081,7082],{"class":220},"    selectAllUsers",[165,7084,1783],{"class":174},[165,7086,1786],{"class":1649},[165,7088,1431],{"class":174},[165,7090,1800],{"class":238},[165,7092,3257],{"class":174},[165,7094,7095],{"class":220},"values",[165,7097,7098],{"class":174},"(state.userById),\n",[165,7100,7101],{"class":167,"line":1931},[165,7102,755],{"class":174},[165,7104,7105],{"class":167,"line":1937},[165,7106,1934],{"class":174},[156,7108,7111],{"className":1623,"code":7109,"filename":7110,"language":1626,"meta":161,"style":161},"import { configureStore, createUseSelector } from '@/myReduxToolkit';\nimport { usersSlice } from './users/slice';\n\nexport const { store } = configureStore([usersSlice]);\n\nexport const useSelector = createUseSelector(store);\n\n","store/index.ts",[21,7112,7113,7127,7141,7145,7165,7169],{"__ignoreMap":161},[165,7114,7115,7117,7120,7122,7125],{"class":167,"line":168},[165,7116,4280],{"class":238},[165,7118,7119],{"class":174}," { configureStore, createUseSelector } ",[165,7121,4294],{"class":238},[165,7123,7124],{"class":485}," '@/myReduxToolkit'",[165,7126,241],{"class":174},[165,7128,7129,7131,7134,7136,7139],{"class":167,"line":178},[165,7130,4280],{"class":238},[165,7132,7133],{"class":174}," { usersSlice } ",[165,7135,4294],{"class":238},[165,7137,7138],{"class":485}," './users/slice'",[165,7140,241],{"class":174},[165,7142,7143],{"class":167,"line":187},[165,7144,207],{"emptyLinePlaceholder":206},[165,7146,7147,7149,7151,7153,7155,7158,7160,7162],{"class":167,"line":197},[165,7148,1693],{"class":238},[165,7150,1696],{"class":238},[165,7152,3175],{"class":174},[165,7154,4372],{"class":190},[165,7156,7157],{"class":174}," } ",[165,7159,482],{"class":238},[165,7161,4827],{"class":220},[165,7163,7164],{"class":174},"([usersSlice]);\n",[165,7166,7167],{"class":167,"line":203},[165,7168,207],{"emptyLinePlaceholder":206},[165,7170,7171,7173,7175,7177,7179,7181],{"class":167,"line":210},[165,7172,1693],{"class":238},[165,7174,1696],{"class":238},[165,7176,2003],{"class":190},[165,7178,1642],{"class":238},[165,7180,4326],{"class":220},[165,7182,7183],{"class":174},"(store);\n",[156,7185,7190],{"className":7186,"code":7187,"filename":7188,"language":7189,"meta":161,"style":161},"language-tsx shiki shiki-themes github-light github-dark","const Test = () => {\n  const allUsers = useSelector(state => usersSlice.selectors.selectAllUsers(state.users));\n\n  console.log({\n    allUsers\n  });\n\n  return \u003Cdiv>\n    \u003Cbutton onClick={() => {\n      console.log(usersSlice.actions);\n      store.dispatch(usersSlice.actions.addUser({\n        displayName: String(Math.random()),\n        id: String(Math.random()),\n        username: String(Math.random()),\n      }));\n      console.log(store.getState());\n    }}>Add new user\u003C/button>\n\n    {allUsers.map((user) => \u003Cdiv key={user.username}>\n      \u003Cp>{user.displayName}\u003C/p>\n      \u003Cp>@{user.username}\u003C/p>\n    \u003C/div>)}\n  \u003C/div>;\n};\n","components/SomeComponent.tsx","tsx",[21,7191,7192,7207,7233,7237,7247,7252,7256,7260,7270,7288,7298,7313,7329,7342,7355,7360,7375,7384,7388,7416,7430,7443,7452,7460],{"__ignoreMap":161},[165,7193,7194,7196,7199,7201,7203,7205],{"class":167,"line":168},[165,7195,1996],{"class":238},[165,7197,7198],{"class":220}," Test",[165,7200,1642],{"class":238},[165,7202,4162],{"class":174},[165,7204,1800],{"class":238},[165,7206,184],{"class":174},[165,7208,7209,7211,7214,7216,7218,7220,7222,7224,7227,7230],{"class":167,"line":178},[165,7210,3249],{"class":238},[165,7212,7213],{"class":190}," allUsers",[165,7215,1642],{"class":238},[165,7217,2003],{"class":220},[165,7219,1290],{"class":174},[165,7221,1786],{"class":1649},[165,7223,2010],{"class":238},[165,7225,7226],{"class":174}," usersSlice.selectors.",[165,7228,7229],{"class":220},"selectAllUsers",[165,7231,7232],{"class":174},"(state.users));\n",[165,7234,7235],{"class":167,"line":187},[165,7236,207],{"emptyLinePlaceholder":206},[165,7238,7239,7242,7245],{"class":167,"line":197},[165,7240,7241],{"class":174},"  console.",[165,7243,7244],{"class":220},"log",[165,7246,1707],{"class":174},[165,7248,7249],{"class":167,"line":203},[165,7250,7251],{"class":174},"    allUsers\n",[165,7253,7254],{"class":167,"line":210},[165,7255,3674],{"class":174},[165,7257,7258],{"class":167,"line":217},[165,7259,207],{"emptyLinePlaceholder":206},[165,7261,7262,7264,7266,7268],{"class":167,"line":226},[165,7263,2616],{"class":238},[165,7265,4394],{"class":174},[165,7267,476],{"class":171},[165,7269,489],{"class":174},[165,7271,7272,7274,7276,7279,7281,7284,7286],{"class":167,"line":244},[165,7273,510],{"class":174},[165,7275,1434],{"class":171},[165,7277,7278],{"class":220}," onClick",[165,7280,482],{"class":238},[165,7282,7283],{"class":174},"{() ",[165,7285,1800],{"class":238},[165,7287,184],{"class":174},[165,7289,7290,7293,7295],{"class":167,"line":632},[165,7291,7292],{"class":174},"      console.",[165,7294,7244],{"class":220},[165,7296,7297],{"class":174},"(usersSlice.actions);\n",[165,7299,7300,7303,7306,7309,7311],{"class":167,"line":646},[165,7301,7302],{"class":174},"      store.",[165,7304,7305],{"class":220},"dispatch",[165,7307,7308],{"class":174},"(usersSlice.actions.",[165,7310,2074],{"class":220},[165,7312,1707],{"class":174},[165,7314,7315,7318,7320,7323,7326],{"class":167,"line":651},[165,7316,7317],{"class":174},"        displayName: ",[165,7319,2998],{"class":220},[165,7321,7322],{"class":174},"(Math.",[165,7324,7325],{"class":220},"random",[165,7327,7328],{"class":174},"()),\n",[165,7330,7331,7334,7336,7338,7340],{"class":167,"line":656},[165,7332,7333],{"class":174},"        id: ",[165,7335,2998],{"class":220},[165,7337,7322],{"class":174},[165,7339,7325],{"class":220},[165,7341,7328],{"class":174},[165,7343,7344,7347,7349,7351,7353],{"class":167,"line":663},[165,7345,7346],{"class":174},"        username: ",[165,7348,2998],{"class":220},[165,7350,7322],{"class":174},[165,7352,7325],{"class":220},[165,7354,7328],{"class":174},[165,7356,7357],{"class":167,"line":679},[165,7358,7359],{"class":174},"      }));\n",[165,7361,7362,7364,7366,7369,7372],{"class":167,"line":693},[165,7363,7292],{"class":174},[165,7365,7244],{"class":220},[165,7367,7368],{"class":174},"(store.",[165,7370,7371],{"class":220},"getState",[165,7373,7374],{"class":174},"());\n",[165,7376,7377,7380,7382],{"class":167,"line":705},[165,7378,7379],{"class":174},"    }}>Add new user\u003C/",[165,7381,1434],{"class":171},[165,7383,489],{"class":174},[165,7385,7386],{"class":167,"line":987},[165,7387,207],{"emptyLinePlaceholder":206},[165,7389,7390,7393,7396,7398,7400,7402,7404,7406,7408,7411,7413],{"class":167,"line":992},[165,7391,7392],{"class":174},"    {allUsers.",[165,7394,7395],{"class":220},"map",[165,7397,3289],{"class":174},[165,7399,1791],{"class":1649},[165,7401,1431],{"class":174},[165,7403,1800],{"class":238},[165,7405,4394],{"class":174},[165,7407,476],{"class":171},[165,7409,7410],{"class":220}," key",[165,7412,482],{"class":238},[165,7414,7415],{"class":174},"{user.username}>\n",[165,7417,7418,7421,7423,7426,7428],{"class":167,"line":998},[165,7419,7420],{"class":174},"      \u003C",[165,7422,17],{"class":171},[165,7424,7425],{"class":174},">{user.displayName}\u003C/",[165,7427,17],{"class":171},[165,7429,489],{"class":174},[165,7431,7432,7434,7436,7439,7441],{"class":167,"line":1010},[165,7433,7420],{"class":174},[165,7435,17],{"class":171},[165,7437,7438],{"class":174},">@{user.username}\u003C/",[165,7440,17],{"class":171},[165,7442,489],{"class":174},[165,7444,7445,7447,7449],{"class":167,"line":1015},[165,7446,531],{"class":174},[165,7448,476],{"class":171},[165,7450,7451],{"class":174},">)}\n",[165,7453,7454,7456,7458],{"class":167,"line":1021},[165,7455,540],{"class":174},[165,7457,476],{"class":171},[165,7459,4473],{"class":174},[165,7461,7462],{"class":167,"line":1033},[165,7463,2429],{"class":174},[1531,7465,7466],{},"html pre.shiki code .szBVR, html code.shiki .szBVR{--shiki-default:#D73A49;--shiki-dark:#F97583}html pre.shiki code .sScJk, html code.shiki .sScJk{--shiki-default:#6F42C1;--shiki-dark:#B392F0}html pre.shiki code .sVt8B, html code.shiki .sVt8B{--shiki-default:#24292E;--shiki-dark:#E1E4E8}html pre.shiki code .s4XuR, html code.shiki .s4XuR{--shiki-default:#E36209;--shiki-dark:#FFAB70}html pre.shiki code .sj4cs, html code.shiki .sj4cs{--shiki-default:#005CC5;--shiki-dark:#79B8FF}html pre.shiki code .sZZnC, html code.shiki .sZZnC{--shiki-default:#032F62;--shiki-dark:#9ECBFF}html pre.shiki code .sJ8bj, html code.shiki .sJ8bj{--shiki-default:#6A737D;--shiki-dark:#6A737D}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html pre.shiki code .s9eBZ, html code.shiki .s9eBZ{--shiki-default:#22863A;--shiki-dark:#85E89D}",{"title":161,"searchDepth":178,"depth":178,"links":7468},[7469,7470,7471,7472,7473,7474,7475,7476],{"id":1564,"depth":178,"text":1565},{"id":1616,"depth":178,"text":1617},{"id":2130,"depth":178,"text":2131},{"id":2648,"depth":178,"text":2649},{"id":3959,"depth":178,"text":3960},{"id":867,"depth":178,"text":868},{"id":4495,"depth":178,"text":4496},{"id":5108,"depth":178,"text":5109},"2024-02-12","Как работает @reduxjs/toolkit, реализация его упрощенной версии",{},"/blog/implementing-own-redux-toolkit","/images/own-redux-preview.webp",{"title":1559,"description":7478},"blog/implementing-own-redux-toolkit",[7485,7486,7487,7488],"react","redux","typescript","state-manager","OkJLGUCANe-AwCcFZCoF38kZekYrjpczJ8LxZZaSDu8",{"id":7491,"title":7492,"body":7493,"date":10417,"description":10418,"extension":1547,"meta":10419,"navigation":206,"path":10420,"previewImg":10421,"seo":10422,"stem":10423,"topics":10424,"__hash__":10426},"articles/blog/js-built-in-methods.md","Шпаргалка по built-in методам",{"type":9,"value":7494,"toc":10402},[7495,7498,7502,7512,7569,7576,7623,7630,7675,7681,7727,7730,7786,7800,7944,7947,8013,8019,8084,8088,8091,8172,8175,8244,8251,8296,8301,8344,8350,8409,8413,8416,8419,8458,8461,8502,8505,8546,8549,8586,8589,8631,8634,8779,8785,8921,8928,8931,8935,8938,8941,8944,9064,9071,9154,9158,9161,9167,9230,9233,9236,9284,9290,9340,9347,9403,9409,9497,9500,9529,9535,9632,9636,9640,9643,9654,9843,9849,9852,9858,9866,9870,9881,9887,9951,9957,9962,9967,9971,9977,10018,10021,10058,10061,10097,10100,10136,10140,10146,10315,10320,10346,10351,10399],[12,7496,7497],{"id":14},"Array",[30,7499,7501],{"id":7500},"add-delete-elements","Добавление и удаление элементов",[17,7503,7504,7505,7508,7509],{},"добавляет в ",[1598,7506,7507],{},"конец"," массива новый элемент, возвращает новый ",[21,7510,7511],{},"length",[156,7513,7517],{"className":7514,"code":7515,"language":7516,"meta":161,"style":161},"language-js shiki shiki-themes github-light github-dark","const arr = ['a', 'b'];\narr.push('c'); // 3\narr; // ['a', 'b', 'c']\n\n","js",[21,7518,7519,7542,7561],{"__ignoreMap":161},[165,7520,7521,7523,7526,7528,7531,7534,7536,7539],{"class":167,"line":168},[165,7522,1996],{"class":238},[165,7524,7525],{"class":190}," arr",[165,7527,1642],{"class":238},[165,7529,7530],{"class":174}," [",[165,7532,7533],{"class":485},"'a'",[165,7535,83],{"class":174},[165,7537,7538],{"class":485},"'b'",[165,7540,7541],{"class":174},"];\n",[165,7543,7544,7547,7550,7552,7555,7558],{"class":167,"line":178},[165,7545,7546],{"class":174},"arr.",[165,7548,7549],{"class":220},"push",[165,7551,1290],{"class":174},[165,7553,7554],{"class":485},"'c'",[165,7556,7557],{"class":174},"); ",[165,7559,7560],{"class":213},"// 3\n",[165,7562,7563,7566],{"class":167,"line":187},[165,7564,7565],{"class":174},"arr; ",[165,7567,7568],{"class":213},"// ['a', 'b', 'c']\n",[17,7570,7571,7572,7575],{},"удаляет и возвращает ",[1598,7573,7574],{},"последний"," элемент массива",[156,7577,7579],{"className":7514,"code":7578,"language":7516,"meta":161,"style":161},"const arr = ['a', 'b', 'c'];\narr.pop(); // 'c'\narr; // ['a', 'b']\n\n",[21,7580,7581,7603,7616],{"__ignoreMap":161},[165,7582,7583,7585,7587,7589,7591,7593,7595,7597,7599,7601],{"class":167,"line":168},[165,7584,1996],{"class":238},[165,7586,7525],{"class":190},[165,7588,1642],{"class":238},[165,7590,7530],{"class":174},[165,7592,7533],{"class":485},[165,7594,83],{"class":174},[165,7596,7538],{"class":485},[165,7598,83],{"class":174},[165,7600,7554],{"class":485},[165,7602,7541],{"class":174},[165,7604,7605,7607,7610,7613],{"class":167,"line":178},[165,7606,7546],{"class":174},[165,7608,7609],{"class":220},"pop",[165,7611,7612],{"class":174},"(); ",[165,7614,7615],{"class":213},"// 'c'\n",[165,7617,7618,7620],{"class":167,"line":187},[165,7619,7565],{"class":174},[165,7621,7622],{"class":213},"// ['a', 'b']\n",[17,7624,7504,7625,7508,7628],{},[1598,7626,7627],{},"начало",[21,7629,7511],{},[156,7631,7633],{"className":7514,"code":7632,"language":7516,"meta":161,"style":161},"const arr = ['a', 'b'];\narr.unshift('c'); // 3\narr; // ['с', 'a', 'b']\n\n",[21,7634,7635,7653,7668],{"__ignoreMap":161},[165,7636,7637,7639,7641,7643,7645,7647,7649,7651],{"class":167,"line":168},[165,7638,1996],{"class":238},[165,7640,7525],{"class":190},[165,7642,1642],{"class":238},[165,7644,7530],{"class":174},[165,7646,7533],{"class":485},[165,7648,83],{"class":174},[165,7650,7538],{"class":485},[165,7652,7541],{"class":174},[165,7654,7655,7657,7660,7662,7664,7666],{"class":167,"line":178},[165,7656,7546],{"class":174},[165,7658,7659],{"class":220},"unshift",[165,7661,1290],{"class":174},[165,7663,7554],{"class":485},[165,7665,7557],{"class":174},[165,7667,7560],{"class":213},[165,7669,7670,7672],{"class":167,"line":187},[165,7671,7565],{"class":174},[165,7673,7674],{"class":213},"// ['с', 'a', 'b']\n",[17,7676,7571,7677,7680],{},[1598,7678,7679],{},"первый"," элемент массива.",[156,7682,7684],{"className":7514,"code":7683,"language":7516,"meta":161,"style":161},"const arr = ['a', 'b', 'c'];\narr.shift(); // 'a'\narr; // ['b', 'c']\n\n",[21,7685,7686,7708,7720],{"__ignoreMap":161},[165,7687,7688,7690,7692,7694,7696,7698,7700,7702,7704,7706],{"class":167,"line":168},[165,7689,1996],{"class":238},[165,7691,7525],{"class":190},[165,7693,1642],{"class":238},[165,7695,7530],{"class":174},[165,7697,7533],{"class":485},[165,7699,83],{"class":174},[165,7701,7538],{"class":485},[165,7703,83],{"class":174},[165,7705,7554],{"class":485},[165,7707,7541],{"class":174},[165,7709,7710,7712,7715,7717],{"class":167,"line":178},[165,7711,7546],{"class":174},[165,7713,7714],{"class":220},"shift",[165,7716,7612],{"class":174},[165,7718,7719],{"class":213},"// 'a'\n",[165,7721,7722,7724],{"class":167,"line":187},[165,7723,7565],{"class":174},[165,7725,7726],{"class":213},"// ['b', 'c']\n",[17,7728,7729],{},"создает новый массив, включающий в себя переданные значение/массивы.\nНе мутирует** исходный массив.",[156,7731,7733],{"className":7514,"code":7732,"language":7516,"meta":161,"style":161},"['a', 'b', 'c'].concat('b', 'c', ['d', 'e'], ['f']); // ['a', 'b', 'c', 'd', 'e', 'f']\n",[21,7734,7735],{"__ignoreMap":161},[165,7736,7737,7739,7741,7743,7745,7747,7749,7752,7755,7757,7759,7761,7763,7766,7769,7771,7774,7777,7780,7783],{"class":167,"line":168},[165,7738,919],{"class":174},[165,7740,7533],{"class":485},[165,7742,83],{"class":174},[165,7744,7538],{"class":485},[165,7746,83],{"class":174},[165,7748,7554],{"class":485},[165,7750,7751],{"class":174},"].",[165,7753,7754],{"class":220},"concat",[165,7756,1290],{"class":174},[165,7758,7538],{"class":485},[165,7760,83],{"class":174},[165,7762,7554],{"class":485},[165,7764,7765],{"class":174},", [",[165,7767,7768],{"class":485},"'d'",[165,7770,83],{"class":174},[165,7772,7773],{"class":485},"'e'",[165,7775,7776],{"class":174},"], [",[165,7778,7779],{"class":485},"'f'",[165,7781,7782],{"class":174},"]); ",[165,7784,7785],{"class":213},"// ['a', 'b', 'c', 'd', 'e', 'f']\n",[17,7787,7788,7789,7792,7793,7795,7796,7799],{},"принимает два индекса - начальный и конечный и возвращает обрезанную копию.\nЕсли передать только ",[21,7790,7791],{},"begin"," - обрежется с begin по последний индекс включительно.\nЕсли передать только отрицательный ",[21,7794,7791],{}," - можно вырезать N последних элементов массива.\nЕсли передать отрицательный ",[21,7797,7798],{},"end"," - обрежется с begin по по последний индекс минус end.",[156,7801,7803],{"className":7514,"code":7802,"language":7516,"meta":161,"style":161},"['a', 'b', 'c', 'd'].slice(1) // ['b', 'c', 'd'] - обрезать с индекса 1 по конец массива\n['a', 'b', 'c', 'd'].slice(-2) // ['b', 'c', 'd'] - вырезать последние два элемента массива\n['a', 'b', 'c', 'd'].slice(1, 3) // ['b', 'c'] - обрезать с индекса 1 по индекс 3, т.е. элементы с индексами 1, 2\n['a', 'b', 'c', 'd'].slice(0, -1); // ['a', 'b', 'c'] - обрезать, убрав последний элемент\n",[21,7804,7805,7837,7871,7907],{"__ignoreMap":161},[165,7806,7807,7809,7811,7813,7815,7817,7819,7821,7823,7825,7828,7830,7832,7834],{"class":167,"line":168},[165,7808,919],{"class":174},[165,7810,7533],{"class":485},[165,7812,83],{"class":174},[165,7814,7538],{"class":485},[165,7816,83],{"class":174},[165,7818,7554],{"class":485},[165,7820,83],{"class":174},[165,7822,7768],{"class":485},[165,7824,7751],{"class":174},[165,7826,7827],{"class":220},"slice",[165,7829,1290],{"class":174},[165,7831,3162],{"class":190},[165,7833,1431],{"class":174},[165,7835,7836],{"class":213},"// ['b', 'c', 'd'] - обрезать с индекса 1 по конец массива\n",[165,7838,7839,7841,7843,7845,7847,7849,7851,7853,7855,7857,7859,7861,7864,7866,7868],{"class":167,"line":178},[165,7840,919],{"class":174},[165,7842,7533],{"class":485},[165,7844,83],{"class":174},[165,7846,7538],{"class":485},[165,7848,83],{"class":174},[165,7850,7554],{"class":485},[165,7852,83],{"class":174},[165,7854,7768],{"class":485},[165,7856,7751],{"class":174},[165,7858,7827],{"class":220},[165,7860,1290],{"class":174},[165,7862,7863],{"class":238},"-",[165,7865,746],{"class":190},[165,7867,1431],{"class":174},[165,7869,7870],{"class":213},"// ['b', 'c', 'd'] - вырезать последние два элемента массива\n",[165,7872,7873,7875,7877,7879,7881,7883,7885,7887,7889,7891,7893,7895,7897,7899,7902,7904],{"class":167,"line":187},[165,7874,919],{"class":174},[165,7876,7533],{"class":485},[165,7878,83],{"class":174},[165,7880,7538],{"class":485},[165,7882,83],{"class":174},[165,7884,7554],{"class":485},[165,7886,83],{"class":174},[165,7888,7768],{"class":485},[165,7890,7751],{"class":174},[165,7892,7827],{"class":220},[165,7894,1290],{"class":174},[165,7896,3162],{"class":190},[165,7898,83],{"class":174},[165,7900,7901],{"class":190},"3",[165,7903,1431],{"class":174},[165,7905,7906],{"class":213},"// ['b', 'c'] - обрезать с индекса 1 по индекс 3, т.е. элементы с индексами 1, 2\n",[165,7908,7909,7911,7913,7915,7917,7919,7921,7923,7925,7927,7929,7931,7933,7935,7937,7939,7941],{"class":167,"line":197},[165,7910,919],{"class":174},[165,7912,7533],{"class":485},[165,7914,83],{"class":174},[165,7916,7538],{"class":485},[165,7918,83],{"class":174},[165,7920,7554],{"class":485},[165,7922,83],{"class":174},[165,7924,7768],{"class":485},[165,7926,7751],{"class":174},[165,7928,7827],{"class":220},[165,7930,1290],{"class":174},[165,7932,270],{"class":190},[165,7934,83],{"class":174},[165,7936,7863],{"class":238},[165,7938,3162],{"class":190},[165,7940,7557],{"class":174},[165,7942,7943],{"class":213},"// ['a', 'b', 'c'] - обрезать, убрав последний элемент\n",[17,7945,7946],{},"принимает индекс и количество элементов после этого индекса, которые нужно удалить.\nЕсли передать items - они будут добавлены после индекса start.\nМутирует исходный массив и возвращает удаленные элементы.",[156,7948,7950],{"className":7514,"code":7949,"language":7516,"meta":161,"style":161},"const arr = ['a', 'b', 'c', 'd'];\narr.splice(1, 2, 'e', 'f'); // удалить 2 элемента, начиная с индекса 1, т.е. ['b', 'c']. Добавить 'e', 'f' к индексу 1.\narr; // ['a', 'e', 'f', 'd']\n\n",[21,7951,7952,7978,8006],{"__ignoreMap":161},[165,7953,7954,7956,7958,7960,7962,7964,7966,7968,7970,7972,7974,7976],{"class":167,"line":168},[165,7955,1996],{"class":238},[165,7957,7525],{"class":190},[165,7959,1642],{"class":238},[165,7961,7530],{"class":174},[165,7963,7533],{"class":485},[165,7965,83],{"class":174},[165,7967,7538],{"class":485},[165,7969,83],{"class":174},[165,7971,7554],{"class":485},[165,7973,83],{"class":174},[165,7975,7768],{"class":485},[165,7977,7541],{"class":174},[165,7979,7980,7982,7985,7987,7989,7991,7993,7995,7997,7999,8001,8003],{"class":167,"line":178},[165,7981,7546],{"class":174},[165,7983,7984],{"class":220},"splice",[165,7986,1290],{"class":174},[165,7988,3162],{"class":190},[165,7990,83],{"class":174},[165,7992,746],{"class":190},[165,7994,83],{"class":174},[165,7996,7773],{"class":485},[165,7998,83],{"class":174},[165,8000,7779],{"class":485},[165,8002,7557],{"class":174},[165,8004,8005],{"class":213},"// удалить 2 элемента, начиная с индекса 1, т.е. ['b', 'c']. Добавить 'e', 'f' к индексу 1.\n",[165,8007,8008,8010],{"class":167,"line":187},[165,8009,7565],{"class":174},[165,8011,8012],{"class":213},"// ['a', 'e', 'f', 'd']\n",[17,8014,8015,8016,8018],{},"тоже самое, что и ",[21,8017,7984],{},", но вместо мутации\nбудет создан новый массив. Возвращает новый измененный массив.",[156,8020,8022],{"className":7514,"code":8021,"language":7516,"meta":161,"style":161},"const arr = ['a', 'b', 'c', 'd'];\narr.toSpliced(1, 2, 'e', 'f'); // ['a', 'e', 'f', 'd']\narr; // ['a', 'b', 'c', 'd']\n\n",[21,8023,8024,8050,8077],{"__ignoreMap":161},[165,8025,8026,8028,8030,8032,8034,8036,8038,8040,8042,8044,8046,8048],{"class":167,"line":168},[165,8027,1996],{"class":238},[165,8029,7525],{"class":190},[165,8031,1642],{"class":238},[165,8033,7530],{"class":174},[165,8035,7533],{"class":485},[165,8037,83],{"class":174},[165,8039,7538],{"class":485},[165,8041,83],{"class":174},[165,8043,7554],{"class":485},[165,8045,83],{"class":174},[165,8047,7768],{"class":485},[165,8049,7541],{"class":174},[165,8051,8052,8054,8057,8059,8061,8063,8065,8067,8069,8071,8073,8075],{"class":167,"line":178},[165,8053,7546],{"class":174},[165,8055,8056],{"class":220},"toSpliced",[165,8058,1290],{"class":174},[165,8060,3162],{"class":190},[165,8062,83],{"class":174},[165,8064,746],{"class":190},[165,8066,83],{"class":174},[165,8068,7773],{"class":485},[165,8070,83],{"class":174},[165,8072,7779],{"class":485},[165,8074,7557],{"class":174},[165,8076,8012],{"class":213},[165,8078,8079,8081],{"class":167,"line":187},[165,8080,7565],{"class":174},[165,8082,8083],{"class":213},"// ['a', 'b', 'c', 'd']\n",[30,8085,8087],{"id":8086},"search-in-array","Поиск в массиве",[17,8089,8090],{},"находит и возвращает первый элемент массива, соответствующий заданному условию.",[156,8092,8094],{"className":7514,"code":8093,"language":7516,"meta":161,"style":161},"[\n  { age: 10, name: 'Mike' },\n  { age: 19, name: 'Timofey' },\n  { age: 18, name: 'Alexander' }\n].find(i => i.age >= 18); // { age: 19, name: 'Timofey' }\n",[21,8095,8096,8101,8116,8130,8144],{"__ignoreMap":161},[165,8097,8098],{"class":167,"line":168},[165,8099,8100],{"class":174},"[\n",[165,8102,8103,8106,8108,8111,8114],{"class":167,"line":178},[165,8104,8105],{"class":174},"  { age: ",[165,8107,852],{"class":190},[165,8109,8110],{"class":174},", name: ",[165,8112,8113],{"class":485},"'Mike'",[165,8115,3194],{"class":174},[165,8117,8118,8120,8123,8125,8128],{"class":167,"line":187},[165,8119,8105],{"class":174},[165,8121,8122],{"class":190},"19",[165,8124,8110],{"class":174},[165,8126,8127],{"class":485},"'Timofey'",[165,8129,3194],{"class":174},[165,8131,8132,8134,8137,8139,8142],{"class":167,"line":197},[165,8133,8105],{"class":174},[165,8135,8136],{"class":190},"18",[165,8138,8110],{"class":174},[165,8140,8141],{"class":485},"'Alexander'",[165,8143,3669],{"class":174},[165,8145,8146,8148,8151,8153,8156,8158,8161,8164,8167,8169],{"class":167,"line":203},[165,8147,7751],{"class":174},[165,8149,8150],{"class":220},"find",[165,8152,1290],{"class":174},[165,8154,8155],{"class":1649},"i",[165,8157,2010],{"class":238},[165,8159,8160],{"class":174}," i.age ",[165,8162,8163],{"class":238},">=",[165,8165,8166],{"class":190}," 18",[165,8168,7557],{"class":174},[165,8170,8171],{"class":213},"// { age: 19, name: 'Timofey' }\n",[17,8173,8174],{},"тоже самое, но начинает обходить массив с конца:",[156,8176,8178],{"className":7514,"code":8177,"language":7516,"meta":161,"style":161},"[\n  { age: 10, name: 'Mike' },\n  { age: 19, name: 'Timofey' },\n  { age: 18, name: 'Alexander' }\n].findLast(i => i.age >= 18); // { age: 18, name: 'Alexander' }\n",[21,8179,8180,8184,8196,8208,8220],{"__ignoreMap":161},[165,8181,8182],{"class":167,"line":168},[165,8183,8100],{"class":174},[165,8185,8186,8188,8190,8192,8194],{"class":167,"line":178},[165,8187,8105],{"class":174},[165,8189,852],{"class":190},[165,8191,8110],{"class":174},[165,8193,8113],{"class":485},[165,8195,3194],{"class":174},[165,8197,8198,8200,8202,8204,8206],{"class":167,"line":187},[165,8199,8105],{"class":174},[165,8201,8122],{"class":190},[165,8203,8110],{"class":174},[165,8205,8127],{"class":485},[165,8207,3194],{"class":174},[165,8209,8210,8212,8214,8216,8218],{"class":167,"line":197},[165,8211,8105],{"class":174},[165,8213,8136],{"class":190},[165,8215,8110],{"class":174},[165,8217,8141],{"class":485},[165,8219,3669],{"class":174},[165,8221,8222,8224,8227,8229,8231,8233,8235,8237,8239,8241],{"class":167,"line":203},[165,8223,7751],{"class":174},[165,8225,8226],{"class":220},"findLast",[165,8228,1290],{"class":174},[165,8230,8155],{"class":1649},[165,8232,2010],{"class":238},[165,8234,8160],{"class":174},[165,8236,8163],{"class":238},[165,8238,8166],{"class":190},[165,8240,7557],{"class":174},[165,8242,8243],{"class":213},"// { age: 18, name: 'Alexander' }\n",[17,8245,8246,8247,8250],{},"принимает в коллбеке условие, возвращает ",[21,8248,8249],{},"true",", если хотя бы один элемент соответствует",[156,8252,8254],{"className":7514,"code":8253,"language":7516,"meta":161,"style":161},"['Mike', 'Timofey', 'Alexander'].some(name => name.length > 5); // true\n",[21,8255,8256],{"__ignoreMap":161},[165,8257,8258,8260,8262,8264,8266,8268,8270,8272,8275,8277,8279,8281,8284,8286,8288,8291,8293],{"class":167,"line":168},[165,8259,919],{"class":174},[165,8261,8113],{"class":485},[165,8263,83],{"class":174},[165,8265,8127],{"class":485},[165,8267,83],{"class":174},[165,8269,8141],{"class":485},[165,8271,7751],{"class":174},[165,8273,8274],{"class":220},"some",[165,8276,1290],{"class":174},[165,8278,3318],{"class":1649},[165,8280,2010],{"class":238},[165,8282,8283],{"class":174}," name.",[165,8285,7511],{"class":190},[165,8287,1003],{"class":238},[165,8289,8290],{"class":190}," 5",[165,8292,7557],{"class":174},[165,8294,8295],{"class":213},"// true\n",[17,8297,8246,8298,8300],{},[21,8299,8249],{},", если все элементы соответствуют",[156,8302,8304],{"className":7514,"code":8303,"language":7516,"meta":161,"style":161},"['Mike', 'Timofey', 'Alexander'].every(name => name.length > 5); // false\n",[21,8305,8306],{"__ignoreMap":161},[165,8307,8308,8310,8312,8314,8316,8318,8320,8322,8325,8327,8329,8331,8333,8335,8337,8339,8341],{"class":167,"line":168},[165,8309,919],{"class":174},[165,8311,8113],{"class":485},[165,8313,83],{"class":174},[165,8315,8127],{"class":485},[165,8317,83],{"class":174},[165,8319,8141],{"class":485},[165,8321,7751],{"class":174},[165,8323,8324],{"class":220},"every",[165,8326,1290],{"class":174},[165,8328,3318],{"class":1649},[165,8330,2010],{"class":238},[165,8332,8283],{"class":174},[165,8334,7511],{"class":190},[165,8336,1003],{"class":238},[165,8338,8290],{"class":190},[165,8340,7557],{"class":174},[165,8342,8343],{"class":213},"// false\n",[17,8345,8346,8347,8349],{},"принимает значение, возвращает ",[21,8348,8249],{},", если в массиве есть такой элемент",[156,8351,8353],{"className":7514,"code":8352,"language":7516,"meta":161,"style":161},"['Mike', 'Timofey', 'Alexander'].includes('Timofey'); // true\n['Mike', 'Timofey', 'Alexander'].includes('Mark'); // false\n",[21,8354,8355,8382],{"__ignoreMap":161},[165,8356,8357,8359,8361,8363,8365,8367,8369,8371,8374,8376,8378,8380],{"class":167,"line":168},[165,8358,919],{"class":174},[165,8360,8113],{"class":485},[165,8362,83],{"class":174},[165,8364,8127],{"class":485},[165,8366,83],{"class":174},[165,8368,8141],{"class":485},[165,8370,7751],{"class":174},[165,8372,8373],{"class":220},"includes",[165,8375,1290],{"class":174},[165,8377,8127],{"class":485},[165,8379,7557],{"class":174},[165,8381,8295],{"class":213},[165,8383,8384,8386,8388,8390,8392,8394,8396,8398,8400,8402,8405,8407],{"class":167,"line":178},[165,8385,919],{"class":174},[165,8387,8113],{"class":485},[165,8389,83],{"class":174},[165,8391,8127],{"class":485},[165,8393,83],{"class":174},[165,8395,8141],{"class":485},[165,8397,7751],{"class":174},[165,8399,8373],{"class":220},[165,8401,1290],{"class":174},[165,8403,8404],{"class":485},"'Mark'",[165,8406,7557],{"class":174},[165,8408,8343],{"class":213},[30,8410,8412],{"id":8411},"iterate-and-mutate-array","Обход и изменение массива",[17,8414,8415],{},"принимает коллбек,\nкоторый выполнится для каждого элемента массива",[17,8417,8418],{},"принимает коллбек, который определяет,\nкак будет меняться каждый элемент массива.\nНе мутирует** исходный массив.",[156,8420,8422],{"className":7514,"code":8421,"language":7516,"meta":161,"style":161},"['heh', 'huh'].map(i => i.toUpperCase()); // ['HEH', 'HUH']\n",[21,8423,8424],{"__ignoreMap":161},[165,8425,8426,8428,8431,8433,8436,8438,8440,8442,8444,8446,8449,8452,8455],{"class":167,"line":168},[165,8427,919],{"class":174},[165,8429,8430],{"class":485},"'heh'",[165,8432,83],{"class":174},[165,8434,8435],{"class":485},"'huh'",[165,8437,7751],{"class":174},[165,8439,7395],{"class":220},[165,8441,1290],{"class":174},[165,8443,8155],{"class":1649},[165,8445,2010],{"class":238},[165,8447,8448],{"class":174}," i.",[165,8450,8451],{"class":220},"toUpperCase",[165,8453,8454],{"class":174},"()); ",[165,8456,8457],{"class":213},"// ['HEH', 'HUH']\n",[17,8459,8460],{},"переворачивает массив. Изменяет исходный массив и возвращает ссылку на изменённый массив.",[156,8462,8464],{"className":7514,"code":8463,"language":7516,"meta":161,"style":161},"const arr = [1, 2];\narr.reverse(); // [2, 1]\narr; // [2, 1]\n\n",[21,8465,8466,8484,8496],{"__ignoreMap":161},[165,8467,8468,8470,8472,8474,8476,8478,8480,8482],{"class":167,"line":168},[165,8469,1996],{"class":238},[165,8471,7525],{"class":190},[165,8473,1642],{"class":238},[165,8475,7530],{"class":174},[165,8477,3162],{"class":190},[165,8479,83],{"class":174},[165,8481,746],{"class":190},[165,8483,7541],{"class":174},[165,8485,8486,8488,8491,8493],{"class":167,"line":178},[165,8487,7546],{"class":174},[165,8489,8490],{"class":220},"reverse",[165,8492,7612],{"class":174},[165,8494,8495],{"class":213},"// [2, 1]\n",[165,8497,8498,8500],{"class":167,"line":187},[165,8499,7565],{"class":174},[165,8501,8495],{"class":213},[17,8503,8504],{},"тоже самое, что и reverse, но без мутации исходного массива. Возвращает новый массив.",[156,8506,8508],{"className":7514,"code":8507,"language":7516,"meta":161,"style":161},"const arr = [1, 2];\narr.toReversed(); // [2, 1]\narr; // [1, 2]\n\n",[21,8509,8510,8528,8539],{"__ignoreMap":161},[165,8511,8512,8514,8516,8518,8520,8522,8524,8526],{"class":167,"line":168},[165,8513,1996],{"class":238},[165,8515,7525],{"class":190},[165,8517,1642],{"class":238},[165,8519,7530],{"class":174},[165,8521,3162],{"class":190},[165,8523,83],{"class":174},[165,8525,746],{"class":190},[165,8527,7541],{"class":174},[165,8529,8530,8532,8535,8537],{"class":167,"line":178},[165,8531,7546],{"class":174},[165,8533,8534],{"class":220},"toReversed",[165,8536,7612],{"class":174},[165,8538,8495],{"class":213},[165,8540,8541,8543],{"class":167,"line":187},[165,8542,7565],{"class":174},[165,8544,8545],{"class":213},"// [1, 2]\n",[17,8547,8548],{},"создает копию массива с замененным элементом по выбранному индексу",[156,8550,8552],{"className":7514,"code":8551,"language":7516,"meta":161,"style":161},"['a', 'b', 'c'].with(2, 'd'); // ['a', 'b', 'd']\n\n",[21,8553,8554],{"__ignoreMap":161},[165,8555,8556,8558,8560,8562,8564,8566,8568,8570,8573,8575,8577,8579,8581,8583],{"class":167,"line":168},[165,8557,919],{"class":174},[165,8559,7533],{"class":485},[165,8561,83],{"class":174},[165,8563,7538],{"class":485},[165,8565,83],{"class":174},[165,8567,7554],{"class":485},[165,8569,7751],{"class":174},[165,8571,8572],{"class":220},"with",[165,8574,1290],{"class":174},[165,8576,746],{"class":190},[165,8578,83],{"class":174},[165,8580,7768],{"class":485},[165,8582,7557],{"class":174},[165,8584,8585],{"class":213},"// ['a', 'b', 'd']\n",[17,8587,8588],{},"возвращает массив, где все элементы соответствуют переданному условию в коллбеке",[156,8590,8592],{"className":7514,"code":8591,"language":7516,"meta":161,"style":161},"['Mike', 'Timofey', 'Alexander'].map(name => name.length > 5); // ['Timofey', 'Alexander']\n",[21,8593,8594],{"__ignoreMap":161},[165,8595,8596,8598,8600,8602,8604,8606,8608,8610,8612,8614,8616,8618,8620,8622,8624,8626,8628],{"class":167,"line":168},[165,8597,919],{"class":174},[165,8599,8113],{"class":485},[165,8601,83],{"class":174},[165,8603,8127],{"class":485},[165,8605,83],{"class":174},[165,8607,8141],{"class":485},[165,8609,7751],{"class":174},[165,8611,7395],{"class":220},[165,8613,1290],{"class":174},[165,8615,3318],{"class":1649},[165,8617,2010],{"class":238},[165,8619,8283],{"class":174},[165,8621,7511],{"class":190},[165,8623,1003],{"class":238},[165,8625,8290],{"class":190},[165,8627,7557],{"class":174},[165,8629,8630],{"class":213},"// ['Timofey', 'Alexander']\n",[17,8632,8633],{},"обходит массив и аккумулирует значение.\nЗначение аккумулятора задается в коллбеке.",[156,8635,8637],{"className":7514,"code":8636,"language":7516,"meta":161,"style":161},"const employers = [\n  { age: 10, name: 'Mike' }, // Сын маминой подруги\n  { age: 19, name: 'Timofey' },\n  { age: 18, name: 'Alexander' }\n];\n\nconst totalAge = employers.reduce((acc, curr) => {\n  return acc + curr.age;\n}, 0); // 47\n\nconst averageAge = totalAge / employers.length; // 16.66\n",[21,8638,8639,8651,8667,8679,8691,8695,8699,8727,8740,8752,8756],{"__ignoreMap":161},[165,8640,8641,8643,8646,8648],{"class":167,"line":168},[165,8642,1996],{"class":238},[165,8644,8645],{"class":190}," employers",[165,8647,1642],{"class":238},[165,8649,8650],{"class":174}," [\n",[165,8652,8653,8655,8657,8659,8661,8664],{"class":167,"line":178},[165,8654,8105],{"class":174},[165,8656,852],{"class":190},[165,8658,8110],{"class":174},[165,8660,8113],{"class":485},[165,8662,8663],{"class":174}," }, ",[165,8665,8666],{"class":213},"// Сын маминой подруги\n",[165,8668,8669,8671,8673,8675,8677],{"class":167,"line":187},[165,8670,8105],{"class":174},[165,8672,8122],{"class":190},[165,8674,8110],{"class":174},[165,8676,8127],{"class":485},[165,8678,3194],{"class":174},[165,8680,8681,8683,8685,8687,8689],{"class":167,"line":197},[165,8682,8105],{"class":174},[165,8684,8136],{"class":190},[165,8686,8110],{"class":174},[165,8688,8141],{"class":485},[165,8690,3669],{"class":174},[165,8692,8693],{"class":167,"line":203},[165,8694,7541],{"class":174},[165,8696,8697],{"class":167,"line":210},[165,8698,207],{"emptyLinePlaceholder":206},[165,8700,8701,8703,8706,8708,8711,8713,8715,8717,8719,8721,8723,8725],{"class":167,"line":217},[165,8702,1996],{"class":238},[165,8704,8705],{"class":190}," totalAge",[165,8707,1642],{"class":238},[165,8709,8710],{"class":174}," employers.",[165,8712,3286],{"class":220},[165,8714,3289],{"class":174},[165,8716,3292],{"class":1649},[165,8718,83],{"class":174},[165,8720,3496],{"class":1649},[165,8722,1431],{"class":174},[165,8724,1800],{"class":238},[165,8726,184],{"class":174},[165,8728,8729,8731,8734,8737],{"class":167,"line":226},[165,8730,2616],{"class":238},[165,8732,8733],{"class":174}," acc ",[165,8735,8736],{"class":238},"+",[165,8738,8739],{"class":174}," curr.age;\n",[165,8741,8742,8745,8747,8749],{"class":167,"line":244},[165,8743,8744],{"class":174},"}, ",[165,8746,270],{"class":190},[165,8748,7557],{"class":174},[165,8750,8751],{"class":213},"// 47\n",[165,8753,8754],{"class":167,"line":632},[165,8755,207],{"emptyLinePlaceholder":206},[165,8757,8758,8760,8763,8765,8768,8770,8772,8774,8776],{"class":167,"line":646},[165,8759,1996],{"class":238},[165,8761,8762],{"class":190}," averageAge",[165,8764,1642],{"class":238},[165,8766,8767],{"class":174}," totalAge ",[165,8769,849],{"class":238},[165,8771,8710],{"class":174},[165,8773,7511],{"class":190},[165,8775,307],{"class":174},[165,8777,8778],{"class":213},"// 16.66\n",[17,8780,8781,8782,8784],{},"Метод ",[21,8783,3286],{}," очень полезен для агрегации:",[156,8786,8788],{"className":7514,"code":8787,"language":7516,"meta":161,"style":161},"const employers = [\n  { age: 10, name: 'Mike', position: 'son' },\n  { age: 19, name: 'Timofey', position: 'frontend' },\n  { age: 18, name: 'Alexander', position: 'frontend' }\n];\n\nconst employersByPosition = employers.reduce((acc, curr) => {\n  acc[curr.position] = (acc[curr.position] || []).concat(curr);\n  return acc;\n}, {}); // { son: [{ name: 'Mike',... }], frontend: [{ name: 'Timofey', ...}, { name: 'Alexander',...}] }\n\n",[21,8789,8790,8800,8818,8835,8851,8855,8859,8886,8907,8913],{"__ignoreMap":161},[165,8791,8792,8794,8796,8798],{"class":167,"line":168},[165,8793,1996],{"class":238},[165,8795,8645],{"class":190},[165,8797,1642],{"class":238},[165,8799,8650],{"class":174},[165,8801,8802,8804,8806,8808,8810,8813,8816],{"class":167,"line":178},[165,8803,8105],{"class":174},[165,8805,852],{"class":190},[165,8807,8110],{"class":174},[165,8809,8113],{"class":485},[165,8811,8812],{"class":174},", position: ",[165,8814,8815],{"class":485},"'son'",[165,8817,3194],{"class":174},[165,8819,8820,8822,8824,8826,8828,8830,8833],{"class":167,"line":187},[165,8821,8105],{"class":174},[165,8823,8122],{"class":190},[165,8825,8110],{"class":174},[165,8827,8127],{"class":485},[165,8829,8812],{"class":174},[165,8831,8832],{"class":485},"'frontend'",[165,8834,3194],{"class":174},[165,8836,8837,8839,8841,8843,8845,8847,8849],{"class":167,"line":197},[165,8838,8105],{"class":174},[165,8840,8136],{"class":190},[165,8842,8110],{"class":174},[165,8844,8141],{"class":485},[165,8846,8812],{"class":174},[165,8848,8832],{"class":485},[165,8850,3669],{"class":174},[165,8852,8853],{"class":167,"line":203},[165,8854,7541],{"class":174},[165,8856,8857],{"class":167,"line":210},[165,8858,207],{"emptyLinePlaceholder":206},[165,8860,8861,8863,8866,8868,8870,8872,8874,8876,8878,8880,8882,8884],{"class":167,"line":217},[165,8862,1996],{"class":238},[165,8864,8865],{"class":190}," employersByPosition",[165,8867,1642],{"class":238},[165,8869,8710],{"class":174},[165,8871,3286],{"class":220},[165,8873,3289],{"class":174},[165,8875,3292],{"class":1649},[165,8877,83],{"class":174},[165,8879,3496],{"class":1649},[165,8881,1431],{"class":174},[165,8883,1800],{"class":238},[165,8885,184],{"class":174},[165,8887,8888,8891,8893,8896,8899,8902,8904],{"class":167,"line":226},[165,8889,8890],{"class":174},"  acc[curr.position] ",[165,8892,482],{"class":238},[165,8894,8895],{"class":174}," (acc[curr.position] ",[165,8897,8898],{"class":238},"||",[165,8900,8901],{"class":174}," []).",[165,8903,7754],{"class":220},[165,8905,8906],{"class":174},"(curr);\n",[165,8908,8909,8911],{"class":167,"line":244},[165,8910,2616],{"class":238},[165,8912,3349],{"class":174},[165,8914,8915,8918],{"class":167,"line":632},[165,8916,8917],{"class":174},"}, {}); ",[165,8919,8920],{"class":213},"// { son: [{ name: 'Mike',... }], frontend: [{ name: 'Timofey', ...}, { name: 'Alexander',...}] }\n",[17,8922,8923,8924,8927],{},"Если не передать ",[21,8925,8926],{},"initAcc"," - итерация будет со 2-го элемента.",[17,8929,8930],{},"тоже самое, что и обычный reduce, но справа налево.",[30,8932,8934],{"id":8933},"sort-array","Сортировка массива",[17,8936,8937],{},"принимает коллбеком функцию, в которой принимаются два аргумента - элементы массива,\nа return должен определить их порядок. Мутирует исходный массив и возвращает ссылку на него.",[17,8939,8940],{},"идет первым\nбез изменений\nидет первым",[17,8942,8943],{},"Если коллбек не передан - сортирует в лексическом порядке по возрастанию, подойдет только для строк.",[156,8945,8947],{"className":7514,"code":8946,"language":7516,"meta":161,"style":161},"[4, 2, 3, 1].sort((a, b) => a - b); // [1, 2, 3, 4]\n[4, 2, 3, 1].sort((a, b) => b - a); // [4, 3, 2, 1]\n['b', 'c', 'a'].sort(); // ['a', 'b', 'c']\n",[21,8948,8949,8997,9042],{"__ignoreMap":161},[165,8950,8951,8953,8956,8958,8960,8962,8964,8966,8968,8970,8973,8975,8977,8979,8982,8984,8986,8989,8991,8994],{"class":167,"line":168},[165,8952,919],{"class":174},[165,8954,8955],{"class":190},"4",[165,8957,83],{"class":174},[165,8959,746],{"class":190},[165,8961,83],{"class":174},[165,8963,7901],{"class":190},[165,8965,83],{"class":174},[165,8967,3162],{"class":190},[165,8969,7751],{"class":174},[165,8971,8972],{"class":220},"sort",[165,8974,3289],{"class":174},[165,8976,1326],{"class":1649},[165,8978,83],{"class":174},[165,8980,8981],{"class":1649},"b",[165,8983,1431],{"class":174},[165,8985,1800],{"class":238},[165,8987,8988],{"class":174}," a ",[165,8990,7863],{"class":238},[165,8992,8993],{"class":174}," b); ",[165,8995,8996],{"class":213},"// [1, 2, 3, 4]\n",[165,8998,8999,9001,9003,9005,9007,9009,9011,9013,9015,9017,9019,9021,9023,9025,9027,9029,9031,9034,9036,9039],{"class":167,"line":178},[165,9000,919],{"class":174},[165,9002,8955],{"class":190},[165,9004,83],{"class":174},[165,9006,746],{"class":190},[165,9008,83],{"class":174},[165,9010,7901],{"class":190},[165,9012,83],{"class":174},[165,9014,3162],{"class":190},[165,9016,7751],{"class":174},[165,9018,8972],{"class":220},[165,9020,3289],{"class":174},[165,9022,1326],{"class":1649},[165,9024,83],{"class":174},[165,9026,8981],{"class":1649},[165,9028,1431],{"class":174},[165,9030,1800],{"class":238},[165,9032,9033],{"class":174}," b ",[165,9035,7863],{"class":238},[165,9037,9038],{"class":174}," a); ",[165,9040,9041],{"class":213},"// [4, 3, 2, 1]\n",[165,9043,9044,9046,9048,9050,9052,9054,9056,9058,9060,9062],{"class":167,"line":187},[165,9045,919],{"class":174},[165,9047,7538],{"class":485},[165,9049,83],{"class":174},[165,9051,7554],{"class":485},[165,9053,83],{"class":174},[165,9055,7533],{"class":485},[165,9057,7751],{"class":174},[165,9059,8972],{"class":220},[165,9061,7612],{"class":174},[165,9063,7568],{"class":213},[17,9065,9066,9067,9070],{},"тоже самое, что и метод ",[21,9068,9069],{},".sort",",\nно вместо мутации исходного массива создает новый отсортированный массив",[156,9072,9074],{"className":7514,"code":9073,"language":7516,"meta":161,"style":161},"const arr = [4, 2, 3, 1];\nconst sortedArray = arr.toSorted((a, b) => a - b);\n\narr; // [4, 2, 3, 1];\nsortedArray; // [1, 2, 3, 4]\n\n",[21,9075,9076,9102,9136,9140,9147],{"__ignoreMap":161},[165,9077,9078,9080,9082,9084,9086,9088,9090,9092,9094,9096,9098,9100],{"class":167,"line":168},[165,9079,1996],{"class":238},[165,9081,7525],{"class":190},[165,9083,1642],{"class":238},[165,9085,7530],{"class":174},[165,9087,8955],{"class":190},[165,9089,83],{"class":174},[165,9091,746],{"class":190},[165,9093,83],{"class":174},[165,9095,7901],{"class":190},[165,9097,83],{"class":174},[165,9099,3162],{"class":190},[165,9101,7541],{"class":174},[165,9103,9104,9106,9109,9111,9114,9117,9119,9121,9123,9125,9127,9129,9131,9133],{"class":167,"line":178},[165,9105,1996],{"class":238},[165,9107,9108],{"class":190}," sortedArray",[165,9110,1642],{"class":238},[165,9112,9113],{"class":174}," arr.",[165,9115,9116],{"class":220},"toSorted",[165,9118,3289],{"class":174},[165,9120,1326],{"class":1649},[165,9122,83],{"class":174},[165,9124,8981],{"class":1649},[165,9126,1431],{"class":174},[165,9128,1800],{"class":238},[165,9130,8988],{"class":174},[165,9132,7863],{"class":238},[165,9134,9135],{"class":174}," b);\n",[165,9137,9138],{"class":167,"line":187},[165,9139,207],{"emptyLinePlaceholder":206},[165,9141,9142,9144],{"class":167,"line":197},[165,9143,7565],{"class":174},[165,9145,9146],{"class":213},"// [4, 2, 3, 1];\n",[165,9148,9149,9152],{"class":167,"line":203},[165,9150,9151],{"class":174},"sortedArray; ",[165,9153,8996],{"class":213},[30,9155,9157],{"id":9156},"useful-methods","Полезные методы",[17,9159,9160],{},"возвращает элемент массива по указанному индексу.",[17,9162,9163,9164],{},"Основная фишка - можно легко достать последний элемент, передав ",[21,9165,9166],{},"-1",[156,9168,9170],{"className":7514,"code":9169,"language":7516,"meta":161,"style":161},"[1, 2, 3 ].at(0) // 1\n  [1, 2, 3 ].at(-1); // 3\n\n",[21,9171,9172,9201],{"__ignoreMap":161},[165,9173,9174,9176,9178,9180,9182,9184,9186,9189,9192,9194,9196,9198],{"class":167,"line":168},[165,9175,919],{"class":174},[165,9177,3162],{"class":190},[165,9179,83],{"class":174},[165,9181,746],{"class":190},[165,9183,83],{"class":174},[165,9185,7901],{"class":190},[165,9187,9188],{"class":174}," ].",[165,9190,9191],{"class":220},"at",[165,9193,1290],{"class":174},[165,9195,270],{"class":190},[165,9197,1431],{"class":174},[165,9199,9200],{"class":213},"// 1\n",[165,9202,9203,9206,9208,9210,9212,9214,9216,9218,9220,9222,9224,9226,9228],{"class":167,"line":178},[165,9204,9205],{"class":174},"  [",[165,9207,3162],{"class":190},[165,9209,83],{"class":174},[165,9211,746],{"class":190},[165,9213,83],{"class":174},[165,9215,7901],{"class":190},[165,9217,9188],{"class":174},[165,9219,9191],{"class":220},[165,9221,1290],{"class":174},[165,9223,7863],{"class":238},[165,9225,3162],{"class":190},[165,9227,7557],{"class":174},[165,9229,7560],{"class":213},[17,9231,9232],{},"позволяет создать массив из Iterable\nили ArrayLike сущностей.",[17,9234,9235],{},"Очень полезен, чтобы получить массив Element:",[156,9237,9239],{"className":7514,"code":9238,"language":7516,"meta":161,"style":161},"const linkElements = document.querySelectorAll('.myClass');\nconst arrLinks = Array.from(linkElements); // Element[]\n\n",[21,9240,9241,9264],{"__ignoreMap":161},[165,9242,9243,9245,9248,9250,9253,9256,9258,9261],{"class":167,"line":168},[165,9244,1996],{"class":238},[165,9246,9247],{"class":190}," linkElements",[165,9249,1642],{"class":238},[165,9251,9252],{"class":174}," document.",[165,9254,9255],{"class":220},"querySelectorAll",[165,9257,1290],{"class":174},[165,9259,9260],{"class":485},"'.myClass'",[165,9262,9263],{"class":174},");\n",[165,9265,9266,9268,9271,9273,9276,9278,9281],{"class":167,"line":178},[165,9267,1996],{"class":238},[165,9269,9270],{"class":190}," arrLinks",[165,9272,1642],{"class":238},[165,9274,9275],{"class":174}," Array.",[165,9277,4294],{"class":220},[165,9279,9280],{"class":174},"(linkElements); ",[165,9282,9283],{"class":213},"// Element[]\n",[17,9285,9286,9287],{},"Можно сразу же сделать ",[21,9288,9289],{},".map",[156,9291,9293],{"className":7514,"code":9292,"language":7516,"meta":161,"style":161},"const linkElements = document.getElementsByTagName('a');\nconst arrLinks = Array.from(linkElements, element => element.href); // string[]\n\n",[21,9294,9295,9314],{"__ignoreMap":161},[165,9296,9297,9299,9301,9303,9305,9308,9310,9312],{"class":167,"line":168},[165,9298,1996],{"class":238},[165,9300,9247],{"class":190},[165,9302,1642],{"class":238},[165,9304,9252],{"class":174},[165,9306,9307],{"class":220},"getElementsByTagName",[165,9309,1290],{"class":174},[165,9311,7533],{"class":485},[165,9313,9263],{"class":174},[165,9315,9316,9318,9320,9322,9324,9326,9329,9332,9334,9337],{"class":167,"line":178},[165,9317,1996],{"class":238},[165,9319,9270],{"class":190},[165,9321,1642],{"class":238},[165,9323,9275],{"class":174},[165,9325,4294],{"class":220},[165,9327,9328],{"class":174},"(linkElements, ",[165,9330,9331],{"class":1649},"element",[165,9333,2010],{"class":238},[165,9335,9336],{"class":174}," element.href); ",[165,9338,9339],{"class":213},"// string[]\n",[17,9341,9342,9343,9346],{},"Часто используется, чтобы превратить ",[21,9344,9345],{},"Set"," в массив",[156,9348,9350],{"className":7514,"code":9349,"language":7516,"meta":161,"style":161},"const mySet = newSet([1, 2]);\nmySet.add(3);\nArray.from(mySet); // [1, 2, 3]\n\n",[21,9351,9352,9376,9390],{"__ignoreMap":161},[165,9353,9354,9356,9359,9361,9364,9367,9369,9371,9373],{"class":167,"line":168},[165,9355,1996],{"class":238},[165,9357,9358],{"class":190}," mySet",[165,9360,1642],{"class":238},[165,9362,9363],{"class":220}," newSet",[165,9365,9366],{"class":174},"([",[165,9368,3162],{"class":190},[165,9370,83],{"class":174},[165,9372,746],{"class":190},[165,9374,9375],{"class":174},"]);\n",[165,9377,9378,9381,9384,9386,9388],{"class":167,"line":178},[165,9379,9380],{"class":174},"mySet.",[165,9382,9383],{"class":220},"add",[165,9385,1290],{"class":174},[165,9387,7901],{"class":190},[165,9389,9263],{"class":174},[165,9391,9392,9395,9397,9400],{"class":167,"line":187},[165,9393,9394],{"class":174},"Array.",[165,9396,4294],{"class":220},[165,9398,9399],{"class":174},"(mySet); ",[165,9401,9402],{"class":213},"// [1, 2, 3]\n",[17,9404,9405,9406,9346],{},"Или чтобы превратить ",[21,9407,9408],{},"Map",[156,9410,9412],{"className":7514,"code":9411,"language":7516,"meta":161,"style":161},"const myMap = new Map();\nmyMap.set('a', 1).set('b', 2);\n\nconst array = Array.from(myMap, ([name, value]) => ({ name, value }));\n",[21,9413,9414,9432,9463,9467],{"__ignoreMap":161},[165,9415,9416,9418,9421,9423,9426,9429],{"class":167,"line":168},[165,9417,1996],{"class":238},[165,9419,9420],{"class":190}," myMap",[165,9422,1642],{"class":238},[165,9424,9425],{"class":238}," new",[165,9427,9428],{"class":220}," Map",[165,9430,9431],{"class":174},"();\n",[165,9433,9434,9437,9440,9442,9444,9446,9448,9451,9453,9455,9457,9459,9461],{"class":167,"line":178},[165,9435,9436],{"class":174},"myMap.",[165,9438,9439],{"class":220},"set",[165,9441,1290],{"class":174},[165,9443,7533],{"class":485},[165,9445,83],{"class":174},[165,9447,3162],{"class":190},[165,9449,9450],{"class":174},").",[165,9452,9439],{"class":220},[165,9454,1290],{"class":174},[165,9456,7538],{"class":485},[165,9458,83],{"class":174},[165,9460,746],{"class":190},[165,9462,9263],{"class":174},[165,9464,9465],{"class":167,"line":187},[165,9466,207],{"emptyLinePlaceholder":206},[165,9468,9469,9471,9474,9476,9478,9480,9483,9485,9487,9490,9492,9494],{"class":167,"line":197},[165,9470,1996],{"class":238},[165,9472,9473],{"class":190}," array",[165,9475,1642],{"class":238},[165,9477,9275],{"class":174},[165,9479,4294],{"class":220},[165,9481,9482],{"class":174},"(myMap, ([",[165,9484,3318],{"class":1649},[165,9486,83],{"class":174},[165,9488,9489],{"class":1649},"value",[165,9491,3638],{"class":174},[165,9493,1800],{"class":238},[165,9495,9496],{"class":174}," ({ name, value }));\n",[17,9498,9499],{},"Можно использовать, чтобы создать пустой массив",[156,9501,9503],{"className":7514,"code":9502,"language":7516,"meta":161,"style":161},"Array.from(new Array(3)); // [undefined, undefined, undefined]\n\n",[21,9504,9505],{"__ignoreMap":161},[165,9506,9507,9509,9511,9513,9516,9519,9521,9523,9526],{"class":167,"line":168},[165,9508,9394],{"class":174},[165,9510,4294],{"class":220},[165,9512,1290],{"class":174},[165,9514,9515],{"class":238},"new",[165,9517,9518],{"class":220}," Array",[165,9520,1290],{"class":174},[165,9522,7901],{"class":190},[165,9524,9525],{"class":174},")); ",[165,9527,9528],{"class":213},"// [undefined, undefined, undefined]\n",[17,9530,9531,9532,1585],{},"создает новый массив, убирая вложенность на заданную ",[21,9533,9534],{},"depth",[156,9536,9538],{"className":7514,"code":9537,"language":7516,"meta":161,"style":161},"[1, [2, 3]].flat(); // [1, 2, 3]\n[1, [2, 3, [4, 5]]].flat(); // [1, 2, 3, [4, 5]]\n[1, [2, 3, [4, 5]]].flat(2); // [1, 2, 3, 4, 5]\n\n",[21,9539,9540,9564,9597],{"__ignoreMap":161},[165,9541,9542,9544,9546,9548,9550,9552,9554,9557,9560,9562],{"class":167,"line":168},[165,9543,919],{"class":174},[165,9545,3162],{"class":190},[165,9547,7765],{"class":174},[165,9549,746],{"class":190},[165,9551,83],{"class":174},[165,9553,7901],{"class":190},[165,9555,9556],{"class":174},"]].",[165,9558,9559],{"class":220},"flat",[165,9561,7612],{"class":174},[165,9563,9402],{"class":213},[165,9565,9566,9568,9570,9572,9574,9576,9578,9580,9582,9584,9587,9590,9592,9594],{"class":167,"line":178},[165,9567,919],{"class":174},[165,9569,3162],{"class":190},[165,9571,7765],{"class":174},[165,9573,746],{"class":190},[165,9575,83],{"class":174},[165,9577,7901],{"class":190},[165,9579,7765],{"class":174},[165,9581,8955],{"class":190},[165,9583,83],{"class":174},[165,9585,9586],{"class":190},"5",[165,9588,9589],{"class":174},"]]].",[165,9591,9559],{"class":220},[165,9593,7612],{"class":174},[165,9595,9596],{"class":213},"// [1, 2, 3, [4, 5]]\n",[165,9598,9599,9601,9603,9605,9607,9609,9611,9613,9615,9617,9619,9621,9623,9625,9627,9629],{"class":167,"line":187},[165,9600,919],{"class":174},[165,9602,3162],{"class":190},[165,9604,7765],{"class":174},[165,9606,746],{"class":190},[165,9608,83],{"class":174},[165,9610,7901],{"class":190},[165,9612,7765],{"class":174},[165,9614,8955],{"class":190},[165,9616,83],{"class":174},[165,9618,9586],{"class":190},[165,9620,9589],{"class":174},[165,9622,9559],{"class":220},[165,9624,1290],{"class":174},[165,9626,746],{"class":190},[165,9628,7557],{"class":174},[165,9630,9631],{"class":213},"// [1, 2, 3, 4, 5]\n",[12,9633,9635],{"id":9634},"objects","Object",[30,9637,9639],{"id":9638},"config-for-properties","Управление свойствами",[17,9641,9642],{},"метод создания объекта, который дает нам больше контроля\nнад свойствами и методами, позволяя задать для каждого:",[17,9644,9645,9646,9649,9650,9653],{},"writeable - можно ли перезаписывать\nenumerable - является ли перечисляемым, будет ли доступен ",[21,9647,9648],{},"for...in","\nconfigurable - можно ли удалять или менять при помощи ",[21,9651,9652],{},"defineProperty","\nset - функция для записи значения\nget - функция для чтения значения",[156,9655,9657],{"className":7514,"code":9656,"language":7516,"meta":161,"style":161},"const tom = Object.create(Object.prototype, {  \n  name: {    \n    value: \"Tim\",\n    enumerable: true, // доступно для перебора\n    writable: false  // не доступно для записи\n  },  \n  age: { \n    value: 20,\n    enumerable: true, // доступно для перебора\n    writable: true // доступно для записи\n  },  \n  print: {    \n    value: function() { console.log(`Name: ${this.name}  Age: ${this.age}`);},\n    enumerable: false, // не доступно для перебора\n    writable: false, // не доступно для записи\n  }  \n});\n\n",[21,9658,9659,9685,9690,9700,9712,9723,9728,9733,9742,9752,9761,9765,9770,9812,9823,9834,9839],{"__ignoreMap":161},[165,9660,9661,9663,9666,9668,9670,9673,9675,9677,9679,9682],{"class":167,"line":168},[165,9662,1996],{"class":238},[165,9664,9665],{"class":190}," tom",[165,9667,1642],{"class":238},[165,9669,3257],{"class":174},[165,9671,9672],{"class":220},"create",[165,9674,1290],{"class":174},[165,9676,9635],{"class":190},[165,9678,1585],{"class":174},[165,9680,9681],{"class":190},"prototype",[165,9683,9684],{"class":174},", {  \n",[165,9686,9687],{"class":167,"line":178},[165,9688,9689],{"class":174},"  name: {    \n",[165,9691,9692,9695,9698],{"class":167,"line":187},[165,9693,9694],{"class":174},"    value: ",[165,9696,9697],{"class":485},"\"Tim\"",[165,9699,175],{"class":174},[165,9701,9702,9705,9707,9709],{"class":167,"line":197},[165,9703,9704],{"class":174},"    enumerable: ",[165,9706,8249],{"class":190},[165,9708,83],{"class":174},[165,9710,9711],{"class":213},"// доступно для перебора\n",[165,9713,9714,9717,9720],{"class":167,"line":203},[165,9715,9716],{"class":174},"    writable: ",[165,9718,9719],{"class":190},"false",[165,9721,9722],{"class":213},"  // не доступно для записи\n",[165,9724,9725],{"class":167,"line":210},[165,9726,9727],{"class":174},"  },  \n",[165,9729,9730],{"class":167,"line":217},[165,9731,9732],{"class":174},"  age: { \n",[165,9734,9735,9737,9740],{"class":167,"line":226},[165,9736,9694],{"class":174},[165,9738,9739],{"class":190},"20",[165,9741,175],{"class":174},[165,9743,9744,9746,9748,9750],{"class":167,"line":244},[165,9745,9704],{"class":174},[165,9747,8249],{"class":190},[165,9749,83],{"class":174},[165,9751,9711],{"class":213},[165,9753,9754,9756,9758],{"class":167,"line":632},[165,9755,9716],{"class":174},[165,9757,8249],{"class":190},[165,9759,9760],{"class":213}," // доступно для записи\n",[165,9762,9763],{"class":167,"line":646},[165,9764,9727],{"class":174},[165,9766,9767],{"class":167,"line":651},[165,9768,9769],{"class":174},"  print: {    \n",[165,9771,9772,9775,9777,9780,9783,9785,9787,9790,9793,9795,9797,9800,9802,9804,9807,9809],{"class":167,"line":656},[165,9773,9774],{"class":220},"    value",[165,9776,232],{"class":174},[165,9778,9779],{"class":238},"function",[165,9781,9782],{"class":174},"() { console.",[165,9784,7244],{"class":220},[165,9786,1290],{"class":174},[165,9788,9789],{"class":485},"`Name: ${",[165,9791,9792],{"class":190},"this",[165,9794,1585],{"class":485},[165,9796,3318],{"class":174},[165,9798,9799],{"class":485},"}  Age: ${",[165,9801,9792],{"class":190},[165,9803,1585],{"class":485},[165,9805,9806],{"class":174},"age",[165,9808,3028],{"class":485},[165,9810,9811],{"class":174},");},\n",[165,9813,9814,9816,9818,9820],{"class":167,"line":663},[165,9815,9704],{"class":174},[165,9817,9719],{"class":190},[165,9819,83],{"class":174},[165,9821,9822],{"class":213},"// не доступно для перебора\n",[165,9824,9825,9827,9829,9831],{"class":167,"line":679},[165,9826,9716],{"class":174},[165,9828,9719],{"class":190},[165,9830,83],{"class":174},[165,9832,9833],{"class":213},"// не доступно для записи\n",[165,9835,9836],{"class":167,"line":693},[165,9837,9838],{"class":174},"  }  \n",[165,9840,9841],{"class":167,"line":705},[165,9842,1934],{"class":174},[17,9844,9845,9846],{},"позволяет настроить выбранное свойство объекта.\nНе сработает, если ",[21,9847,9848],{},"configurable = false ",[17,9850,9851],{},"запрещает добавление свойств",[17,9853,9854,9855,1585],{},"запрещает добавление и удаление свойств, все текущие свойства делает ",[21,9856,9857],{},"configurable: false",[17,9859,9860,9861,83,9863,1585],{},"запрещает добавление, удаление и изменение свойств,все текущие свойства делает ",[21,9862,9857],{},[21,9864,9865],{},"writable: false",[30,9867,9869],{"id":9868},"helpers-for-properties","Хелперы для свойств",[17,9871,9872,9873,9876,9877,9880],{},"копирует все ",[1598,9874,9875],{},"перечисляемые"," ",[21,9878,9879],{},"enumerable: true"," свойства из одного или\nболее объектов в целевой объект. Копирование неглубокое, для объектов, массивов, функций будет скопирована ссылка.",[17,9882,9883,9884,1585],{},"проверяет, является ли свойство собственным(не унаследованным).\nЧтобы проверить унаследованное свойство можно воспользоваться ",[21,9885,9886],{},"in",[156,9888,9890],{"className":7514,"code":9889,"language":7516,"meta":161,"style":161},"const person = {\n  name: \"Zhenya\"\n};\n\nObject.hasOwn(person, \"name\"); // true\nObject.hasOwn(person, \"toString\"); // false\n\n",[21,9891,9892,9903,9910,9914,9918,9936],{"__ignoreMap":161},[165,9893,9894,9896,9899,9901],{"class":167,"line":168},[165,9895,1996],{"class":238},[165,9897,9898],{"class":190}," person",[165,9900,1642],{"class":238},[165,9902,184],{"class":174},[165,9904,9905,9907],{"class":167,"line":178},[165,9906,1712],{"class":174},[165,9908,9909],{"class":485},"\"Zhenya\"\n",[165,9911,9912],{"class":167,"line":187},[165,9913,2429],{"class":174},[165,9915,9916],{"class":167,"line":197},[165,9917,207],{"emptyLinePlaceholder":206},[165,9919,9920,9923,9926,9929,9932,9934],{"class":167,"line":203},[165,9921,9922],{"class":174},"Object.",[165,9924,9925],{"class":220},"hasOwn",[165,9927,9928],{"class":174},"(person, ",[165,9930,9931],{"class":485},"\"name\"",[165,9933,7557],{"class":174},[165,9935,8295],{"class":213},[165,9937,9938,9940,9942,9944,9947,9949],{"class":167,"line":210},[165,9939,9922],{"class":174},[165,9941,9925],{"class":220},[165,9943,9928],{"class":174},[165,9945,9946],{"class":485},"\"toString\"",[165,9948,7557],{"class":174},[165,9950,8343],{"class":213},[17,9952,9953,9954],{},"проверяет, был ли вызван ",[21,9955,9956],{},"preventExtensions",[17,9958,9953,9959],{},[21,9960,9961],{},"seal",[17,9963,9953,9964],{},[21,9965,9966],{},"freeze",[30,9968,9970],{"id":9969},"keys-and-values","Ключи и значения",[17,9972,9973,9974,9976],{},"вернет ",[1598,9975,9875],{}," свойства в виде массива",[156,9978,9980],{"className":7514,"code":9979,"language":7516,"meta":161,"style":161},"Object.entries({\n  name: 'Zhenya',\n  age: 27,\n}); // [['name', 'Zhenya'], ['age', 27]]\n\n",[21,9981,9982,9991,10000,10010],{"__ignoreMap":161},[165,9983,9984,9986,9989],{"class":167,"line":168},[165,9985,9922],{"class":174},[165,9987,9988],{"class":220},"entries",[165,9990,1707],{"class":174},[165,9992,9993,9995,9998],{"class":167,"line":178},[165,9994,1712],{"class":174},[165,9996,9997],{"class":485},"'Zhenya'",[165,9999,175],{"class":174},[165,10001,10002,10005,10008],{"class":167,"line":187},[165,10003,10004],{"class":174},"  age: ",[165,10006,10007],{"class":190},"27",[165,10009,175],{"class":174},[165,10011,10012,10015],{"class":167,"line":197},[165,10013,10014],{"class":174},"}); ",[165,10016,10017],{"class":213},"// [['name', 'Zhenya'], ['age', 27]]\n",[17,10019,10020],{},"обратно превратит массив в объект",[156,10022,10024],{"className":7514,"code":10023,"language":7516,"meta":161,"style":161},"Object.fromEntries([['name', 'Zhenya'], ['age', 27]]); // { name: 'Zhenya', age: 27 }\n\n",[21,10025,10026],{"__ignoreMap":161},[165,10027,10028,10030,10033,10036,10039,10041,10043,10045,10048,10050,10052,10055],{"class":167,"line":168},[165,10029,9922],{"class":174},[165,10031,10032],{"class":220},"fromEntries",[165,10034,10035],{"class":174},"([[",[165,10037,10038],{"class":485},"'name'",[165,10040,83],{"class":174},[165,10042,9997],{"class":485},[165,10044,7776],{"class":174},[165,10046,10047],{"class":485},"'age'",[165,10049,83],{"class":174},[165,10051,10007],{"class":190},[165,10053,10054],{"class":174},"]]); ",[165,10056,10057],{"class":213},"// { name: 'Zhenya', age: 27 }\n",[17,10059,10060],{},"по простому - получить массив ключей.\nВернет только собственные(без прототипа) и перечисляемые(for...in) свойства.",[156,10062,10064],{"className":7514,"code":10063,"language":7516,"meta":161,"style":161},"Object.keys({\n  name: 'Zhenya',\n  age: 27,\n}); // ['name', 'age']\n\n",[21,10065,10066,10074,10082,10090],{"__ignoreMap":161},[165,10067,10068,10070,10072],{"class":167,"line":168},[165,10069,9922],{"class":174},[165,10071,3260],{"class":220},[165,10073,1707],{"class":174},[165,10075,10076,10078,10080],{"class":167,"line":178},[165,10077,1712],{"class":174},[165,10079,9997],{"class":485},[165,10081,175],{"class":174},[165,10083,10084,10086,10088],{"class":167,"line":187},[165,10085,10004],{"class":174},[165,10087,10007],{"class":190},[165,10089,175],{"class":174},[165,10091,10092,10094],{"class":167,"line":197},[165,10093,10014],{"class":174},[165,10095,10096],{"class":213},"// ['name', 'age']\n",[17,10098,10099],{},"вернет массив значений",[156,10101,10103],{"className":7514,"code":10102,"language":7516,"meta":161,"style":161},"Object.values({\n  name: 'Zhenya',\n  age: 27,\n}); // ['Zhenya', 27]\n\n",[21,10104,10105,10113,10121,10129],{"__ignoreMap":161},[165,10106,10107,10109,10111],{"class":167,"line":168},[165,10108,9922],{"class":174},[165,10110,7095],{"class":220},[165,10112,1707],{"class":174},[165,10114,10115,10117,10119],{"class":167,"line":178},[165,10116,1712],{"class":174},[165,10118,9997],{"class":485},[165,10120,175],{"class":174},[165,10122,10123,10125,10127],{"class":167,"line":187},[165,10124,10004],{"class":174},[165,10126,10007],{"class":190},[165,10128,175],{"class":174},[165,10130,10131,10133],{"class":167,"line":197},[165,10132,10014],{"class":174},[165,10134,10135],{"class":213},"// ['Zhenya', 27]\n",[12,10137,10139],{"id":10138},"functions","Function",[17,10141,10142,10143,10145],{},"вызывает функцию с указанным значением ",[21,10144,9792],{}," и аргументами.",[156,10147,10149],{"className":1623,"code":10148,"language":1626,"meta":161,"style":161},"\nfunction multiply(a, b) {\n  this.logger(a * b);\n  return aa * b;\n}\n\nmultiply.call({ logger: console.log }, 2, 2); // 4\n\n// Мы не можем указать контекст для стрелочной функции\nconst addArrowFn = (a, b) => {\n  this.logger(a + b);\n  return a + b;\n};\n\nmultiply.call({ logger: console.log }, 2, 2); // TypeError: this.logger is not a function\n\n\n",[21,10150,10151,10155,10172,10190,10202,10206,10210,10232,10236,10241,10264,10278,10288,10292,10296],{"__ignoreMap":161},[165,10152,10153],{"class":167,"line":168},[165,10154,207],{"emptyLinePlaceholder":206},[165,10156,10157,10159,10162,10164,10166,10168,10170],{"class":167,"line":178},[165,10158,9779],{"class":238},[165,10160,10161],{"class":220}," multiply",[165,10163,1290],{"class":174},[165,10165,1326],{"class":1649},[165,10167,83],{"class":174},[165,10169,8981],{"class":1649},[165,10171,855],{"class":174},[165,10173,10174,10177,10179,10182,10185,10188],{"class":167,"line":187},[165,10175,10176],{"class":190},"  this",[165,10178,1585],{"class":174},[165,10180,10181],{"class":220},"logger",[165,10183,10184],{"class":174},"(a ",[165,10186,10187],{"class":238},"*",[165,10189,9135],{"class":174},[165,10191,10192,10194,10197,10199],{"class":167,"line":197},[165,10193,2616],{"class":238},[165,10195,10196],{"class":174}," aa ",[165,10198,10187],{"class":238},[165,10200,10201],{"class":174}," b;\n",[165,10203,10204],{"class":167,"line":203},[165,10205,200],{"class":174},[165,10207,10208],{"class":167,"line":210},[165,10209,207],{"emptyLinePlaceholder":206},[165,10211,10212,10215,10218,10221,10223,10225,10227,10229],{"class":167,"line":217},[165,10213,10214],{"class":174},"multiply.",[165,10216,10217],{"class":220},"call",[165,10219,10220],{"class":174},"({ logger: console.log }, ",[165,10222,746],{"class":190},[165,10224,83],{"class":174},[165,10226,746],{"class":190},[165,10228,7557],{"class":174},[165,10230,10231],{"class":213},"// 4\n",[165,10233,10234],{"class":167,"line":226},[165,10235,207],{"emptyLinePlaceholder":206},[165,10237,10238],{"class":167,"line":244},[165,10239,10240],{"class":213},"// Мы не можем указать контекст для стрелочной функции\n",[165,10242,10243,10245,10248,10250,10252,10254,10256,10258,10260,10262],{"class":167,"line":632},[165,10244,1996],{"class":238},[165,10246,10247],{"class":220}," addArrowFn",[165,10249,1642],{"class":238},[165,10251,839],{"class":174},[165,10253,1326],{"class":1649},[165,10255,83],{"class":174},[165,10257,8981],{"class":1649},[165,10259,1431],{"class":174},[165,10261,1800],{"class":238},[165,10263,184],{"class":174},[165,10265,10266,10268,10270,10272,10274,10276],{"class":167,"line":646},[165,10267,10176],{"class":190},[165,10269,1585],{"class":174},[165,10271,10181],{"class":220},[165,10273,10184],{"class":174},[165,10275,8736],{"class":238},[165,10277,9135],{"class":174},[165,10279,10280,10282,10284,10286],{"class":167,"line":651},[165,10281,2616],{"class":238},[165,10283,8988],{"class":174},[165,10285,8736],{"class":238},[165,10287,10201],{"class":174},[165,10289,10290],{"class":167,"line":656},[165,10291,2429],{"class":174},[165,10293,10294],{"class":167,"line":663},[165,10295,207],{"emptyLinePlaceholder":206},[165,10297,10298,10300,10302,10304,10306,10308,10310,10312],{"class":167,"line":679},[165,10299,10214],{"class":174},[165,10301,10217],{"class":220},[165,10303,10220],{"class":174},[165,10305,746],{"class":190},[165,10307,83],{"class":174},[165,10309,746],{"class":190},[165,10311,7557],{"class":174},[165,10313,10314],{"class":213},"// TypeError: this.logger is not a function\n",[17,10316,8015,10317,10319],{},[21,10318,10217],{},", но аргументы передаются в виде массива",[156,10321,10323],{"className":1623,"code":10322,"language":1626,"meta":161,"style":161},"multiply.apply({ logger: console.log }, [2, 3]); // 6\n",[21,10324,10325],{"__ignoreMap":161},[165,10326,10327,10329,10332,10335,10337,10339,10341,10343],{"class":167,"line":168},[165,10328,10214],{"class":174},[165,10330,10331],{"class":220},"apply",[165,10333,10334],{"class":174},"({ logger: console.log }, [",[165,10336,746],{"class":190},[165,10338,83],{"class":174},[165,10340,7901],{"class":190},[165,10342,7782],{"class":174},[165,10344,10345],{"class":213},"// 6\n",[17,10347,10348,10349],{},"создает новую функцию, привязывая ей переданный ",[21,10350,9792],{},[156,10352,10354],{"className":1623,"code":10353,"language":1626,"meta":161,"style":161},"\nconst multiplyTwo = add.bind({ logger: console.log }, 2);\n\nmultiplyTwo(4); // 8\n\n",[21,10355,10356,10360,10381,10385],{"__ignoreMap":161},[165,10357,10358],{"class":167,"line":168},[165,10359,207],{"emptyLinePlaceholder":206},[165,10361,10362,10364,10367,10369,10372,10375,10377,10379],{"class":167,"line":178},[165,10363,1996],{"class":238},[165,10365,10366],{"class":190}," multiplyTwo",[165,10368,1642],{"class":238},[165,10370,10371],{"class":174}," add.",[165,10373,10374],{"class":220},"bind",[165,10376,10220],{"class":174},[165,10378,746],{"class":190},[165,10380,9263],{"class":174},[165,10382,10383],{"class":167,"line":187},[165,10384,207],{"emptyLinePlaceholder":206},[165,10386,10387,10390,10392,10394,10396],{"class":167,"line":197},[165,10388,10389],{"class":220},"multiplyTwo",[165,10391,1290],{"class":174},[165,10393,8955],{"class":190},[165,10395,7557],{"class":174},[165,10397,10398],{"class":213},"// 8\n",[1531,10400,10401],{},"html pre.shiki code .szBVR, html code.shiki .szBVR{--shiki-default:#D73A49;--shiki-dark:#F97583}html pre.shiki code .sj4cs, html code.shiki .sj4cs{--shiki-default:#005CC5;--shiki-dark:#79B8FF}html pre.shiki code .sVt8B, html code.shiki .sVt8B{--shiki-default:#24292E;--shiki-dark:#E1E4E8}html pre.shiki code .sZZnC, html code.shiki .sZZnC{--shiki-default:#032F62;--shiki-dark:#9ECBFF}html pre.shiki code .sScJk, html code.shiki .sScJk{--shiki-default:#6F42C1;--shiki-dark:#B392F0}html pre.shiki code .sJ8bj, html code.shiki .sJ8bj{--shiki-default:#6A737D;--shiki-dark:#6A737D}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html pre.shiki code .s4XuR, html code.shiki .s4XuR{--shiki-default:#E36209;--shiki-dark:#FFAB70}",{"title":161,"searchDepth":178,"depth":178,"links":10403},[10404,10411,10416],{"id":14,"depth":178,"text":7497,"children":10405},[10406,10407,10408,10409,10410],{"id":7500,"depth":187,"text":7501},{"id":8086,"depth":187,"text":8087},{"id":8411,"depth":187,"text":8412},{"id":8933,"depth":187,"text":8934},{"id":9156,"depth":187,"text":9157},{"id":9634,"depth":178,"text":9635,"children":10412},[10413,10414,10415],{"id":9638,"depth":187,"text":9639},{"id":9868,"depth":187,"text":9869},{"id":9969,"depth":187,"text":9970},{"id":10138,"depth":178,"text":10139},"2024-02-26","Методы массивов, объектов и функций, которые полезно знать",{},"/blog/js-built-in-methods","/images/js-methods-preview.jpg",{"title":7492,"description":10418},"blog/js-built-in-methods",[10425,1554,1555],"javascript","_bGMRXaznUGP2MjaGbSPahHCUXjfLaUYUdPN_3-xtjY",1751114696965]